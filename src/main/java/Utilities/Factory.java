package Utilities;

import NeuralNetwork.ActivationFunctions.RectifiedLinearUnit;
import NeuralNetwork.ActivationFunctions.Sigmoid;
import NeuralNetwork.BuildingBlocks.Batch;
import NeuralNetwork.BuildingBlocks.DataList;
import NeuralNetwork.BuildingBlocks.RegularizerStruct;
import NeuralNetwork.Layers.Common.ActivationLayer;
import NeuralNetwork.Layers.Common.HiddenLayer;
import NeuralNetwork.Layers.Common.LossLayer;
import NeuralNetwork.LossFunctions.BinaryCrossEntropy;
import NeuralNetwork.NeuralNetwork;

public class Factory {
    public static Batch getInputBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ 0.0, 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0029955569189041853, 0.00964660756289959 }));
        batch.addRow(new DataList(new double[]{ 0.012880969792604446, 0.015562848187983036 }));
        batch.addRow(new DataList(new double[]{ 0.029974790289998055, 0.004448096267879009 }));
        batch.addRow(new DataList(new double[]{ 0.0393124595284462, 0.009328283369541168 }));
        batch.addRow(new DataList(new double[]{ 0.0008288290700875223, 0.050498250871896744 }));
        batch.addRow(new DataList(new double[]{ 0.0534835159778595, 0.028506282716989517 }));
        batch.addRow(new DataList(new double[]{ 0.04173619672656059, 0.05707521364092827 }));
        batch.addRow(new DataList(new double[]{ 0.05546339228749275, 0.058768682181835175 }));
        batch.addRow(new DataList(new double[]{ 0.08160383254289627, 0.04006590694189072 }));
        batch.addRow(new DataList(new double[]{ 0.08918751031160355, 0.047419704496860504 }));
        batch.addRow(new DataList(new double[]{ 0.10716083645820618, -0.02936382405459881 }));
        batch.addRow(new DataList(new double[]{ 0.12118320167064667, -0.0026475144550204277 }));
        batch.addRow(new DataList(new double[]{ 0.12877772748470306, 0.02567947469651699 }));
        batch.addRow(new DataList(new double[]{ 0.14111296832561493, -0.00922449491918087 }));
        batch.addRow(new DataList(new double[]{ 0.15057946741580963, -0.016812633723020554 }));
        batch.addRow(new DataList(new double[]{ 0.11347636580467224, -0.11507779359817505 }));
        batch.addRow(new DataList(new double[]{ 0.17155250906944275, -0.007518164813518524 }));
        batch.addRow(new DataList(new double[]{ 0.16718684136867523, -0.07145914435386658 }));
        batch.addRow(new DataList(new double[]{ 0.19132587313652039, 0.015079323202371597 }));
        batch.addRow(new DataList(new double[]{ 0.13677190244197845, 0.14867955446243286 }));
        batch.addRow(new DataList(new double[]{ 0.13560642302036285, -0.16311439871788025 }));
        batch.addRow(new DataList(new double[]{ 0.1040247455239296, -0.19637098908424377 }));
        batch.addRow(new DataList(new double[]{ 0.2156335413455963, -0.08646537363529205 }));
        batch.addRow(new DataList(new double[]{ -0.09830333292484283, -0.22159866988658905 }));
        batch.addRow(new DataList(new double[]{ 0.24603141844272614, -0.05689945071935654 }));
        batch.addRow(new DataList(new double[]{ 0.12416625022888184, -0.23142017424106598 }));
        batch.addRow(new DataList(new double[]{ 0.13264194130897522, -0.23829872906208038 }));
        batch.addRow(new DataList(new double[]{ -0.12380430102348328, -0.254291832447052 }));
        batch.addRow(new DataList(new double[]{ -0.14615526795387268, -0.253862589597702 }));
        batch.addRow(new DataList(new double[]{ 0.010245291516184807, -0.30285707116127014 }));
        batch.addRow(new DataList(new double[]{ -0.05569057539105415, -0.30813923478126526 }));
        batch.addRow(new DataList(new double[]{ 0.11179529130458832, -0.30328360199928284 }));
        batch.addRow(new DataList(new double[]{ 0.23880670964717865, -0.23255637288093567 }));
        batch.addRow(new DataList(new double[]{ -0.04070228710770607, -0.3410138785839081 }));
        batch.addRow(new DataList(new double[]{ -0.1607210487127304, -0.31489044427871704 }));
        batch.addRow(new DataList(new double[]{ -0.32569506764411926, -0.1617223471403122 }));
        batch.addRow(new DataList(new double[]{ -0.3479260504245758, -0.1364811211824417 }));
        batch.addRow(new DataList(new double[]{ -0.1850746124982834, -0.336272656917572 }));
        batch.addRow(new DataList(new double[]{ -0.2373548150062561, -0.3144056797027588 }));
        batch.addRow(new DataList(new double[]{ -0.14781402051448822, -0.37603145837783813 }));
        batch.addRow(new DataList(new double[]{ -0.11835025995969772, -0.3968706727027893 }));
        batch.addRow(new DataList(new double[]{ -0.10401209443807602, -0.41129443049430847 }));
        batch.addRow(new DataList(new double[]{ -0.35689398646354675, 0.24754977226257324 }));
        batch.addRow(new DataList(new double[]{ -0.3850840926170349, -0.22190339863300323 }));
        batch.addRow(new DataList(new double[]{ -0.4211059510707855, -0.17111791670322418 }));
        batch.addRow(new DataList(new double[]{ -0.35766899585723877, -0.29659605026245117 }));
        batch.addRow(new DataList(new double[]{ -0.4327418804168701, 0.1952424794435501 }));
        batch.addRow(new DataList(new double[]{ -0.3797777593135834, -0.30140820145606995 }));
        batch.addRow(new DataList(new double[]{ -0.49072572588920593, 0.06452345848083496 }));
        batch.addRow(new DataList(new double[]{ -0.5020192265510559, -0.05525142699480057 }));
        batch.addRow(new DataList(new double[]{ -0.41547295451164246, 0.30457067489624023 }));
        batch.addRow(new DataList(new double[]{ -0.5041040182113647, 0.14754442870616913 }));
        batch.addRow(new DataList(new double[]{ -0.5346620678901672, 0.027200432494282722 }));
        batch.addRow(new DataList(new double[]{ -0.4071617126464844, 0.3629600405693054 }));
        batch.addRow(new DataList(new double[]{ -0.2728874087333679, 0.4839157462120056 }));
        batch.addRow(new DataList(new double[]{ -0.3162872791290283, 0.46896663308143616 }));
        batch.addRow(new DataList(new double[]{ -0.2105485498905182, 0.5358787775039673 }));
        batch.addRow(new DataList(new double[]{ -0.3957984149456024, 0.43194201588630676 }));
        batch.addRow(new DataList(new double[]{ -0.2883087992668152, 0.521580159664154 }));
        batch.addRow(new DataList(new double[]{ -0.32131946086883545, 0.5138708353042603 }));
        batch.addRow(new DataList(new double[]{ -0.1828801929950714, 0.5883960723876953 }));
        batch.addRow(new DataList(new double[]{ -0.25943702459335327, 0.5699976086616516 }));
        batch.addRow(new DataList(new double[]{ -0.4487569034099579, 0.4511938691139221 }));
        batch.addRow(new DataList(new double[]{ 0.17254099249839783, 0.6230137348175049 }));
        batch.addRow(new DataList(new double[]{ 0.053503748029470444, 0.6543819904327393 }));
        batch.addRow(new DataList(new double[]{ -0.2788938581943512, 0.6055267453193665 }));
        batch.addRow(new DataList(new double[]{ 0.44415152072906494, 0.5106309056282043 }));
        batch.addRow(new DataList(new double[]{ 0.09030307084321976, 0.6809067130088806 }));
        batch.addRow(new DataList(new double[]{ 0.4556201100349426, 0.5274249315261841 }));
        batch.addRow(new DataList(new double[]{ 0.6459842920303345, 0.28749483823776245 }));
        batch.addRow(new DataList(new double[]{ 0.5846171379089355, 0.41540107131004333 }));
        batch.addRow(new DataList(new double[]{ 0.7272241711616516, 0.00840271171182394 }));
        batch.addRow(new DataList(new double[]{ 0.33600854873657227, 0.6563674807548523 }));
        batch.addRow(new DataList(new double[]{ 0.7356560826301575, 0.13239562511444092 }));
        batch.addRow(new DataList(new double[]{ 0.6162975430488586, 0.44056597352027893 }));
        batch.addRow(new DataList(new double[]{ 0.6280736327171326, 0.44141942262649536 }));
        batch.addRow(new DataList(new double[]{ 0.7263660430908203, 0.2780839502811432 }));
        batch.addRow(new DataList(new double[]{ 0.7811311483383179, 0.10289375483989716 }));
        batch.addRow(new DataList(new double[]{ 0.7885484099388123, -0.12232409417629242 }));
        batch.addRow(new DataList(new double[]{ 0.757483720779419, 0.2814481258392334 }));
        batch.addRow(new DataList(new double[]{ 0.5826627016067505, -0.5743915438652039 }));
        batch.addRow(new DataList(new double[]{ 0.6534839868545532, -0.5089313387870789 }));
        batch.addRow(new DataList(new double[]{ 0.8146985769271851, 0.19787292182445526 }));
        batch.addRow(new DataList(new double[]{ 0.16507667303085327, -0.8322717547416687 }));
        batch.addRow(new DataList(new double[]{ -0.09342218190431595, -0.8534881472587585 }));
        batch.addRow(new DataList(new double[]{ 0.12854312360286713, -0.859123706817627 }));
        batch.addRow(new DataList(new double[]{ 0.5839788913726807, -0.6566862463951111 }));
        batch.addRow(new DataList(new double[]{ 0.7802731990814209, -0.42579007148742676 }));
        batch.addRow(new DataList(new double[]{ -0.08290096372365952, -0.8951593637466431 }));
        batch.addRow(new DataList(new double[]{ 0.4638494849205017, -0.7818503379821777 }));
        batch.addRow(new DataList(new double[]{ -0.3395498991012573, -0.8541777729988098 }));
        batch.addRow(new DataList(new double[]{ 0.02574850432574749, -0.9289361238479614 }));
        batch.addRow(new DataList(new double[]{ -0.4149204194545746, -0.8427941799163818 }));
        batch.addRow(new DataList(new double[]{ -0.23339489102363586, -0.9203627109527588 }));
        batch.addRow(new DataList(new double[]{ -0.4805203378200531, -0.8306170105934143 }));
        batch.addRow(new DataList(new double[]{ -0.2655962407588959, -0.9326150417327881 }));
        batch.addRow(new DataList(new double[]{ -0.9346775412559509, -0.29390808939933777 }));
        batch.addRow(new DataList(new double[]{ -0.5069613456726074, -0.8502295017242432 }));
        batch.addRow(new DataList(new double[]{ -0.7005848288536072, -0.713569164276123 }));
        batch.addRow(new DataList(new double[]{ -0.0, -0.0 }));
        batch.addRow(new DataList(new double[]{ -2.376367774559185e-05, -0.010100982151925564 }));
        batch.addRow(new DataList(new double[]{ -0.002859049942344427, -0.019998686388134956 }));
        batch.addRow(new DataList(new double[]{ -0.029650840908288956, -0.006253101862967014 }));
        batch.addRow(new DataList(new double[]{ -0.015462019480764866, -0.03732844069600105 }));
        batch.addRow(new DataList(new double[]{ -0.044767674058675766, 0.02337980829179287 }));
        batch.addRow(new DataList(new double[]{ -0.05014582723379135, -0.03403661027550697 }));
        batch.addRow(new DataList(new double[]{ -0.0557611808180809, -0.04347620904445648 }));
        batch.addRow(new DataList(new double[]{ -0.057788774371147156, 0.05648365616798401 }));
        batch.addRow(new DataList(new double[]{ -0.07216310501098633, 0.05528968572616577 }));
        batch.addRow(new DataList(new double[]{ -0.05889495089650154, 0.08206354081630707 }));
        batch.addRow(new DataList(new double[]{ -0.093630850315094, 0.059824272990226746 }));
        batch.addRow(new DataList(new double[]{ -0.118445485830307, -0.02574966661632061 }));
        batch.addRow(new DataList(new double[]{ -0.038580670952796936, 0.1255176067352295 }));
        batch.addRow(new DataList(new double[]{ -0.13572698831558228, 0.03970066085457802 }));
        batch.addRow(new DataList(new double[]{ -0.09169381111860275, 0.12061958760023117 }));
        batch.addRow(new DataList(new double[]{ -0.07414070516824722, 0.14360688626766205 }));
        batch.addRow(new DataList(new double[]{ -0.13731279969215393, 0.10311151295900345 }));
        batch.addRow(new DataList(new double[]{ -0.07763251662254333, 0.16441120207309723 }));
        batch.addRow(new DataList(new double[]{ -0.03550570458173752, 0.18860626220703125 }));
        batch.addRow(new DataList(new double[]{ -0.07077987492084503, 0.18921515345573425 }));
        batch.addRow(new DataList(new double[]{ -0.17790226638317108, 0.11552572250366211 }));
        batch.addRow(new DataList(new double[]{ -0.043065618723630905, 0.2180093377828598 }));
        batch.addRow(new DataList(new double[]{ 0.09474381804466248, 0.21212659776210785 }));
        batch.addRow(new DataList(new double[]{ -0.11396535485982895, 0.21396590769290924 }));
        batch.addRow(new DataList(new double[]{ -0.02921106666326523, 0.2508300542831421 }));
        batch.addRow(new DataList(new double[]{ -0.04124075546860695, 0.25936800241470337 }));
        batch.addRow(new DataList(new double[]{ 0.24124161899089813, 0.12721101939678192 }));
        batch.addRow(new DataList(new double[]{ 0.1592436134815216, 0.23373769223690033 }));
        batch.addRow(new DataList(new double[]{ 0.15724778175354004, 0.24714511632919312 }));
        batch.addRow(new DataList(new double[]{ 0.023906756192445755, 0.3020857870578766 }));
        batch.addRow(new DataList(new double[]{ 0.2320321500301361, 0.21026721596717834 }));
        batch.addRow(new DataList(new double[]{ 0.10436996072530746, 0.3059183657169342 }));
        batch.addRow(new DataList(new double[]{ 0.23510749638080597, 0.23629552125930786 }));
        batch.addRow(new DataList(new double[]{ 0.1795233190059662, 0.29277727007865906 }));
        batch.addRow(new DataList(new double[]{ 0.3413239121437073, 0.09211532026529312 }));
        batch.addRow(new DataList(new double[]{ 0.3554563820362091, 0.0766952782869339 }));
        batch.addRow(new DataList(new double[]{ 0.32727643847465515, 0.18047095835208893 }));
        batch.addRow(new DataList(new double[]{ 0.38189080357551575, 0.03861768916249275 }));
        batch.addRow(new DataList(new double[]{ 0.28976595401763916, 0.2668781280517578 }));
        batch.addRow(new DataList(new double[]{ 0.2689616084098816, 0.3015100359916687 }));
        batch.addRow(new DataList(new double[]{ 0.40380004048347473, -0.09197083860635757 }));
        batch.addRow(new DataList(new double[]{ 0.41672009229660034, -0.07953614741563797 }));
        batch.addRow(new DataList(new double[]{ 0.3761124014854431, -0.2172410637140274 }));
        batch.addRow(new DataList(new double[]{ 0.031948577612638474, -0.4432946443557739 }));
        batch.addRow(new DataList(new double[]{ 0.28942936658859253, -0.350488543510437 }));
        batch.addRow(new DataList(new double[]{ 0.4639967978000641, -0.024562105536460876 }));
        batch.addRow(new DataList(new double[]{ 0.18574097752571106, -0.4369044005870819 }));
        batch.addRow(new DataList(new double[]{ 0.4841582775115967, -0.025861280038952827 }));
        batch.addRow(new DataList(new double[]{ 0.4135897159576416, -0.271879643201828 }));
        batch.addRow(new DataList(new double[]{ 0.3220980763435364, -0.38901007175445557 }));
        batch.addRow(new DataList(new double[]{ -0.15234753489494324, -0.4921090602874756 }));
        batch.addRow(new DataList(new double[]{ 0.3868250250816345, -0.3553260862827301 }));
        batch.addRow(new DataList(new double[]{ 0.3717731535434723, -0.3852117955684662 }));
        batch.addRow(new DataList(new double[]{ 0.16257008910179138, -0.520664632320404 }));
        batch.addRow(new DataList(new double[]{ 0.25858524441719055, -0.49170687794685364 }));
        batch.addRow(new DataList(new double[]{ -0.2770881652832031, -0.4931424558162689 }));
        batch.addRow(new DataList(new double[]{ 0.27114585041999817, -0.5079140663146973 }));
        batch.addRow(new DataList(new double[]{ 0.24055340886116028, -0.534195065498352 }));
        batch.addRow(new DataList(new double[]{ -0.01949790120124817, -0.5956405401229858 }));
        batch.addRow(new DataList(new double[]{ -0.06269163638353348, -0.6028094291687012 }));
        batch.addRow(new DataList(new double[]{ -0.6090221405029297, -0.09352616965770721 }));
        batch.addRow(new DataList(new double[]{ -0.536692202091217, -0.3227481544017792 }));
        batch.addRow(new DataList(new double[]{ -0.4096883237361908, -0.48694369196891785 }));
        batch.addRow(new DataList(new double[]{ -0.09274741262197495, -0.639776885509491 }));
        batch.addRow(new DataList(new double[]{ -0.6289767622947693, -0.18832612037658691 }));
        batch.addRow(new DataList(new double[]{ -0.2951262593269348, -0.5977833867073059 }));
        batch.addRow(new DataList(new double[]{ -0.19178970158100128, -0.6490232348442078 }));
        batch.addRow(new DataList(new double[]{ -0.6752814054489136, 0.1256328523159027 }));
        batch.addRow(new DataList(new double[]{ -0.6890817880630493, -0.10456134378910065 }));
        batch.addRow(new DataList(new double[]{ -0.6846718788146973, 0.17655998468399048 }));
        batch.addRow(new DataList(new double[]{ -0.7161902785301208, 0.037506308406591415 }));
        batch.addRow(new DataList(new double[]{ -0.6633561253547668, 0.2981346845626831 }));
        batch.addRow(new DataList(new double[]{ -0.7178660035133362, -0.1684887409210205 }));
        batch.addRow(new DataList(new double[]{ -0.709262490272522, -0.23593470454216003 }));
        batch.addRow(new DataList(new double[]{ -0.6086443066596985, 0.45107996463775635 }));
        batch.addRow(new DataList(new double[]{ -0.767671525478363, -0.002837903331965208 }));
        batch.addRow(new DataList(new double[]{ -0.76854407787323, 0.11949186772108078 }));
        batch.addRow(new DataList(new double[]{ -0.7339145541191101, 0.2865700125694275 }));
        batch.addRow(new DataList(new double[]{ -0.6052729487419128, 0.5200157761573792 }));
        batch.addRow(new DataList(new double[]{ -0.6552993655204773, 0.4728396534919739 }));
        batch.addRow(new DataList(new double[]{ -0.7992424368858337, 0.1750229299068451 }));
        batch.addRow(new DataList(new double[]{ -0.6428716778755188, 0.5222723484039307 }));
        batch.addRow(new DataList(new double[]{ -0.8383654356002808, -0.00555246090516448 }));
        batch.addRow(new DataList(new double[]{ -0.044179026037454605, 0.8473339080810547 }));
        batch.addRow(new DataList(new double[]{ -0.7509674429893494, 0.4161941111087799 }));
        batch.addRow(new DataList(new double[]{ -0.5694468021392822, 0.6560085415840149 }));
        batch.addRow(new DataList(new double[]{ -0.0312734916806221, 0.8782312273979187 }));
        batch.addRow(new DataList(new double[]{ -0.28841540217399597, 0.8407972455024719 }));
        batch.addRow(new DataList(new double[]{ 0.71077561378479, 0.5504369735717773 }));
        batch.addRow(new DataList(new double[]{ -0.3582617938518524, 0.8355206847190857 }));
        batch.addRow(new DataList(new double[]{ 0.42110809683799744, 0.8170567750930786 }));
        batch.addRow(new DataList(new double[]{ 0.3820929229259491, 0.8471070528030396 }));
        batch.addRow(new DataList(new double[]{ -0.03724965453147888, 0.9386551380157471 }));
        batch.addRow(new DataList(new double[]{ 0.7478968501091003, 0.5849708914756775 }));
        batch.addRow(new DataList(new double[]{ 0.5888223052024841, 0.7577022314071655 }));
        batch.addRow(new DataList(new double[]{ 0.9149960279464722, 0.32108327746391296 }));
        batch.addRow(new DataList(new double[]{ 0.958145797252655, 0.20484302937984467 }));
        batch.addRow(new DataList(new double[]{ 0.838562548160553, -0.5260350704193115 }));
        batch.addRow(new DataList(new double[]{ 0.9694269895553589, -0.24538004398345947 }));

        return batch;
    }

    public static Batch getTargetBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));

        return batch;
    }

    public static Batch getTestingInputBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ -0.0, 0.0 }));
        batch.addRow(new DataList(new double[]{ -0.006562912371009588, 0.0076784491539001465 }));
        batch.addRow(new DataList(new double[]{ 0.0011327696265652776, 0.020170236006379128 }));
        batch.addRow(new DataList(new double[]{ -0.0023526540026068687, 0.030211566016077995 }));
        batch.addRow(new DataList(new double[]{ 0.029897142201662064, 0.027178067713975906 }));
        batch.addRow(new DataList(new double[]{ 0.044438187032938004, 0.02400015853345394 }));
        batch.addRow(new DataList(new double[]{ 0.05899003893136978, 0.013902155682444572 }));
        batch.addRow(new DataList(new double[]{ 0.06404893845319748, 0.02995368093252182 }));
        batch.addRow(new DataList(new double[]{ 0.03936075046658516, 0.07057391107082367 }));
        batch.addRow(new DataList(new double[]{ 0.031270068138837814, 0.08536185324192047 }));
        batch.addRow(new DataList(new double[]{ 0.09942547976970673, 0.017821744084358215 }));
        batch.addRow(new DataList(new double[]{ 0.10673656314611435, 0.03087046556174755 }));
        batch.addRow(new DataList(new double[]{ 0.039031531661748886, 0.11475590616464615 }));
        batch.addRow(new DataList(new double[]{ 0.13089394569396973, 0.010483914986252785 }));
        batch.addRow(new DataList(new double[]{ 0.13699673116207123, -0.035069309175014496 }));
        batch.addRow(new DataList(new double[]{ 0.15146322548389435, 0.003966519143432379 }));
        batch.addRow(new DataList(new double[]{ 0.16143645346164703, 0.007619244046509266 }));
        batch.addRow(new DataList(new double[]{ 0.16605783998966217, 0.043721653521060944 }));
        batch.addRow(new DataList(new double[]{ 0.16161619126796722, 0.08329501003026962 }));
        batch.addRow(new DataList(new double[]{ 0.14061538875102997, -0.13061504065990448 }));
        batch.addRow(new DataList(new double[]{ 0.19330225884914398, -0.05870603024959564 }));
        batch.addRow(new DataList(new double[]{ 0.19248397648334503, -0.08913655579090118 }));
        batch.addRow(new DataList(new double[]{ 0.011774448677897453, -0.22191007435321808 }));
        batch.addRow(new DataList(new double[]{ 0.10647956281900406, -0.206485316157341 }));
        batch.addRow(new DataList(new double[]{ 0.12295861542224884, -0.2089274823665619 }));
        batch.addRow(new DataList(new double[]{ 0.13098043203353882, -0.2159007489681244 }));
        batch.addRow(new DataList(new double[]{ -0.06361692398786545, -0.25480470061302185 }));
        batch.addRow(new DataList(new double[]{ -0.1175144612789154, -0.24611078202724457 }));
        batch.addRow(new DataList(new double[]{ -0.04266875609755516, -0.2795911431312561 }));
        batch.addRow(new DataList(new double[]{ -0.02306262217462063, -0.2920200228691101 }));
        batch.addRow(new DataList(new double[]{ 0.27764835953712463, -0.121403269469738 }));
        batch.addRow(new DataList(new double[]{ -0.01614459976553917, -0.3127148449420929 }));
        batch.addRow(new DataList(new double[]{ -0.008298756554722786, -0.32312577962875366 }));
        batch.addRow(new DataList(new double[]{ -0.07881882786750793, -0.32388070225715637 }));
        batch.addRow(new DataList(new double[]{ -0.23766101896762848, -0.24792012572288513 }));
        batch.addRow(new DataList(new double[]{ 0.2928355038166046, -0.1980772763490677 }));
        batch.addRow(new DataList(new double[]{ -0.07584448158740997, -0.35563889145851135 }));
        batch.addRow(new DataList(new double[]{ -0.24943825602531433, -0.2783167064189911 }));
        batch.addRow(new DataList(new double[]{ -0.17156188189983368, -0.3433634042739868 }));
        batch.addRow(new DataList(new double[]{ -0.03515097498893738, -0.39236801862716675 }));
        batch.addRow(new DataList(new double[]{ -0.39269837737083435, -0.09506126493215561 }));
        batch.addRow(new DataList(new double[]{ -0.3760008215904236, -0.17359864711761475 }));
        batch.addRow(new DataList(new double[]{ -0.24486705660820007, -0.3464415669441223 }));
        batch.addRow(new DataList(new double[]{ -0.4246608018875122, -0.0911998376250267 }));
        batch.addRow(new DataList(new double[]{ -0.43991756439208984, 0.06327244639396667 }));
        batch.addRow(new DataList(new double[]{ -0.4484250247478485, -0.07434093952178955 }));
        batch.addRow(new DataList(new double[]{ -0.4389148950576782, 0.15247970819473267 }));
        batch.addRow(new DataList(new double[]{ -0.47344061732292175, 0.035201456397771835 }));
        batch.addRow(new DataList(new double[]{ -0.483931303024292, -0.029808398336172104 }));
        batch.addRow(new DataList(new double[]{ -0.46618449687957764, -0.16627390682697296 }));
        batch.addRow(new DataList(new double[]{ -0.4832112789154053, 0.1469111293554306 }));
        batch.addRow(new DataList(new double[]{ -0.4428340792655945, 0.26320916414260864 }));
        batch.addRow(new DataList(new double[]{ -0.29342642426490784, 0.4356502592563629 }));
        batch.addRow(new DataList(new double[]{ -0.4467463195323944, 0.29499346017837524 }));
        batch.addRow(new DataList(new double[]{ -0.3079562187194824, 0.4502039849758148 }));
        batch.addRow(new DataList(new double[]{ -0.5197740793228149, 0.19615527987480164 }));
        batch.addRow(new DataList(new double[]{ -0.4813879132270813, 0.2970404624938965 }));
        batch.addRow(new DataList(new double[]{ -0.31591612100601196, 0.4813458025455475 }));
        batch.addRow(new DataList(new double[]{ -0.4771977365016937, 0.33987143635749817 }));
        batch.addRow(new DataList(new double[]{ 0.05150676518678665, 0.5937296748161316 }));
        batch.addRow(new DataList(new double[]{ 0.005445936229079962, 0.6060361266136169 }));
        batch.addRow(new DataList(new double[]{ 0.011077212169766426, 0.6160620450973511 }));
        batch.addRow(new DataList(new double[]{ 0.09290198236703873, 0.6193335652351379 }));
        batch.addRow(new DataList(new double[]{ 0.5645031929016113, 0.293759822845459 }));
        batch.addRow(new DataList(new double[]{ -0.03422783687710762, 0.6455578804016113 }));
        batch.addRow(new DataList(new double[]{ -0.4792603850364685, 0.4487626850605011 }));
        batch.addRow(new DataList(new double[]{ 0.30970299243927, 0.5903630256652832 }));
        batch.addRow(new DataList(new double[]{ 0.2999582290649414, 0.6066626310348511 }));
        batch.addRow(new DataList(new double[]{ 0.2204567790031433, 0.6505285501480103 }));
        batch.addRow(new DataList(new double[]{ 0.13648277521133423, 0.6834758520126343 }));
        batch.addRow(new DataList(new double[]{ 0.3803231716156006, 0.5960732102394104 }));
        batch.addRow(new DataList(new double[]{ 0.5952898859977722, 0.39995652437210083 }));
        batch.addRow(new DataList(new double[]{ 0.48938798904418945, 0.5379823446273804 }));
        batch.addRow(new DataList(new double[]{ 0.5514430999755859, -0.48952075839042664 }));
        batch.addRow(new DataList(new double[]{ 0.4879714548587799, 0.5662176012992859 }));
        batch.addRow(new DataList(new double[]{ 0.5915474891662598, 0.47327855229377747 }));
        batch.addRow(new DataList(new double[]{ 0.18938499689102173, 0.7439495325088501 }));
        batch.addRow(new DataList(new double[]{ 0.7768236398696899, -0.03851407393813133 }));
        batch.addRow(new DataList(new double[]{ 0.4366409480571747, 0.6558183431625366 }));
        batch.addRow(new DataList(new double[]{ 0.7897308468818665, 0.11444206535816193 }));
        batch.addRow(new DataList(new double[]{ 0.8048831224441528, -0.07181718945503235 }));
        batch.addRow(new DataList(new double[]{ 0.8178830146789551, 0.022110648453235626 }));
        batch.addRow(new DataList(new double[]{ 0.22293470799922943, -0.7977170944213867 }));
        batch.addRow(new DataList(new double[]{ 0.43373140692710876, -0.7174709439277649 }));
        batch.addRow(new DataList(new double[]{ 0.23477795720100403, -0.8153562545776367 }));
        batch.addRow(new DataList(new double[]{ 0.8225705623626709, -0.246063694357872 }));
        batch.addRow(new DataList(new double[]{ 0.15005819499492645, -0.8556280732154846 }));
        batch.addRow(new DataList(new double[]{ 0.3332096338272095, -0.8131663203239441 }));
        batch.addRow(new DataList(new double[]{ 0.13299746811389923, -0.878882884979248 }));
        batch.addRow(new DataList(new double[]{ -0.07169955223798752, -0.8961260914802551 }));
        batch.addRow(new DataList(new double[]{ 0.6446552872657776, -0.6409881711006165 }));
        batch.addRow(new DataList(new double[]{ 0.395687997341156, -0.82966548204422 }));
        batch.addRow(new DataList(new double[]{ -0.274135947227478, -0.8879385590553284 }));
        batch.addRow(new DataList(new double[]{ 0.9183335304260254, -0.1977992057800293 }));
        batch.addRow(new DataList(new double[]{ -0.6986308693885803, -0.6430050730705261 }));
        batch.addRow(new DataList(new double[]{ -0.41544395685195923, -0.8650032877922058 }));
        batch.addRow(new DataList(new double[]{ -0.23928648233413696, -0.9397096037864685 }));
        batch.addRow(new DataList(new double[]{ -0.4554508328437805, -0.8675071001052856 }));
        batch.addRow(new DataList(new double[]{ 0.0403328463435173, -0.9890769720077515 }));
        batch.addRow(new DataList(new double[]{ -0.3896489143371582, -0.92096346616745 }));
        batch.addRow(new DataList(new double[]{ -0.0, -0.0 }));
        batch.addRow(new DataList(new double[]{ -0.009798009879887104, -0.002455483889207244 }));
        batch.addRow(new DataList(new double[]{ -0.017174409702420235, 0.010637729428708553 }));
        batch.addRow(new DataList(new double[]{ -0.022591015323996544, -0.02019702084362507 }));
        batch.addRow(new DataList(new double[]{ -0.024451524019241333, -0.032165344804525375 }));
        batch.addRow(new DataList(new double[]{ -0.037035100162029266, -0.034338921308517456 }));
        batch.addRow(new DataList(new double[]{ -0.03774285688996315, -0.04741910099983215 }));
        batch.addRow(new DataList(new double[]{ -0.06695052236318588, -0.022740209475159645 }));
        batch.addRow(new DataList(new double[]{ -0.08080747723579407, 0.00031294688233174384 }));
        batch.addRow(new DataList(new double[]{ -0.09042162448167801, -0.009401751682162285 }));
        batch.addRow(new DataList(new double[]{ -0.0854361355304718, 0.053886059671640396 }));
        batch.addRow(new DataList(new double[]{ -0.11111097037792206, -0.00017456396017223597 }));
        batch.addRow(new DataList(new double[]{ -0.1211010068655014, 0.005188911687582731 }));
        batch.addRow(new DataList(new double[]{ -0.1312655508518219, 0.0035348881501704454 }));
        batch.addRow(new DataList(new double[]{ -0.13037461042404175, -0.05477607622742653 }));
        batch.addRow(new DataList(new double[]{ -0.14625361561775208, -0.03958182409405708 }));
        batch.addRow(new DataList(new double[]{ -0.16153846681118011, 0.005010642576962709 }));
        batch.addRow(new DataList(new double[]{ -0.03385990858078003, 0.16834574937820435 }));
        batch.addRow(new DataList(new double[]{ -0.05382797494530678, 0.17366750538349152 }));
        batch.addRow(new DataList(new double[]{ 0.007732895202934742, 0.19176334142684937 }));
        batch.addRow(new DataList(new double[]{ -0.1891750544309616, 0.07088696956634521 }));
        batch.addRow(new DataList(new double[]{ -0.21000640094280243, 0.029878435656428337 }));
        batch.addRow(new DataList(new double[]{ -0.13872316479682922, 0.17360472679138184 }));
        batch.addRow(new DataList(new double[]{ -0.03591860458254814, 0.22952981293201447 }));
        batch.addRow(new DataList(new double[]{ 0.02594221755862236, 0.2410321831703186 }));
        batch.addRow(new DataList(new double[]{ 0.11725282669067383, 0.22365325689315796 }));
        batch.addRow(new DataList(new double[]{ 0.05269865691661835, 0.25728467106819153 }));
        batch.addRow(new DataList(new double[]{ 0.23412224650382996, 0.13988187909126282 }));
        batch.addRow(new DataList(new double[]{ 0.04243573546409607, 0.27962660789489746 }));
        batch.addRow(new DataList(new double[]{ -0.027383210137486458, 0.2916465699672699 }));
        batch.addRow(new DataList(new double[]{ -0.11146431416273117, 0.2817855179309845 }));
        batch.addRow(new DataList(new double[]{ 0.03762766346335411, 0.31086230278015137 }));
        batch.addRow(new DataList(new double[]{ 0.22892823815345764, 0.22819070518016815 }));
        batch.addRow(new DataList(new double[]{ 0.10567864775657654, 0.3161378502845764 }));
        batch.addRow(new DataList(new double[]{ 0.3340385854244232, 0.07978332042694092 }));
        batch.addRow(new DataList(new double[]{ 0.35161226987838745, -0.03682466223835945 }));
        batch.addRow(new DataList(new double[]{ -0.041653987020254135, 0.36124277114868164 }));
        batch.addRow(new DataList(new double[]{ 0.37354323267936707, -0.012044575996696949 }));
        batch.addRow(new DataList(new double[]{ 0.05819917470216751, 0.3794005215167999 }));
        batch.addRow(new DataList(new double[]{ 0.3939376473426819, -0.0011725749354809523 }));
        batch.addRow(new DataList(new double[]{ 0.3514995276927948, -0.19924037158489227 }));
        batch.addRow(new DataList(new double[]{ 0.4138629138469696, -0.015185336582362652 }));
        batch.addRow(new DataList(new double[]{ 0.3650516867637634, 0.2161455601453781 }));
        batch.addRow(new DataList(new double[]{ 0.43272146582603455, 0.037501461803913116 }));
        batch.addRow(new DataList(new double[]{ 0.43754321336746216, -0.07801800221204758 }));
        batch.addRow(new DataList(new double[]{ 0.43187424540519714, -0.14176109433174133 }));
        batch.addRow(new DataList(new double[]{ 0.4265342950820923, -0.18429549038410187 }));
        batch.addRow(new DataList(new double[]{ 0.4033963978290558, -0.25031283497810364 }));
        batch.addRow(new DataList(new double[]{ 0.33146175742149353, -0.35385188460350037 }));
        batch.addRow(new DataList(new double[]{ 0.4842770993709564, -0.10222868621349335 }));
        batch.addRow(new DataList(new double[]{ 0.3546411991119385, -0.35959091782569885 }));
        batch.addRow(new DataList(new double[]{ -0.10369879752397537, -0.5046064257621765 }));
        batch.addRow(new DataList(new double[]{ 0.3169385492801666, -0.41885578632354736 }));
        batch.addRow(new DataList(new double[]{ 0.2917483150959015, -0.44887229800224304 }));
        batch.addRow(new DataList(new double[]{ -0.15371496975421906, -0.5233472585678101 }));
        batch.addRow(new DataList(new double[]{ 0.5502129197120667, -0.07686168700456619 }));
        batch.addRow(new DataList(new double[]{ -0.29048067331314087, -0.48537442088127136 }));
        batch.addRow(new DataList(new double[]{ 0.1515403538942337, -0.555456817150116 }));
        batch.addRow(new DataList(new double[]{ -0.13503777980804443, -0.5700833797454834 }));
        batch.addRow(new DataList(new double[]{ -0.1760004609823227, -0.5693783164024353 }));
        batch.addRow(new DataList(new double[]{ -0.44471830129623413, -0.41174638271331787 }));
        batch.addRow(new DataList(new double[]{ -0.19373933970928192, -0.5849104523658752 }));
        batch.addRow(new DataList(new double[]{ -0.1340092569589615, -0.6117568016052246 }));
        batch.addRow(new DataList(new double[]{ -0.6139492988586426, -0.1674065887928009 }));
        batch.addRow(new DataList(new double[]{ 0.2667886018753052, -0.5888466238975525 }));
        batch.addRow(new DataList(new double[]{ -0.5009251236915588, -0.42444372177124023 }));
        batch.addRow(new DataList(new double[]{ -0.18727236986160278, -0.6398230195045471 }));
        batch.addRow(new DataList(new double[]{ -0.4249818027019501, -0.5266924500465393 }));
        batch.addRow(new DataList(new double[]{ -0.5686152577400208, 0.38531190156936646 }));
        batch.addRow(new DataList(new double[]{ -0.6590549945831299, -0.22674492001533508 }));
        batch.addRow(new DataList(new double[]{ -0.702756941318512, -0.07798483222723007 }));
        batch.addRow(new DataList(new double[]{ -0.3888018727302551, -0.6026345491409302 }));
        batch.addRow(new DataList(new double[]{ -0.6779102683067322, -0.263369083404541 }));
        batch.addRow(new DataList(new double[]{ -0.7236468195915222, 0.14161688089370728 }));
        batch.addRow(new DataList(new double[]{ -0.6959771513938904, 0.272643119096756 }));
        batch.addRow(new DataList(new double[]{ -0.6229174733161926, 0.431155264377594 }));
        batch.addRow(new DataList(new double[]{ -0.70638108253479, 0.300588458776474 }));
        batch.addRow(new DataList(new double[]{ -0.5624091029167175, 0.5372469425201416 }));
        batch.addRow(new DataList(new double[]{ -0.5335089564323425, 0.5797595977783203 }));
        batch.addRow(new DataList(new double[]{ -0.7798057794570923, -0.16933609545230865 }));
        batch.addRow(new DataList(new double[]{ -0.5509640574455261, 0.5911287665367126 }));
        batch.addRow(new DataList(new double[]{ -0.22908495366573334, 0.7854562997817993 }));
        batch.addRow(new DataList(new double[]{ -0.22235581278800964, 0.797878623008728 }));
        batch.addRow(new DataList(new double[]{ -0.5058066248893738, 0.6686158180236816 }));
        batch.addRow(new DataList(new double[]{ -0.5891481637954712, 0.6105988621711731 }));
        batch.addRow(new DataList(new double[]{ -0.6294202208518982, 0.5839519500732422 }));
        batch.addRow(new DataList(new double[]{ -0.19653035700321198, 0.8461635112762451 }));
        batch.addRow(new DataList(new double[]{ 0.42505860328674316, 0.7691510319709778 }));
        batch.addRow(new DataList(new double[]{ -0.7160265445709229, 0.5267156958580017 }));
        batch.addRow(new DataList(new double[]{ -0.16943156719207764, 0.8828792572021484 }));
        batch.addRow(new DataList(new double[]{ -0.29333555698394775, 0.8604652881622314 }));
        batch.addRow(new DataList(new double[]{ 0.6162905693054199, 0.681982159614563 }));
        batch.addRow(new DataList(new double[]{ 0.15375544130802155, 0.9164848923683167 }));
        batch.addRow(new DataList(new double[]{ 0.28573334217071533, 0.8948840498924255 }));
        batch.addRow(new DataList(new double[]{ 0.4856579005718231, 0.815890371799469 }));
        batch.addRow(new DataList(new double[]{ 0.7910686135292053, 0.5431710481643677 }));
        batch.addRow(new DataList(new double[]{ 0.5877882242202759, 0.7712439298629761 }));
        batch.addRow(new DataList(new double[]{ -0.5325585007667542, 0.8224266171455383 }));
        batch.addRow(new DataList(new double[]{ 0.9591972827911377, 0.2446233183145523 }));
        batch.addRow(new DataList(new double[]{ 0.9799011945724487, 0.1994834691286087 }));

        return batch;
    }

    public static Batch getTestingTargetBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));

        return batch;
    }

    public static NeuralNetwork getNeuralNetwork() {
        final SeedGenerator seedGenerator = new SeedGenerator(420);

        final HiddenLayer hiddenLayer1 = new HiddenLayer(2, 64, seedGenerator.getSeed());
        hiddenLayer1.initializeRegularizer(new RegularizerStruct(0.0, 0.0005, 0.0, 0.0005));
        final ActivationLayer activationLayer1 = new ActivationLayer(new RectifiedLinearUnit());
        final HiddenLayer hiddenLayer2 = new HiddenLayer(64, 1, seedGenerator.getSeed());
        final ActivationLayer activationLayer2 = new ActivationLayer(new Sigmoid());
        final LossLayer lossLayer1 = new LossLayer(new BinaryCrossEntropy());


        final NeuralNetwork neuralNetwork = new NeuralNetwork(2);

        neuralNetwork.addHiddenLayer(hiddenLayer1);
        neuralNetwork.addActivationLayer(activationLayer1);
        neuralNetwork.addHiddenLayer(hiddenLayer2);
        neuralNetwork.addActivationLayer(activationLayer2);
        neuralNetwork.addLossLayer(lossLayer1);

        return neuralNetwork;
    }
}
