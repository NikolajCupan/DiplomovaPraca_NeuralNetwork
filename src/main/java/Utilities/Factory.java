package Utilities;

import NeuralNetwork.ActivationFunctions.Linear;
import NeuralNetwork.ActivationFunctions.RectifiedLinearUnit;
import NeuralNetwork.BuildingBlocks.Batch;
import NeuralNetwork.BuildingBlocks.DataList;
import NeuralNetwork.BuildingBlocks.Neuron;
import NeuralNetwork.Layers.Common.ActivationLayer;
import NeuralNetwork.Layers.Common.HiddenLayer;
import NeuralNetwork.Layers.Common.LossLayer;
import NeuralNetwork.LossFunctions.MeanSquaredError;
import NeuralNetwork.NeuralNetwork;

public class Factory {
    public static Batch getInputBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.001 }));
        batch.addRow(new DataList(new double[]{ 0.002 }));
        batch.addRow(new DataList(new double[]{ 0.003 }));
        batch.addRow(new DataList(new double[]{ 0.004 }));
        batch.addRow(new DataList(new double[]{ 0.005 }));
        batch.addRow(new DataList(new double[]{ 0.006 }));
        batch.addRow(new DataList(new double[]{ 0.007 }));
        batch.addRow(new DataList(new double[]{ 0.008 }));
        batch.addRow(new DataList(new double[]{ 0.009 }));
        batch.addRow(new DataList(new double[]{ 0.01 }));
        batch.addRow(new DataList(new double[]{ 0.011 }));
        batch.addRow(new DataList(new double[]{ 0.012 }));
        batch.addRow(new DataList(new double[]{ 0.013 }));
        batch.addRow(new DataList(new double[]{ 0.014 }));
        batch.addRow(new DataList(new double[]{ 0.015 }));
        batch.addRow(new DataList(new double[]{ 0.016 }));
        batch.addRow(new DataList(new double[]{ 0.017 }));
        batch.addRow(new DataList(new double[]{ 0.018 }));
        batch.addRow(new DataList(new double[]{ 0.019 }));
        batch.addRow(new DataList(new double[]{ 0.02 }));
        batch.addRow(new DataList(new double[]{ 0.021 }));
        batch.addRow(new DataList(new double[]{ 0.022 }));
        batch.addRow(new DataList(new double[]{ 0.023 }));
        batch.addRow(new DataList(new double[]{ 0.024 }));
        batch.addRow(new DataList(new double[]{ 0.025 }));
        batch.addRow(new DataList(new double[]{ 0.026 }));
        batch.addRow(new DataList(new double[]{ 0.027 }));
        batch.addRow(new DataList(new double[]{ 0.028 }));
        batch.addRow(new DataList(new double[]{ 0.029 }));
        batch.addRow(new DataList(new double[]{ 0.03 }));
        batch.addRow(new DataList(new double[]{ 0.031 }));
        batch.addRow(new DataList(new double[]{ 0.032 }));
        batch.addRow(new DataList(new double[]{ 0.033 }));
        batch.addRow(new DataList(new double[]{ 0.034 }));
        batch.addRow(new DataList(new double[]{ 0.035 }));
        batch.addRow(new DataList(new double[]{ 0.036 }));
        batch.addRow(new DataList(new double[]{ 0.037 }));
        batch.addRow(new DataList(new double[]{ 0.038 }));
        batch.addRow(new DataList(new double[]{ 0.039 }));
        batch.addRow(new DataList(new double[]{ 0.04 }));
        batch.addRow(new DataList(new double[]{ 0.041 }));
        batch.addRow(new DataList(new double[]{ 0.042 }));
        batch.addRow(new DataList(new double[]{ 0.043 }));
        batch.addRow(new DataList(new double[]{ 0.044 }));
        batch.addRow(new DataList(new double[]{ 0.045 }));
        batch.addRow(new DataList(new double[]{ 0.046 }));
        batch.addRow(new DataList(new double[]{ 0.047 }));
        batch.addRow(new DataList(new double[]{ 0.048 }));
        batch.addRow(new DataList(new double[]{ 0.049 }));
        batch.addRow(new DataList(new double[]{ 0.05 }));
        batch.addRow(new DataList(new double[]{ 0.051 }));
        batch.addRow(new DataList(new double[]{ 0.052 }));
        batch.addRow(new DataList(new double[]{ 0.053 }));
        batch.addRow(new DataList(new double[]{ 0.054 }));
        batch.addRow(new DataList(new double[]{ 0.055 }));
        batch.addRow(new DataList(new double[]{ 0.056 }));
        batch.addRow(new DataList(new double[]{ 0.057 }));
        batch.addRow(new DataList(new double[]{ 0.058 }));
        batch.addRow(new DataList(new double[]{ 0.059 }));
        batch.addRow(new DataList(new double[]{ 0.06 }));
        batch.addRow(new DataList(new double[]{ 0.061 }));
        batch.addRow(new DataList(new double[]{ 0.062 }));
        batch.addRow(new DataList(new double[]{ 0.063 }));
        batch.addRow(new DataList(new double[]{ 0.064 }));
        batch.addRow(new DataList(new double[]{ 0.065 }));
        batch.addRow(new DataList(new double[]{ 0.066 }));
        batch.addRow(new DataList(new double[]{ 0.067 }));
        batch.addRow(new DataList(new double[]{ 0.068 }));
        batch.addRow(new DataList(new double[]{ 0.069 }));
        batch.addRow(new DataList(new double[]{ 0.07 }));
        batch.addRow(new DataList(new double[]{ 0.071 }));
        batch.addRow(new DataList(new double[]{ 0.072 }));
        batch.addRow(new DataList(new double[]{ 0.073 }));
        batch.addRow(new DataList(new double[]{ 0.074 }));
        batch.addRow(new DataList(new double[]{ 0.075 }));
        batch.addRow(new DataList(new double[]{ 0.076 }));
        batch.addRow(new DataList(new double[]{ 0.077 }));
        batch.addRow(new DataList(new double[]{ 0.078 }));
        batch.addRow(new DataList(new double[]{ 0.079 }));
        batch.addRow(new DataList(new double[]{ 0.08 }));
        batch.addRow(new DataList(new double[]{ 0.081 }));
        batch.addRow(new DataList(new double[]{ 0.082 }));
        batch.addRow(new DataList(new double[]{ 0.083 }));
        batch.addRow(new DataList(new double[]{ 0.084 }));
        batch.addRow(new DataList(new double[]{ 0.085 }));
        batch.addRow(new DataList(new double[]{ 0.086 }));
        batch.addRow(new DataList(new double[]{ 0.087 }));
        batch.addRow(new DataList(new double[]{ 0.088 }));
        batch.addRow(new DataList(new double[]{ 0.089 }));
        batch.addRow(new DataList(new double[]{ 0.09 }));
        batch.addRow(new DataList(new double[]{ 0.091 }));
        batch.addRow(new DataList(new double[]{ 0.092 }));
        batch.addRow(new DataList(new double[]{ 0.093 }));
        batch.addRow(new DataList(new double[]{ 0.094 }));
        batch.addRow(new DataList(new double[]{ 0.095 }));
        batch.addRow(new DataList(new double[]{ 0.096 }));
        batch.addRow(new DataList(new double[]{ 0.097 }));
        batch.addRow(new DataList(new double[]{ 0.098 }));
        batch.addRow(new DataList(new double[]{ 0.099 }));
        batch.addRow(new DataList(new double[]{ 0.1 }));
        batch.addRow(new DataList(new double[]{ 0.101 }));
        batch.addRow(new DataList(new double[]{ 0.102 }));
        batch.addRow(new DataList(new double[]{ 0.103 }));
        batch.addRow(new DataList(new double[]{ 0.104 }));
        batch.addRow(new DataList(new double[]{ 0.105 }));
        batch.addRow(new DataList(new double[]{ 0.106 }));
        batch.addRow(new DataList(new double[]{ 0.107 }));
        batch.addRow(new DataList(new double[]{ 0.108 }));
        batch.addRow(new DataList(new double[]{ 0.109 }));
        batch.addRow(new DataList(new double[]{ 0.11 }));
        batch.addRow(new DataList(new double[]{ 0.111 }));
        batch.addRow(new DataList(new double[]{ 0.112 }));
        batch.addRow(new DataList(new double[]{ 0.113 }));
        batch.addRow(new DataList(new double[]{ 0.114 }));
        batch.addRow(new DataList(new double[]{ 0.115 }));
        batch.addRow(new DataList(new double[]{ 0.116 }));
        batch.addRow(new DataList(new double[]{ 0.117 }));
        batch.addRow(new DataList(new double[]{ 0.118 }));
        batch.addRow(new DataList(new double[]{ 0.119 }));
        batch.addRow(new DataList(new double[]{ 0.12 }));
        batch.addRow(new DataList(new double[]{ 0.121 }));
        batch.addRow(new DataList(new double[]{ 0.122 }));
        batch.addRow(new DataList(new double[]{ 0.123 }));
        batch.addRow(new DataList(new double[]{ 0.124 }));
        batch.addRow(new DataList(new double[]{ 0.125 }));
        batch.addRow(new DataList(new double[]{ 0.126 }));
        batch.addRow(new DataList(new double[]{ 0.127 }));
        batch.addRow(new DataList(new double[]{ 0.128 }));
        batch.addRow(new DataList(new double[]{ 0.129 }));
        batch.addRow(new DataList(new double[]{ 0.13 }));
        batch.addRow(new DataList(new double[]{ 0.131 }));
        batch.addRow(new DataList(new double[]{ 0.132 }));
        batch.addRow(new DataList(new double[]{ 0.133 }));
        batch.addRow(new DataList(new double[]{ 0.134 }));
        batch.addRow(new DataList(new double[]{ 0.135 }));
        batch.addRow(new DataList(new double[]{ 0.136 }));
        batch.addRow(new DataList(new double[]{ 0.137 }));
        batch.addRow(new DataList(new double[]{ 0.138 }));
        batch.addRow(new DataList(new double[]{ 0.139 }));
        batch.addRow(new DataList(new double[]{ 0.14 }));
        batch.addRow(new DataList(new double[]{ 0.141 }));
        batch.addRow(new DataList(new double[]{ 0.142 }));
        batch.addRow(new DataList(new double[]{ 0.143 }));
        batch.addRow(new DataList(new double[]{ 0.144 }));
        batch.addRow(new DataList(new double[]{ 0.145 }));
        batch.addRow(new DataList(new double[]{ 0.146 }));
        batch.addRow(new DataList(new double[]{ 0.147 }));
        batch.addRow(new DataList(new double[]{ 0.148 }));
        batch.addRow(new DataList(new double[]{ 0.149 }));
        batch.addRow(new DataList(new double[]{ 0.15 }));
        batch.addRow(new DataList(new double[]{ 0.151 }));
        batch.addRow(new DataList(new double[]{ 0.152 }));
        batch.addRow(new DataList(new double[]{ 0.153 }));
        batch.addRow(new DataList(new double[]{ 0.154 }));
        batch.addRow(new DataList(new double[]{ 0.155 }));
        batch.addRow(new DataList(new double[]{ 0.156 }));
        batch.addRow(new DataList(new double[]{ 0.157 }));
        batch.addRow(new DataList(new double[]{ 0.158 }));
        batch.addRow(new DataList(new double[]{ 0.159 }));
        batch.addRow(new DataList(new double[]{ 0.16 }));
        batch.addRow(new DataList(new double[]{ 0.161 }));
        batch.addRow(new DataList(new double[]{ 0.162 }));
        batch.addRow(new DataList(new double[]{ 0.163 }));
        batch.addRow(new DataList(new double[]{ 0.164 }));
        batch.addRow(new DataList(new double[]{ 0.165 }));
        batch.addRow(new DataList(new double[]{ 0.166 }));
        batch.addRow(new DataList(new double[]{ 0.167 }));
        batch.addRow(new DataList(new double[]{ 0.168 }));
        batch.addRow(new DataList(new double[]{ 0.169 }));
        batch.addRow(new DataList(new double[]{ 0.17 }));
        batch.addRow(new DataList(new double[]{ 0.171 }));
        batch.addRow(new DataList(new double[]{ 0.172 }));
        batch.addRow(new DataList(new double[]{ 0.173 }));
        batch.addRow(new DataList(new double[]{ 0.174 }));
        batch.addRow(new DataList(new double[]{ 0.175 }));
        batch.addRow(new DataList(new double[]{ 0.176 }));
        batch.addRow(new DataList(new double[]{ 0.177 }));
        batch.addRow(new DataList(new double[]{ 0.178 }));
        batch.addRow(new DataList(new double[]{ 0.179 }));
        batch.addRow(new DataList(new double[]{ 0.18 }));
        batch.addRow(new DataList(new double[]{ 0.181 }));
        batch.addRow(new DataList(new double[]{ 0.182 }));
        batch.addRow(new DataList(new double[]{ 0.183 }));
        batch.addRow(new DataList(new double[]{ 0.184 }));
        batch.addRow(new DataList(new double[]{ 0.185 }));
        batch.addRow(new DataList(new double[]{ 0.186 }));
        batch.addRow(new DataList(new double[]{ 0.187 }));
        batch.addRow(new DataList(new double[]{ 0.188 }));
        batch.addRow(new DataList(new double[]{ 0.189 }));
        batch.addRow(new DataList(new double[]{ 0.19 }));
        batch.addRow(new DataList(new double[]{ 0.191 }));
        batch.addRow(new DataList(new double[]{ 0.192 }));
        batch.addRow(new DataList(new double[]{ 0.193 }));
        batch.addRow(new DataList(new double[]{ 0.194 }));
        batch.addRow(new DataList(new double[]{ 0.195 }));
        batch.addRow(new DataList(new double[]{ 0.196 }));
        batch.addRow(new DataList(new double[]{ 0.197 }));
        batch.addRow(new DataList(new double[]{ 0.198 }));
        batch.addRow(new DataList(new double[]{ 0.199 }));
        batch.addRow(new DataList(new double[]{ 0.2 }));
        batch.addRow(new DataList(new double[]{ 0.201 }));
        batch.addRow(new DataList(new double[]{ 0.202 }));
        batch.addRow(new DataList(new double[]{ 0.203 }));
        batch.addRow(new DataList(new double[]{ 0.204 }));
        batch.addRow(new DataList(new double[]{ 0.205 }));
        batch.addRow(new DataList(new double[]{ 0.206 }));
        batch.addRow(new DataList(new double[]{ 0.207 }));
        batch.addRow(new DataList(new double[]{ 0.208 }));
        batch.addRow(new DataList(new double[]{ 0.209 }));
        batch.addRow(new DataList(new double[]{ 0.21 }));
        batch.addRow(new DataList(new double[]{ 0.211 }));
        batch.addRow(new DataList(new double[]{ 0.212 }));
        batch.addRow(new DataList(new double[]{ 0.213 }));
        batch.addRow(new DataList(new double[]{ 0.214 }));
        batch.addRow(new DataList(new double[]{ 0.215 }));
        batch.addRow(new DataList(new double[]{ 0.216 }));
        batch.addRow(new DataList(new double[]{ 0.217 }));
        batch.addRow(new DataList(new double[]{ 0.218 }));
        batch.addRow(new DataList(new double[]{ 0.219 }));
        batch.addRow(new DataList(new double[]{ 0.22 }));
        batch.addRow(new DataList(new double[]{ 0.221 }));
        batch.addRow(new DataList(new double[]{ 0.222 }));
        batch.addRow(new DataList(new double[]{ 0.223 }));
        batch.addRow(new DataList(new double[]{ 0.224 }));
        batch.addRow(new DataList(new double[]{ 0.225 }));
        batch.addRow(new DataList(new double[]{ 0.226 }));
        batch.addRow(new DataList(new double[]{ 0.227 }));
        batch.addRow(new DataList(new double[]{ 0.228 }));
        batch.addRow(new DataList(new double[]{ 0.229 }));
        batch.addRow(new DataList(new double[]{ 0.23 }));
        batch.addRow(new DataList(new double[]{ 0.231 }));
        batch.addRow(new DataList(new double[]{ 0.232 }));
        batch.addRow(new DataList(new double[]{ 0.233 }));
        batch.addRow(new DataList(new double[]{ 0.234 }));
        batch.addRow(new DataList(new double[]{ 0.235 }));
        batch.addRow(new DataList(new double[]{ 0.236 }));
        batch.addRow(new DataList(new double[]{ 0.237 }));
        batch.addRow(new DataList(new double[]{ 0.238 }));
        batch.addRow(new DataList(new double[]{ 0.239 }));
        batch.addRow(new DataList(new double[]{ 0.24 }));
        batch.addRow(new DataList(new double[]{ 0.241 }));
        batch.addRow(new DataList(new double[]{ 0.242 }));
        batch.addRow(new DataList(new double[]{ 0.243 }));
        batch.addRow(new DataList(new double[]{ 0.244 }));
        batch.addRow(new DataList(new double[]{ 0.245 }));
        batch.addRow(new DataList(new double[]{ 0.246 }));
        batch.addRow(new DataList(new double[]{ 0.247 }));
        batch.addRow(new DataList(new double[]{ 0.248 }));
        batch.addRow(new DataList(new double[]{ 0.249 }));
        batch.addRow(new DataList(new double[]{ 0.25 }));
        batch.addRow(new DataList(new double[]{ 0.251 }));
        batch.addRow(new DataList(new double[]{ 0.252 }));
        batch.addRow(new DataList(new double[]{ 0.253 }));
        batch.addRow(new DataList(new double[]{ 0.254 }));
        batch.addRow(new DataList(new double[]{ 0.255 }));
        batch.addRow(new DataList(new double[]{ 0.256 }));
        batch.addRow(new DataList(new double[]{ 0.257 }));
        batch.addRow(new DataList(new double[]{ 0.258 }));
        batch.addRow(new DataList(new double[]{ 0.259 }));
        batch.addRow(new DataList(new double[]{ 0.26 }));
        batch.addRow(new DataList(new double[]{ 0.261 }));
        batch.addRow(new DataList(new double[]{ 0.262 }));
        batch.addRow(new DataList(new double[]{ 0.263 }));
        batch.addRow(new DataList(new double[]{ 0.264 }));
        batch.addRow(new DataList(new double[]{ 0.265 }));
        batch.addRow(new DataList(new double[]{ 0.266 }));
        batch.addRow(new DataList(new double[]{ 0.267 }));
        batch.addRow(new DataList(new double[]{ 0.268 }));
        batch.addRow(new DataList(new double[]{ 0.269 }));
        batch.addRow(new DataList(new double[]{ 0.27 }));
        batch.addRow(new DataList(new double[]{ 0.271 }));
        batch.addRow(new DataList(new double[]{ 0.272 }));
        batch.addRow(new DataList(new double[]{ 0.273 }));
        batch.addRow(new DataList(new double[]{ 0.274 }));
        batch.addRow(new DataList(new double[]{ 0.275 }));
        batch.addRow(new DataList(new double[]{ 0.276 }));
        batch.addRow(new DataList(new double[]{ 0.277 }));
        batch.addRow(new DataList(new double[]{ 0.278 }));
        batch.addRow(new DataList(new double[]{ 0.279 }));
        batch.addRow(new DataList(new double[]{ 0.28 }));
        batch.addRow(new DataList(new double[]{ 0.281 }));
        batch.addRow(new DataList(new double[]{ 0.282 }));
        batch.addRow(new DataList(new double[]{ 0.283 }));
        batch.addRow(new DataList(new double[]{ 0.284 }));
        batch.addRow(new DataList(new double[]{ 0.285 }));
        batch.addRow(new DataList(new double[]{ 0.286 }));
        batch.addRow(new DataList(new double[]{ 0.287 }));
        batch.addRow(new DataList(new double[]{ 0.288 }));
        batch.addRow(new DataList(new double[]{ 0.289 }));
        batch.addRow(new DataList(new double[]{ 0.29 }));
        batch.addRow(new DataList(new double[]{ 0.291 }));
        batch.addRow(new DataList(new double[]{ 0.292 }));
        batch.addRow(new DataList(new double[]{ 0.293 }));
        batch.addRow(new DataList(new double[]{ 0.294 }));
        batch.addRow(new DataList(new double[]{ 0.295 }));
        batch.addRow(new DataList(new double[]{ 0.296 }));
        batch.addRow(new DataList(new double[]{ 0.297 }));
        batch.addRow(new DataList(new double[]{ 0.298 }));
        batch.addRow(new DataList(new double[]{ 0.299 }));
        batch.addRow(new DataList(new double[]{ 0.3 }));
        batch.addRow(new DataList(new double[]{ 0.301 }));
        batch.addRow(new DataList(new double[]{ 0.302 }));
        batch.addRow(new DataList(new double[]{ 0.303 }));
        batch.addRow(new DataList(new double[]{ 0.304 }));
        batch.addRow(new DataList(new double[]{ 0.305 }));
        batch.addRow(new DataList(new double[]{ 0.306 }));
        batch.addRow(new DataList(new double[]{ 0.307 }));
        batch.addRow(new DataList(new double[]{ 0.308 }));
        batch.addRow(new DataList(new double[]{ 0.309 }));
        batch.addRow(new DataList(new double[]{ 0.31 }));
        batch.addRow(new DataList(new double[]{ 0.311 }));
        batch.addRow(new DataList(new double[]{ 0.312 }));
        batch.addRow(new DataList(new double[]{ 0.313 }));
        batch.addRow(new DataList(new double[]{ 0.314 }));
        batch.addRow(new DataList(new double[]{ 0.315 }));
        batch.addRow(new DataList(new double[]{ 0.316 }));
        batch.addRow(new DataList(new double[]{ 0.317 }));
        batch.addRow(new DataList(new double[]{ 0.318 }));
        batch.addRow(new DataList(new double[]{ 0.319 }));
        batch.addRow(new DataList(new double[]{ 0.32 }));
        batch.addRow(new DataList(new double[]{ 0.321 }));
        batch.addRow(new DataList(new double[]{ 0.322 }));
        batch.addRow(new DataList(new double[]{ 0.323 }));
        batch.addRow(new DataList(new double[]{ 0.324 }));
        batch.addRow(new DataList(new double[]{ 0.325 }));
        batch.addRow(new DataList(new double[]{ 0.326 }));
        batch.addRow(new DataList(new double[]{ 0.327 }));
        batch.addRow(new DataList(new double[]{ 0.328 }));
        batch.addRow(new DataList(new double[]{ 0.329 }));
        batch.addRow(new DataList(new double[]{ 0.33 }));
        batch.addRow(new DataList(new double[]{ 0.331 }));
        batch.addRow(new DataList(new double[]{ 0.332 }));
        batch.addRow(new DataList(new double[]{ 0.333 }));
        batch.addRow(new DataList(new double[]{ 0.334 }));
        batch.addRow(new DataList(new double[]{ 0.335 }));
        batch.addRow(new DataList(new double[]{ 0.336 }));
        batch.addRow(new DataList(new double[]{ 0.337 }));
        batch.addRow(new DataList(new double[]{ 0.338 }));
        batch.addRow(new DataList(new double[]{ 0.339 }));
        batch.addRow(new DataList(new double[]{ 0.34 }));
        batch.addRow(new DataList(new double[]{ 0.341 }));
        batch.addRow(new DataList(new double[]{ 0.342 }));
        batch.addRow(new DataList(new double[]{ 0.343 }));
        batch.addRow(new DataList(new double[]{ 0.344 }));
        batch.addRow(new DataList(new double[]{ 0.345 }));
        batch.addRow(new DataList(new double[]{ 0.346 }));
        batch.addRow(new DataList(new double[]{ 0.347 }));
        batch.addRow(new DataList(new double[]{ 0.348 }));
        batch.addRow(new DataList(new double[]{ 0.349 }));
        batch.addRow(new DataList(new double[]{ 0.35 }));
        batch.addRow(new DataList(new double[]{ 0.351 }));
        batch.addRow(new DataList(new double[]{ 0.352 }));
        batch.addRow(new DataList(new double[]{ 0.353 }));
        batch.addRow(new DataList(new double[]{ 0.354 }));
        batch.addRow(new DataList(new double[]{ 0.355 }));
        batch.addRow(new DataList(new double[]{ 0.356 }));
        batch.addRow(new DataList(new double[]{ 0.357 }));
        batch.addRow(new DataList(new double[]{ 0.358 }));
        batch.addRow(new DataList(new double[]{ 0.359 }));
        batch.addRow(new DataList(new double[]{ 0.36 }));
        batch.addRow(new DataList(new double[]{ 0.361 }));
        batch.addRow(new DataList(new double[]{ 0.362 }));
        batch.addRow(new DataList(new double[]{ 0.363 }));
        batch.addRow(new DataList(new double[]{ 0.364 }));
        batch.addRow(new DataList(new double[]{ 0.365 }));
        batch.addRow(new DataList(new double[]{ 0.366 }));
        batch.addRow(new DataList(new double[]{ 0.367 }));
        batch.addRow(new DataList(new double[]{ 0.368 }));
        batch.addRow(new DataList(new double[]{ 0.369 }));
        batch.addRow(new DataList(new double[]{ 0.37 }));
        batch.addRow(new DataList(new double[]{ 0.371 }));
        batch.addRow(new DataList(new double[]{ 0.372 }));
        batch.addRow(new DataList(new double[]{ 0.373 }));
        batch.addRow(new DataList(new double[]{ 0.374 }));
        batch.addRow(new DataList(new double[]{ 0.375 }));
        batch.addRow(new DataList(new double[]{ 0.376 }));
        batch.addRow(new DataList(new double[]{ 0.377 }));
        batch.addRow(new DataList(new double[]{ 0.378 }));
        batch.addRow(new DataList(new double[]{ 0.379 }));
        batch.addRow(new DataList(new double[]{ 0.38 }));
        batch.addRow(new DataList(new double[]{ 0.381 }));
        batch.addRow(new DataList(new double[]{ 0.382 }));
        batch.addRow(new DataList(new double[]{ 0.383 }));
        batch.addRow(new DataList(new double[]{ 0.384 }));
        batch.addRow(new DataList(new double[]{ 0.385 }));
        batch.addRow(new DataList(new double[]{ 0.386 }));
        batch.addRow(new DataList(new double[]{ 0.387 }));
        batch.addRow(new DataList(new double[]{ 0.388 }));
        batch.addRow(new DataList(new double[]{ 0.389 }));
        batch.addRow(new DataList(new double[]{ 0.39 }));
        batch.addRow(new DataList(new double[]{ 0.391 }));
        batch.addRow(new DataList(new double[]{ 0.392 }));
        batch.addRow(new DataList(new double[]{ 0.393 }));
        batch.addRow(new DataList(new double[]{ 0.394 }));
        batch.addRow(new DataList(new double[]{ 0.395 }));
        batch.addRow(new DataList(new double[]{ 0.396 }));
        batch.addRow(new DataList(new double[]{ 0.397 }));
        batch.addRow(new DataList(new double[]{ 0.398 }));
        batch.addRow(new DataList(new double[]{ 0.399 }));
        batch.addRow(new DataList(new double[]{ 0.4 }));
        batch.addRow(new DataList(new double[]{ 0.401 }));
        batch.addRow(new DataList(new double[]{ 0.402 }));
        batch.addRow(new DataList(new double[]{ 0.403 }));
        batch.addRow(new DataList(new double[]{ 0.404 }));
        batch.addRow(new DataList(new double[]{ 0.405 }));
        batch.addRow(new DataList(new double[]{ 0.406 }));
        batch.addRow(new DataList(new double[]{ 0.407 }));
        batch.addRow(new DataList(new double[]{ 0.408 }));
        batch.addRow(new DataList(new double[]{ 0.409 }));
        batch.addRow(new DataList(new double[]{ 0.41 }));
        batch.addRow(new DataList(new double[]{ 0.411 }));
        batch.addRow(new DataList(new double[]{ 0.412 }));
        batch.addRow(new DataList(new double[]{ 0.413 }));
        batch.addRow(new DataList(new double[]{ 0.414 }));
        batch.addRow(new DataList(new double[]{ 0.415 }));
        batch.addRow(new DataList(new double[]{ 0.416 }));
        batch.addRow(new DataList(new double[]{ 0.417 }));
        batch.addRow(new DataList(new double[]{ 0.418 }));
        batch.addRow(new DataList(new double[]{ 0.419 }));
        batch.addRow(new DataList(new double[]{ 0.42 }));
        batch.addRow(new DataList(new double[]{ 0.421 }));
        batch.addRow(new DataList(new double[]{ 0.422 }));
        batch.addRow(new DataList(new double[]{ 0.423 }));
        batch.addRow(new DataList(new double[]{ 0.424 }));
        batch.addRow(new DataList(new double[]{ 0.425 }));
        batch.addRow(new DataList(new double[]{ 0.426 }));
        batch.addRow(new DataList(new double[]{ 0.427 }));
        batch.addRow(new DataList(new double[]{ 0.428 }));
        batch.addRow(new DataList(new double[]{ 0.429 }));
        batch.addRow(new DataList(new double[]{ 0.43 }));
        batch.addRow(new DataList(new double[]{ 0.431 }));
        batch.addRow(new DataList(new double[]{ 0.432 }));
        batch.addRow(new DataList(new double[]{ 0.433 }));
        batch.addRow(new DataList(new double[]{ 0.434 }));
        batch.addRow(new DataList(new double[]{ 0.435 }));
        batch.addRow(new DataList(new double[]{ 0.436 }));
        batch.addRow(new DataList(new double[]{ 0.437 }));
        batch.addRow(new DataList(new double[]{ 0.438 }));
        batch.addRow(new DataList(new double[]{ 0.439 }));
        batch.addRow(new DataList(new double[]{ 0.44 }));
        batch.addRow(new DataList(new double[]{ 0.441 }));
        batch.addRow(new DataList(new double[]{ 0.442 }));
        batch.addRow(new DataList(new double[]{ 0.443 }));
        batch.addRow(new DataList(new double[]{ 0.444 }));
        batch.addRow(new DataList(new double[]{ 0.445 }));
        batch.addRow(new DataList(new double[]{ 0.446 }));
        batch.addRow(new DataList(new double[]{ 0.447 }));
        batch.addRow(new DataList(new double[]{ 0.448 }));
        batch.addRow(new DataList(new double[]{ 0.449 }));
        batch.addRow(new DataList(new double[]{ 0.45 }));
        batch.addRow(new DataList(new double[]{ 0.451 }));
        batch.addRow(new DataList(new double[]{ 0.452 }));
        batch.addRow(new DataList(new double[]{ 0.453 }));
        batch.addRow(new DataList(new double[]{ 0.454 }));
        batch.addRow(new DataList(new double[]{ 0.455 }));
        batch.addRow(new DataList(new double[]{ 0.456 }));
        batch.addRow(new DataList(new double[]{ 0.457 }));
        batch.addRow(new DataList(new double[]{ 0.458 }));
        batch.addRow(new DataList(new double[]{ 0.459 }));
        batch.addRow(new DataList(new double[]{ 0.46 }));
        batch.addRow(new DataList(new double[]{ 0.461 }));
        batch.addRow(new DataList(new double[]{ 0.462 }));
        batch.addRow(new DataList(new double[]{ 0.463 }));
        batch.addRow(new DataList(new double[]{ 0.464 }));
        batch.addRow(new DataList(new double[]{ 0.465 }));
        batch.addRow(new DataList(new double[]{ 0.466 }));
        batch.addRow(new DataList(new double[]{ 0.467 }));
        batch.addRow(new DataList(new double[]{ 0.468 }));
        batch.addRow(new DataList(new double[]{ 0.469 }));
        batch.addRow(new DataList(new double[]{ 0.47 }));
        batch.addRow(new DataList(new double[]{ 0.471 }));
        batch.addRow(new DataList(new double[]{ 0.472 }));
        batch.addRow(new DataList(new double[]{ 0.473 }));
        batch.addRow(new DataList(new double[]{ 0.474 }));
        batch.addRow(new DataList(new double[]{ 0.475 }));
        batch.addRow(new DataList(new double[]{ 0.476 }));
        batch.addRow(new DataList(new double[]{ 0.477 }));
        batch.addRow(new DataList(new double[]{ 0.478 }));
        batch.addRow(new DataList(new double[]{ 0.479 }));
        batch.addRow(new DataList(new double[]{ 0.48 }));
        batch.addRow(new DataList(new double[]{ 0.481 }));
        batch.addRow(new DataList(new double[]{ 0.482 }));
        batch.addRow(new DataList(new double[]{ 0.483 }));
        batch.addRow(new DataList(new double[]{ 0.484 }));
        batch.addRow(new DataList(new double[]{ 0.485 }));
        batch.addRow(new DataList(new double[]{ 0.486 }));
        batch.addRow(new DataList(new double[]{ 0.487 }));
        batch.addRow(new DataList(new double[]{ 0.488 }));
        batch.addRow(new DataList(new double[]{ 0.489 }));
        batch.addRow(new DataList(new double[]{ 0.49 }));
        batch.addRow(new DataList(new double[]{ 0.491 }));
        batch.addRow(new DataList(new double[]{ 0.492 }));
        batch.addRow(new DataList(new double[]{ 0.493 }));
        batch.addRow(new DataList(new double[]{ 0.494 }));
        batch.addRow(new DataList(new double[]{ 0.495 }));
        batch.addRow(new DataList(new double[]{ 0.496 }));
        batch.addRow(new DataList(new double[]{ 0.497 }));
        batch.addRow(new DataList(new double[]{ 0.498 }));
        batch.addRow(new DataList(new double[]{ 0.499 }));
        batch.addRow(new DataList(new double[]{ 0.5 }));
        batch.addRow(new DataList(new double[]{ 0.501 }));
        batch.addRow(new DataList(new double[]{ 0.502 }));
        batch.addRow(new DataList(new double[]{ 0.503 }));
        batch.addRow(new DataList(new double[]{ 0.504 }));
        batch.addRow(new DataList(new double[]{ 0.505 }));
        batch.addRow(new DataList(new double[]{ 0.506 }));
        batch.addRow(new DataList(new double[]{ 0.507 }));
        batch.addRow(new DataList(new double[]{ 0.508 }));
        batch.addRow(new DataList(new double[]{ 0.509 }));
        batch.addRow(new DataList(new double[]{ 0.51 }));
        batch.addRow(new DataList(new double[]{ 0.511 }));
        batch.addRow(new DataList(new double[]{ 0.512 }));
        batch.addRow(new DataList(new double[]{ 0.513 }));
        batch.addRow(new DataList(new double[]{ 0.514 }));
        batch.addRow(new DataList(new double[]{ 0.515 }));
        batch.addRow(new DataList(new double[]{ 0.516 }));
        batch.addRow(new DataList(new double[]{ 0.517 }));
        batch.addRow(new DataList(new double[]{ 0.518 }));
        batch.addRow(new DataList(new double[]{ 0.519 }));
        batch.addRow(new DataList(new double[]{ 0.52 }));
        batch.addRow(new DataList(new double[]{ 0.521 }));
        batch.addRow(new DataList(new double[]{ 0.522 }));
        batch.addRow(new DataList(new double[]{ 0.523 }));
        batch.addRow(new DataList(new double[]{ 0.524 }));
        batch.addRow(new DataList(new double[]{ 0.525 }));
        batch.addRow(new DataList(new double[]{ 0.526 }));
        batch.addRow(new DataList(new double[]{ 0.527 }));
        batch.addRow(new DataList(new double[]{ 0.528 }));
        batch.addRow(new DataList(new double[]{ 0.529 }));
        batch.addRow(new DataList(new double[]{ 0.53 }));
        batch.addRow(new DataList(new double[]{ 0.531 }));
        batch.addRow(new DataList(new double[]{ 0.532 }));
        batch.addRow(new DataList(new double[]{ 0.533 }));
        batch.addRow(new DataList(new double[]{ 0.534 }));
        batch.addRow(new DataList(new double[]{ 0.535 }));
        batch.addRow(new DataList(new double[]{ 0.536 }));
        batch.addRow(new DataList(new double[]{ 0.537 }));
        batch.addRow(new DataList(new double[]{ 0.538 }));
        batch.addRow(new DataList(new double[]{ 0.539 }));
        batch.addRow(new DataList(new double[]{ 0.54 }));
        batch.addRow(new DataList(new double[]{ 0.541 }));
        batch.addRow(new DataList(new double[]{ 0.542 }));
        batch.addRow(new DataList(new double[]{ 0.543 }));
        batch.addRow(new DataList(new double[]{ 0.544 }));
        batch.addRow(new DataList(new double[]{ 0.545 }));
        batch.addRow(new DataList(new double[]{ 0.546 }));
        batch.addRow(new DataList(new double[]{ 0.547 }));
        batch.addRow(new DataList(new double[]{ 0.548 }));
        batch.addRow(new DataList(new double[]{ 0.549 }));
        batch.addRow(new DataList(new double[]{ 0.55 }));
        batch.addRow(new DataList(new double[]{ 0.551 }));
        batch.addRow(new DataList(new double[]{ 0.552 }));
        batch.addRow(new DataList(new double[]{ 0.553 }));
        batch.addRow(new DataList(new double[]{ 0.554 }));
        batch.addRow(new DataList(new double[]{ 0.555 }));
        batch.addRow(new DataList(new double[]{ 0.556 }));
        batch.addRow(new DataList(new double[]{ 0.557 }));
        batch.addRow(new DataList(new double[]{ 0.558 }));
        batch.addRow(new DataList(new double[]{ 0.559 }));
        batch.addRow(new DataList(new double[]{ 0.56 }));
        batch.addRow(new DataList(new double[]{ 0.561 }));
        batch.addRow(new DataList(new double[]{ 0.562 }));
        batch.addRow(new DataList(new double[]{ 0.563 }));
        batch.addRow(new DataList(new double[]{ 0.564 }));
        batch.addRow(new DataList(new double[]{ 0.565 }));
        batch.addRow(new DataList(new double[]{ 0.566 }));
        batch.addRow(new DataList(new double[]{ 0.567 }));
        batch.addRow(new DataList(new double[]{ 0.568 }));
        batch.addRow(new DataList(new double[]{ 0.569 }));
        batch.addRow(new DataList(new double[]{ 0.57 }));
        batch.addRow(new DataList(new double[]{ 0.571 }));
        batch.addRow(new DataList(new double[]{ 0.572 }));
        batch.addRow(new DataList(new double[]{ 0.573 }));
        batch.addRow(new DataList(new double[]{ 0.574 }));
        batch.addRow(new DataList(new double[]{ 0.575 }));
        batch.addRow(new DataList(new double[]{ 0.576 }));
        batch.addRow(new DataList(new double[]{ 0.577 }));
        batch.addRow(new DataList(new double[]{ 0.578 }));
        batch.addRow(new DataList(new double[]{ 0.579 }));
        batch.addRow(new DataList(new double[]{ 0.58 }));
        batch.addRow(new DataList(new double[]{ 0.581 }));
        batch.addRow(new DataList(new double[]{ 0.582 }));
        batch.addRow(new DataList(new double[]{ 0.583 }));
        batch.addRow(new DataList(new double[]{ 0.584 }));
        batch.addRow(new DataList(new double[]{ 0.585 }));
        batch.addRow(new DataList(new double[]{ 0.586 }));
        batch.addRow(new DataList(new double[]{ 0.587 }));
        batch.addRow(new DataList(new double[]{ 0.588 }));
        batch.addRow(new DataList(new double[]{ 0.589 }));
        batch.addRow(new DataList(new double[]{ 0.59 }));
        batch.addRow(new DataList(new double[]{ 0.591 }));
        batch.addRow(new DataList(new double[]{ 0.592 }));
        batch.addRow(new DataList(new double[]{ 0.593 }));
        batch.addRow(new DataList(new double[]{ 0.594 }));
        batch.addRow(new DataList(new double[]{ 0.595 }));
        batch.addRow(new DataList(new double[]{ 0.596 }));
        batch.addRow(new DataList(new double[]{ 0.597 }));
        batch.addRow(new DataList(new double[]{ 0.598 }));
        batch.addRow(new DataList(new double[]{ 0.599 }));
        batch.addRow(new DataList(new double[]{ 0.6 }));
        batch.addRow(new DataList(new double[]{ 0.601 }));
        batch.addRow(new DataList(new double[]{ 0.602 }));
        batch.addRow(new DataList(new double[]{ 0.603 }));
        batch.addRow(new DataList(new double[]{ 0.604 }));
        batch.addRow(new DataList(new double[]{ 0.605 }));
        batch.addRow(new DataList(new double[]{ 0.606 }));
        batch.addRow(new DataList(new double[]{ 0.607 }));
        batch.addRow(new DataList(new double[]{ 0.608 }));
        batch.addRow(new DataList(new double[]{ 0.609 }));
        batch.addRow(new DataList(new double[]{ 0.61 }));
        batch.addRow(new DataList(new double[]{ 0.611 }));
        batch.addRow(new DataList(new double[]{ 0.612 }));
        batch.addRow(new DataList(new double[]{ 0.613 }));
        batch.addRow(new DataList(new double[]{ 0.614 }));
        batch.addRow(new DataList(new double[]{ 0.615 }));
        batch.addRow(new DataList(new double[]{ 0.616 }));
        batch.addRow(new DataList(new double[]{ 0.617 }));
        batch.addRow(new DataList(new double[]{ 0.618 }));
        batch.addRow(new DataList(new double[]{ 0.619 }));
        batch.addRow(new DataList(new double[]{ 0.62 }));
        batch.addRow(new DataList(new double[]{ 0.621 }));
        batch.addRow(new DataList(new double[]{ 0.622 }));
        batch.addRow(new DataList(new double[]{ 0.623 }));
        batch.addRow(new DataList(new double[]{ 0.624 }));
        batch.addRow(new DataList(new double[]{ 0.625 }));
        batch.addRow(new DataList(new double[]{ 0.626 }));
        batch.addRow(new DataList(new double[]{ 0.627 }));
        batch.addRow(new DataList(new double[]{ 0.628 }));
        batch.addRow(new DataList(new double[]{ 0.629 }));
        batch.addRow(new DataList(new double[]{ 0.63 }));
        batch.addRow(new DataList(new double[]{ 0.631 }));
        batch.addRow(new DataList(new double[]{ 0.632 }));
        batch.addRow(new DataList(new double[]{ 0.633 }));
        batch.addRow(new DataList(new double[]{ 0.634 }));
        batch.addRow(new DataList(new double[]{ 0.635 }));
        batch.addRow(new DataList(new double[]{ 0.636 }));
        batch.addRow(new DataList(new double[]{ 0.637 }));
        batch.addRow(new DataList(new double[]{ 0.638 }));
        batch.addRow(new DataList(new double[]{ 0.639 }));
        batch.addRow(new DataList(new double[]{ 0.64 }));
        batch.addRow(new DataList(new double[]{ 0.641 }));
        batch.addRow(new DataList(new double[]{ 0.642 }));
        batch.addRow(new DataList(new double[]{ 0.643 }));
        batch.addRow(new DataList(new double[]{ 0.644 }));
        batch.addRow(new DataList(new double[]{ 0.645 }));
        batch.addRow(new DataList(new double[]{ 0.646 }));
        batch.addRow(new DataList(new double[]{ 0.647 }));
        batch.addRow(new DataList(new double[]{ 0.648 }));
        batch.addRow(new DataList(new double[]{ 0.649 }));
        batch.addRow(new DataList(new double[]{ 0.65 }));
        batch.addRow(new DataList(new double[]{ 0.651 }));
        batch.addRow(new DataList(new double[]{ 0.652 }));
        batch.addRow(new DataList(new double[]{ 0.653 }));
        batch.addRow(new DataList(new double[]{ 0.654 }));
        batch.addRow(new DataList(new double[]{ 0.655 }));
        batch.addRow(new DataList(new double[]{ 0.656 }));
        batch.addRow(new DataList(new double[]{ 0.657 }));
        batch.addRow(new DataList(new double[]{ 0.658 }));
        batch.addRow(new DataList(new double[]{ 0.659 }));
        batch.addRow(new DataList(new double[]{ 0.66 }));
        batch.addRow(new DataList(new double[]{ 0.661 }));
        batch.addRow(new DataList(new double[]{ 0.662 }));
        batch.addRow(new DataList(new double[]{ 0.663 }));
        batch.addRow(new DataList(new double[]{ 0.664 }));
        batch.addRow(new DataList(new double[]{ 0.665 }));
        batch.addRow(new DataList(new double[]{ 0.666 }));
        batch.addRow(new DataList(new double[]{ 0.667 }));
        batch.addRow(new DataList(new double[]{ 0.668 }));
        batch.addRow(new DataList(new double[]{ 0.669 }));
        batch.addRow(new DataList(new double[]{ 0.67 }));
        batch.addRow(new DataList(new double[]{ 0.671 }));
        batch.addRow(new DataList(new double[]{ 0.672 }));
        batch.addRow(new DataList(new double[]{ 0.673 }));
        batch.addRow(new DataList(new double[]{ 0.674 }));
        batch.addRow(new DataList(new double[]{ 0.675 }));
        batch.addRow(new DataList(new double[]{ 0.676 }));
        batch.addRow(new DataList(new double[]{ 0.677 }));
        batch.addRow(new DataList(new double[]{ 0.678 }));
        batch.addRow(new DataList(new double[]{ 0.679 }));
        batch.addRow(new DataList(new double[]{ 0.68 }));
        batch.addRow(new DataList(new double[]{ 0.681 }));
        batch.addRow(new DataList(new double[]{ 0.682 }));
        batch.addRow(new DataList(new double[]{ 0.683 }));
        batch.addRow(new DataList(new double[]{ 0.684 }));
        batch.addRow(new DataList(new double[]{ 0.685 }));
        batch.addRow(new DataList(new double[]{ 0.686 }));
        batch.addRow(new DataList(new double[]{ 0.687 }));
        batch.addRow(new DataList(new double[]{ 0.688 }));
        batch.addRow(new DataList(new double[]{ 0.689 }));
        batch.addRow(new DataList(new double[]{ 0.69 }));
        batch.addRow(new DataList(new double[]{ 0.691 }));
        batch.addRow(new DataList(new double[]{ 0.692 }));
        batch.addRow(new DataList(new double[]{ 0.693 }));
        batch.addRow(new DataList(new double[]{ 0.694 }));
        batch.addRow(new DataList(new double[]{ 0.695 }));
        batch.addRow(new DataList(new double[]{ 0.696 }));
        batch.addRow(new DataList(new double[]{ 0.697 }));
        batch.addRow(new DataList(new double[]{ 0.698 }));
        batch.addRow(new DataList(new double[]{ 0.699 }));
        batch.addRow(new DataList(new double[]{ 0.7 }));
        batch.addRow(new DataList(new double[]{ 0.701 }));
        batch.addRow(new DataList(new double[]{ 0.702 }));
        batch.addRow(new DataList(new double[]{ 0.703 }));
        batch.addRow(new DataList(new double[]{ 0.704 }));
        batch.addRow(new DataList(new double[]{ 0.705 }));
        batch.addRow(new DataList(new double[]{ 0.706 }));
        batch.addRow(new DataList(new double[]{ 0.707 }));
        batch.addRow(new DataList(new double[]{ 0.708 }));
        batch.addRow(new DataList(new double[]{ 0.709 }));
        batch.addRow(new DataList(new double[]{ 0.71 }));
        batch.addRow(new DataList(new double[]{ 0.711 }));
        batch.addRow(new DataList(new double[]{ 0.712 }));
        batch.addRow(new DataList(new double[]{ 0.713 }));
        batch.addRow(new DataList(new double[]{ 0.714 }));
        batch.addRow(new DataList(new double[]{ 0.715 }));
        batch.addRow(new DataList(new double[]{ 0.716 }));
        batch.addRow(new DataList(new double[]{ 0.717 }));
        batch.addRow(new DataList(new double[]{ 0.718 }));
        batch.addRow(new DataList(new double[]{ 0.719 }));
        batch.addRow(new DataList(new double[]{ 0.72 }));
        batch.addRow(new DataList(new double[]{ 0.721 }));
        batch.addRow(new DataList(new double[]{ 0.722 }));
        batch.addRow(new DataList(new double[]{ 0.723 }));
        batch.addRow(new DataList(new double[]{ 0.724 }));
        batch.addRow(new DataList(new double[]{ 0.725 }));
        batch.addRow(new DataList(new double[]{ 0.726 }));
        batch.addRow(new DataList(new double[]{ 0.727 }));
        batch.addRow(new DataList(new double[]{ 0.728 }));
        batch.addRow(new DataList(new double[]{ 0.729 }));
        batch.addRow(new DataList(new double[]{ 0.73 }));
        batch.addRow(new DataList(new double[]{ 0.731 }));
        batch.addRow(new DataList(new double[]{ 0.732 }));
        batch.addRow(new DataList(new double[]{ 0.733 }));
        batch.addRow(new DataList(new double[]{ 0.734 }));
        batch.addRow(new DataList(new double[]{ 0.735 }));
        batch.addRow(new DataList(new double[]{ 0.736 }));
        batch.addRow(new DataList(new double[]{ 0.737 }));
        batch.addRow(new DataList(new double[]{ 0.738 }));
        batch.addRow(new DataList(new double[]{ 0.739 }));
        batch.addRow(new DataList(new double[]{ 0.74 }));
        batch.addRow(new DataList(new double[]{ 0.741 }));
        batch.addRow(new DataList(new double[]{ 0.742 }));
        batch.addRow(new DataList(new double[]{ 0.743 }));
        batch.addRow(new DataList(new double[]{ 0.744 }));
        batch.addRow(new DataList(new double[]{ 0.745 }));
        batch.addRow(new DataList(new double[]{ 0.746 }));
        batch.addRow(new DataList(new double[]{ 0.747 }));
        batch.addRow(new DataList(new double[]{ 0.748 }));
        batch.addRow(new DataList(new double[]{ 0.749 }));
        batch.addRow(new DataList(new double[]{ 0.75 }));
        batch.addRow(new DataList(new double[]{ 0.751 }));
        batch.addRow(new DataList(new double[]{ 0.752 }));
        batch.addRow(new DataList(new double[]{ 0.753 }));
        batch.addRow(new DataList(new double[]{ 0.754 }));
        batch.addRow(new DataList(new double[]{ 0.755 }));
        batch.addRow(new DataList(new double[]{ 0.756 }));
        batch.addRow(new DataList(new double[]{ 0.757 }));
        batch.addRow(new DataList(new double[]{ 0.758 }));
        batch.addRow(new DataList(new double[]{ 0.759 }));
        batch.addRow(new DataList(new double[]{ 0.76 }));
        batch.addRow(new DataList(new double[]{ 0.761 }));
        batch.addRow(new DataList(new double[]{ 0.762 }));
        batch.addRow(new DataList(new double[]{ 0.763 }));
        batch.addRow(new DataList(new double[]{ 0.764 }));
        batch.addRow(new DataList(new double[]{ 0.765 }));
        batch.addRow(new DataList(new double[]{ 0.766 }));
        batch.addRow(new DataList(new double[]{ 0.767 }));
        batch.addRow(new DataList(new double[]{ 0.768 }));
        batch.addRow(new DataList(new double[]{ 0.769 }));
        batch.addRow(new DataList(new double[]{ 0.77 }));
        batch.addRow(new DataList(new double[]{ 0.771 }));
        batch.addRow(new DataList(new double[]{ 0.772 }));
        batch.addRow(new DataList(new double[]{ 0.773 }));
        batch.addRow(new DataList(new double[]{ 0.774 }));
        batch.addRow(new DataList(new double[]{ 0.775 }));
        batch.addRow(new DataList(new double[]{ 0.776 }));
        batch.addRow(new DataList(new double[]{ 0.777 }));
        batch.addRow(new DataList(new double[]{ 0.778 }));
        batch.addRow(new DataList(new double[]{ 0.779 }));
        batch.addRow(new DataList(new double[]{ 0.78 }));
        batch.addRow(new DataList(new double[]{ 0.781 }));
        batch.addRow(new DataList(new double[]{ 0.782 }));
        batch.addRow(new DataList(new double[]{ 0.783 }));
        batch.addRow(new DataList(new double[]{ 0.784 }));
        batch.addRow(new DataList(new double[]{ 0.785 }));
        batch.addRow(new DataList(new double[]{ 0.786 }));
        batch.addRow(new DataList(new double[]{ 0.787 }));
        batch.addRow(new DataList(new double[]{ 0.788 }));
        batch.addRow(new DataList(new double[]{ 0.789 }));
        batch.addRow(new DataList(new double[]{ 0.79 }));
        batch.addRow(new DataList(new double[]{ 0.791 }));
        batch.addRow(new DataList(new double[]{ 0.792 }));
        batch.addRow(new DataList(new double[]{ 0.793 }));
        batch.addRow(new DataList(new double[]{ 0.794 }));
        batch.addRow(new DataList(new double[]{ 0.795 }));
        batch.addRow(new DataList(new double[]{ 0.796 }));
        batch.addRow(new DataList(new double[]{ 0.797 }));
        batch.addRow(new DataList(new double[]{ 0.798 }));
        batch.addRow(new DataList(new double[]{ 0.799 }));
        batch.addRow(new DataList(new double[]{ 0.8 }));
        batch.addRow(new DataList(new double[]{ 0.801 }));
        batch.addRow(new DataList(new double[]{ 0.802 }));
        batch.addRow(new DataList(new double[]{ 0.803 }));
        batch.addRow(new DataList(new double[]{ 0.804 }));
        batch.addRow(new DataList(new double[]{ 0.805 }));
        batch.addRow(new DataList(new double[]{ 0.806 }));
        batch.addRow(new DataList(new double[]{ 0.807 }));
        batch.addRow(new DataList(new double[]{ 0.808 }));
        batch.addRow(new DataList(new double[]{ 0.809 }));
        batch.addRow(new DataList(new double[]{ 0.81 }));
        batch.addRow(new DataList(new double[]{ 0.811 }));
        batch.addRow(new DataList(new double[]{ 0.812 }));
        batch.addRow(new DataList(new double[]{ 0.813 }));
        batch.addRow(new DataList(new double[]{ 0.814 }));
        batch.addRow(new DataList(new double[]{ 0.815 }));
        batch.addRow(new DataList(new double[]{ 0.816 }));
        batch.addRow(new DataList(new double[]{ 0.817 }));
        batch.addRow(new DataList(new double[]{ 0.818 }));
        batch.addRow(new DataList(new double[]{ 0.819 }));
        batch.addRow(new DataList(new double[]{ 0.82 }));
        batch.addRow(new DataList(new double[]{ 0.821 }));
        batch.addRow(new DataList(new double[]{ 0.822 }));
        batch.addRow(new DataList(new double[]{ 0.823 }));
        batch.addRow(new DataList(new double[]{ 0.824 }));
        batch.addRow(new DataList(new double[]{ 0.825 }));
        batch.addRow(new DataList(new double[]{ 0.826 }));
        batch.addRow(new DataList(new double[]{ 0.827 }));
        batch.addRow(new DataList(new double[]{ 0.828 }));
        batch.addRow(new DataList(new double[]{ 0.829 }));
        batch.addRow(new DataList(new double[]{ 0.83 }));
        batch.addRow(new DataList(new double[]{ 0.831 }));
        batch.addRow(new DataList(new double[]{ 0.832 }));
        batch.addRow(new DataList(new double[]{ 0.833 }));
        batch.addRow(new DataList(new double[]{ 0.834 }));
        batch.addRow(new DataList(new double[]{ 0.835 }));
        batch.addRow(new DataList(new double[]{ 0.836 }));
        batch.addRow(new DataList(new double[]{ 0.837 }));
        batch.addRow(new DataList(new double[]{ 0.838 }));
        batch.addRow(new DataList(new double[]{ 0.839 }));
        batch.addRow(new DataList(new double[]{ 0.84 }));
        batch.addRow(new DataList(new double[]{ 0.841 }));
        batch.addRow(new DataList(new double[]{ 0.842 }));
        batch.addRow(new DataList(new double[]{ 0.843 }));
        batch.addRow(new DataList(new double[]{ 0.844 }));
        batch.addRow(new DataList(new double[]{ 0.845 }));
        batch.addRow(new DataList(new double[]{ 0.846 }));
        batch.addRow(new DataList(new double[]{ 0.847 }));
        batch.addRow(new DataList(new double[]{ 0.848 }));
        batch.addRow(new DataList(new double[]{ 0.849 }));
        batch.addRow(new DataList(new double[]{ 0.85 }));
        batch.addRow(new DataList(new double[]{ 0.851 }));
        batch.addRow(new DataList(new double[]{ 0.852 }));
        batch.addRow(new DataList(new double[]{ 0.853 }));
        batch.addRow(new DataList(new double[]{ 0.854 }));
        batch.addRow(new DataList(new double[]{ 0.855 }));
        batch.addRow(new DataList(new double[]{ 0.856 }));
        batch.addRow(new DataList(new double[]{ 0.857 }));
        batch.addRow(new DataList(new double[]{ 0.858 }));
        batch.addRow(new DataList(new double[]{ 0.859 }));
        batch.addRow(new DataList(new double[]{ 0.86 }));
        batch.addRow(new DataList(new double[]{ 0.861 }));
        batch.addRow(new DataList(new double[]{ 0.862 }));
        batch.addRow(new DataList(new double[]{ 0.863 }));
        batch.addRow(new DataList(new double[]{ 0.864 }));
        batch.addRow(new DataList(new double[]{ 0.865 }));
        batch.addRow(new DataList(new double[]{ 0.866 }));
        batch.addRow(new DataList(new double[]{ 0.867 }));
        batch.addRow(new DataList(new double[]{ 0.868 }));
        batch.addRow(new DataList(new double[]{ 0.869 }));
        batch.addRow(new DataList(new double[]{ 0.87 }));
        batch.addRow(new DataList(new double[]{ 0.871 }));
        batch.addRow(new DataList(new double[]{ 0.872 }));
        batch.addRow(new DataList(new double[]{ 0.873 }));
        batch.addRow(new DataList(new double[]{ 0.874 }));
        batch.addRow(new DataList(new double[]{ 0.875 }));
        batch.addRow(new DataList(new double[]{ 0.876 }));
        batch.addRow(new DataList(new double[]{ 0.877 }));
        batch.addRow(new DataList(new double[]{ 0.878 }));
        batch.addRow(new DataList(new double[]{ 0.879 }));
        batch.addRow(new DataList(new double[]{ 0.88 }));
        batch.addRow(new DataList(new double[]{ 0.881 }));
        batch.addRow(new DataList(new double[]{ 0.882 }));
        batch.addRow(new DataList(new double[]{ 0.883 }));
        batch.addRow(new DataList(new double[]{ 0.884 }));
        batch.addRow(new DataList(new double[]{ 0.885 }));
        batch.addRow(new DataList(new double[]{ 0.886 }));
        batch.addRow(new DataList(new double[]{ 0.887 }));
        batch.addRow(new DataList(new double[]{ 0.888 }));
        batch.addRow(new DataList(new double[]{ 0.889 }));
        batch.addRow(new DataList(new double[]{ 0.89 }));
        batch.addRow(new DataList(new double[]{ 0.891 }));
        batch.addRow(new DataList(new double[]{ 0.892 }));
        batch.addRow(new DataList(new double[]{ 0.893 }));
        batch.addRow(new DataList(new double[]{ 0.894 }));
        batch.addRow(new DataList(new double[]{ 0.895 }));
        batch.addRow(new DataList(new double[]{ 0.896 }));
        batch.addRow(new DataList(new double[]{ 0.897 }));
        batch.addRow(new DataList(new double[]{ 0.898 }));
        batch.addRow(new DataList(new double[]{ 0.899 }));
        batch.addRow(new DataList(new double[]{ 0.9 }));
        batch.addRow(new DataList(new double[]{ 0.901 }));
        batch.addRow(new DataList(new double[]{ 0.902 }));
        batch.addRow(new DataList(new double[]{ 0.903 }));
        batch.addRow(new DataList(new double[]{ 0.904 }));
        batch.addRow(new DataList(new double[]{ 0.905 }));
        batch.addRow(new DataList(new double[]{ 0.906 }));
        batch.addRow(new DataList(new double[]{ 0.907 }));
        batch.addRow(new DataList(new double[]{ 0.908 }));
        batch.addRow(new DataList(new double[]{ 0.909 }));
        batch.addRow(new DataList(new double[]{ 0.91 }));
        batch.addRow(new DataList(new double[]{ 0.911 }));
        batch.addRow(new DataList(new double[]{ 0.912 }));
        batch.addRow(new DataList(new double[]{ 0.913 }));
        batch.addRow(new DataList(new double[]{ 0.914 }));
        batch.addRow(new DataList(new double[]{ 0.915 }));
        batch.addRow(new DataList(new double[]{ 0.916 }));
        batch.addRow(new DataList(new double[]{ 0.917 }));
        batch.addRow(new DataList(new double[]{ 0.918 }));
        batch.addRow(new DataList(new double[]{ 0.919 }));
        batch.addRow(new DataList(new double[]{ 0.92 }));
        batch.addRow(new DataList(new double[]{ 0.921 }));
        batch.addRow(new DataList(new double[]{ 0.922 }));
        batch.addRow(new DataList(new double[]{ 0.923 }));
        batch.addRow(new DataList(new double[]{ 0.924 }));
        batch.addRow(new DataList(new double[]{ 0.925 }));
        batch.addRow(new DataList(new double[]{ 0.926 }));
        batch.addRow(new DataList(new double[]{ 0.927 }));
        batch.addRow(new DataList(new double[]{ 0.928 }));
        batch.addRow(new DataList(new double[]{ 0.929 }));
        batch.addRow(new DataList(new double[]{ 0.93 }));
        batch.addRow(new DataList(new double[]{ 0.931 }));
        batch.addRow(new DataList(new double[]{ 0.932 }));
        batch.addRow(new DataList(new double[]{ 0.933 }));
        batch.addRow(new DataList(new double[]{ 0.934 }));
        batch.addRow(new DataList(new double[]{ 0.935 }));
        batch.addRow(new DataList(new double[]{ 0.936 }));
        batch.addRow(new DataList(new double[]{ 0.937 }));
        batch.addRow(new DataList(new double[]{ 0.938 }));
        batch.addRow(new DataList(new double[]{ 0.939 }));
        batch.addRow(new DataList(new double[]{ 0.94 }));
        batch.addRow(new DataList(new double[]{ 0.941 }));
        batch.addRow(new DataList(new double[]{ 0.942 }));
        batch.addRow(new DataList(new double[]{ 0.943 }));
        batch.addRow(new DataList(new double[]{ 0.944 }));
        batch.addRow(new DataList(new double[]{ 0.945 }));
        batch.addRow(new DataList(new double[]{ 0.946 }));
        batch.addRow(new DataList(new double[]{ 0.947 }));
        batch.addRow(new DataList(new double[]{ 0.948 }));
        batch.addRow(new DataList(new double[]{ 0.949 }));
        batch.addRow(new DataList(new double[]{ 0.95 }));
        batch.addRow(new DataList(new double[]{ 0.951 }));
        batch.addRow(new DataList(new double[]{ 0.952 }));
        batch.addRow(new DataList(new double[]{ 0.953 }));
        batch.addRow(new DataList(new double[]{ 0.954 }));
        batch.addRow(new DataList(new double[]{ 0.955 }));
        batch.addRow(new DataList(new double[]{ 0.956 }));
        batch.addRow(new DataList(new double[]{ 0.957 }));
        batch.addRow(new DataList(new double[]{ 0.958 }));
        batch.addRow(new DataList(new double[]{ 0.959 }));
        batch.addRow(new DataList(new double[]{ 0.96 }));
        batch.addRow(new DataList(new double[]{ 0.961 }));
        batch.addRow(new DataList(new double[]{ 0.962 }));
        batch.addRow(new DataList(new double[]{ 0.963 }));
        batch.addRow(new DataList(new double[]{ 0.964 }));
        batch.addRow(new DataList(new double[]{ 0.965 }));
        batch.addRow(new DataList(new double[]{ 0.966 }));
        batch.addRow(new DataList(new double[]{ 0.967 }));
        batch.addRow(new DataList(new double[]{ 0.968 }));
        batch.addRow(new DataList(new double[]{ 0.969 }));
        batch.addRow(new DataList(new double[]{ 0.97 }));
        batch.addRow(new DataList(new double[]{ 0.971 }));
        batch.addRow(new DataList(new double[]{ 0.972 }));
        batch.addRow(new DataList(new double[]{ 0.973 }));
        batch.addRow(new DataList(new double[]{ 0.974 }));
        batch.addRow(new DataList(new double[]{ 0.975 }));
        batch.addRow(new DataList(new double[]{ 0.976 }));
        batch.addRow(new DataList(new double[]{ 0.977 }));
        batch.addRow(new DataList(new double[]{ 0.978 }));
        batch.addRow(new DataList(new double[]{ 0.979 }));
        batch.addRow(new DataList(new double[]{ 0.98 }));
        batch.addRow(new DataList(new double[]{ 0.981 }));
        batch.addRow(new DataList(new double[]{ 0.982 }));
        batch.addRow(new DataList(new double[]{ 0.983 }));
        batch.addRow(new DataList(new double[]{ 0.984 }));
        batch.addRow(new DataList(new double[]{ 0.985 }));
        batch.addRow(new DataList(new double[]{ 0.986 }));
        batch.addRow(new DataList(new double[]{ 0.987 }));
        batch.addRow(new DataList(new double[]{ 0.988 }));
        batch.addRow(new DataList(new double[]{ 0.989 }));
        batch.addRow(new DataList(new double[]{ 0.99 }));
        batch.addRow(new DataList(new double[]{ 0.991 }));
        batch.addRow(new DataList(new double[]{ 0.992 }));
        batch.addRow(new DataList(new double[]{ 0.993 }));
        batch.addRow(new DataList(new double[]{ 0.994 }));
        batch.addRow(new DataList(new double[]{ 0.995 }));
        batch.addRow(new DataList(new double[]{ 0.996 }));
        batch.addRow(new DataList(new double[]{ 0.997 }));
        batch.addRow(new DataList(new double[]{ 0.998 }));
        batch.addRow(new DataList(new double[]{ 0.999 }));

        return batch;
    }

    public static Batch getTargetBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.006283143965558951 }));
        batch.addRow(new DataList(new double[]{ 0.012566039883352607 }));
        batch.addRow(new DataList(new double[]{ 0.018848439715408175 }));
        batch.addRow(new DataList(new double[]{ 0.02513009544333748 }));
        batch.addRow(new DataList(new double[]{ 0.03141075907812829 }));
        batch.addRow(new DataList(new double[]{ 0.03769018266993454 }));
        batch.addRow(new DataList(new double[]{ 0.0439681183178649 }));
        batch.addRow(new DataList(new double[]{ 0.050244318179769556 }));
        batch.addRow(new DataList(new double[]{ 0.05651853448202452 }));
        batch.addRow(new DataList(new double[]{ 0.06279051952931337 }));
        batch.addRow(new DataList(new double[]{ 0.06906002571440578 }));
        batch.addRow(new DataList(new double[]{ 0.07532680552793272 }));
        batch.addRow(new DataList(new double[]{ 0.08159061156815754 }));
        batch.addRow(new DataList(new double[]{ 0.08785119655074317 }));
        batch.addRow(new DataList(new double[]{ 0.09410831331851431 }));
        batch.addRow(new DataList(new double[]{ 0.1003617148512149 }));
        batch.addRow(new DataList(new double[]{ 0.10661115427525991 }));
        batch.addRow(new DataList(new double[]{ 0.11285638487348167 }));
        batch.addRow(new DataList(new double[]{ 0.11909716009486973 }));
        batch.addRow(new DataList(new double[]{ 0.12533323356430426 }));
        batch.addRow(new DataList(new double[]{ 0.1315643590922825 }));
        batch.addRow(new DataList(new double[]{ 0.13779029068463805 }));
        batch.addRow(new DataList(new double[]{ 0.14401078255225216 }));
        batch.addRow(new DataList(new double[]{ 0.15022558912075706 }));
        batch.addRow(new DataList(new double[]{ 0.15643446504023087 }));
        batch.addRow(new DataList(new double[]{ 0.16263716519488358 }));
        batch.addRow(new DataList(new double[]{ 0.16883344471273387 }));
        batch.addRow(new DataList(new double[]{ 0.17502305897527604 }));
        batch.addRow(new DataList(new double[]{ 0.18120576362713736 }));
        batch.addRow(new DataList(new double[]{ 0.1873813145857246 }));
        batch.addRow(new DataList(new double[]{ 0.19354946805086023 }));
        batch.addRow(new DataList(new double[]{ 0.19970998051440703 }));
        batch.addRow(new DataList(new double[]{ 0.20586260876988133 }));
        batch.addRow(new DataList(new double[]{ 0.21200710992205463 }));
        batch.addRow(new DataList(new double[]{ 0.21814324139654256 }));
        batch.addRow(new DataList(new double[]{ 0.22427076094938114 }));
        batch.addRow(new DataList(new double[]{ 0.23038942667659057 }));
        batch.addRow(new DataList(new double[]{ 0.23649899702372468 }));
        batch.addRow(new DataList(new double[]{ 0.2425992307954074 }));
        batch.addRow(new DataList(new double[]{ 0.2486898871648548 }));
        batch.addRow(new DataList(new double[]{ 0.25477072568338216 }));
        batch.addRow(new DataList(new double[]{ 0.26084150628989694 }));
        batch.addRow(new DataList(new double[]{ 0.2669019893203755 }));
        batch.addRow(new DataList(new double[]{ 0.27295193551732516 }));
        batch.addRow(new DataList(new double[]{ 0.2789911060392293 }));
        batch.addRow(new DataList(new double[]{ 0.2850192624699761 }));
        batch.addRow(new DataList(new double[]{ 0.2910361668282718 }));
        batch.addRow(new DataList(new double[]{ 0.2970415815770349 }));
        batch.addRow(new DataList(new double[]{ 0.30303526963277394 }));
        batch.addRow(new DataList(new double[]{ 0.3090169943749474 }));
        batch.addRow(new DataList(new double[]{ 0.3149865196553048 }));
        batch.addRow(new DataList(new double[]{ 0.3209436098072095 }));
        batch.addRow(new DataList(new double[]{ 0.32688802965494246 }));
        batch.addRow(new DataList(new double[]{ 0.3328195445229866 }));
        batch.addRow(new DataList(new double[]{ 0.33873792024529137 }));
        batch.addRow(new DataList(new double[]{ 0.34464292317451706 }));
        batch.addRow(new DataList(new double[]{ 0.350534320191259 }));
        batch.addRow(new DataList(new double[]{ 0.35641187871325075 }));
        batch.addRow(new DataList(new double[]{ 0.36227536670454563 }));
        batch.addRow(new DataList(new double[]{ 0.3681245526846779 }));
        batch.addRow(new DataList(new double[]{ 0.3739592057378004 }));
        batch.addRow(new DataList(new double[]{ 0.37977909552180106 }));
        batch.addRow(new DataList(new double[]{ 0.38558399227739654 }));
        batch.addRow(new DataList(new double[]{ 0.3913736668372024 }));
        batch.addRow(new DataList(new double[]{ 0.3971478906347806 }));
        batch.addRow(new DataList(new double[]{ 0.40290643571366264 }));
        batch.addRow(new DataList(new double[]{ 0.40864907473634904 }));
        batch.addRow(new DataList(new double[]{ 0.41437558099328414 }));
        batch.addRow(new DataList(new double[]{ 0.42008572841180625 }));
        batch.addRow(new DataList(new double[]{ 0.4257792915650727 }));
        batch.addRow(new DataList(new double[]{ 0.4314560456809589 }));
        batch.addRow(new DataList(new double[]{ 0.4371157666509328 }));
        batch.addRow(new DataList(new double[]{ 0.44275823103890144 }));
        batch.addRow(new DataList(new double[]{ 0.44838321609003223 }));
        batch.addRow(new DataList(new double[]{ 0.45399049973954675 }));
        batch.addRow(new DataList(new double[]{ 0.4595798606214878 }));
        batch.addRow(new DataList(new double[]{ 0.4651510780774583 }));
        batch.addRow(new DataList(new double[]{ 0.4707039321653325 }));
        batch.addRow(new DataList(new double[]{ 0.47623820366793906 }));
        batch.addRow(new DataList(new double[]{ 0.4817536741017153 }));
        batch.addRow(new DataList(new double[]{ 0.4872501257253323 }));
        batch.addRow(new DataList(new double[]{ 0.49272734154829156 }));
        batch.addRow(new DataList(new double[]{ 0.4981851053394908 }));
        batch.addRow(new DataList(new double[]{ 0.5036232016357608 }));
        batch.addRow(new DataList(new double[]{ 0.5090414157503713 }));
        batch.addRow(new DataList(new double[]{ 0.5144395337815063 }));
        batch.addRow(new DataList(new double[]{ 0.5198173426207094 }));
        batch.addRow(new DataList(new double[]{ 0.5251746299612956 }));
        batch.addRow(new DataList(new double[]{ 0.530511184306734 }));
        batch.addRow(new DataList(new double[]{ 0.5358267949789967 }));
        batch.addRow(new DataList(new double[]{ 0.5411212521268758 }));
        batch.addRow(new DataList(new double[]{ 0.5463943467342691 }));
        batch.addRow(new DataList(new double[]{ 0.5516458706284302 }));
        batch.addRow(new DataList(new double[]{ 0.556875616488188 }));
        batch.addRow(new DataList(new double[]{ 0.5620833778521306 }));
        batch.addRow(new DataList(new double[]{ 0.5672689491267565 }));
        batch.addRow(new DataList(new double[]{ 0.5724321255945909 }));
        batch.addRow(new DataList(new double[]{ 0.5775727034222675 }));
        batch.addRow(new DataList(new double[]{ 0.5826904796685761 }));
        batch.addRow(new DataList(new double[]{ 0.5877852522924731 }));
        batch.addRow(new DataList(new double[]{ 0.5928568201610592 }));
        batch.addRow(new DataList(new double[]{ 0.5979049830575188 }));
        batch.addRow(new DataList(new double[]{ 0.6029295416890247 }));
        batch.addRow(new DataList(new double[]{ 0.6079302976946054 }));
        batch.addRow(new DataList(new double[]{ 0.6129070536529764 }));
        batch.addRow(new DataList(new double[]{ 0.6178596130903343 }));
        batch.addRow(new DataList(new double[]{ 0.6227877804881126 }));
        batch.addRow(new DataList(new double[]{ 0.6276913612907005 }));
        batch.addRow(new DataList(new double[]{ 0.6325701619131244 }));
        batch.addRow(new DataList(new double[]{ 0.6374239897486896 }));
        batch.addRow(new DataList(new double[]{ 0.6422526531765844 }));
        batch.addRow(new DataList(new double[]{ 0.6470559615694442 }));
        batch.addRow(new DataList(new double[]{ 0.6518337253008788 }));
        batch.addRow(new DataList(new double[]{ 0.6565857557529565 }));
        batch.addRow(new DataList(new double[]{ 0.6613118653236518 }));
        batch.addRow(new DataList(new double[]{ 0.6660118674342517 }));
        batch.addRow(new DataList(new double[]{ 0.67068557653672 }));
        batch.addRow(new DataList(new double[]{ 0.6753328081210244 }));
        batch.addRow(new DataList(new double[]{ 0.6799533787224191 }));
        batch.addRow(new DataList(new double[]{ 0.6845471059286886 }));
        batch.addRow(new DataList(new double[]{ 0.6891138083873485 }));
        batch.addRow(new DataList(new double[]{ 0.6936533058128049 }));
        batch.addRow(new DataList(new double[]{ 0.6981654189934726 }));
        batch.addRow(new DataList(new double[]{ 0.7026499697988492 }));
        batch.addRow(new DataList(new double[]{ 0.7071067811865476 }));
        batch.addRow(new DataList(new double[]{ 0.7115356772092853 }));
        batch.addRow(new DataList(new double[]{ 0.7159364830218311 }));
        batch.addRow(new DataList(new double[]{ 0.7203090248879069 }));
        batch.addRow(new DataList(new double[]{ 0.7246531301870466 }));
        batch.addRow(new DataList(new double[]{ 0.7289686274214116 }));
        batch.addRow(new DataList(new double[]{ 0.7332553462225601 }));
        batch.addRow(new DataList(new double[]{ 0.7375131173581739 }));
        batch.addRow(new DataList(new double[]{ 0.7417417727387392 }));
        batch.addRow(new DataList(new double[]{ 0.7459411454241821 }));
        batch.addRow(new DataList(new double[]{ 0.7501110696304596 }));
        batch.addRow(new DataList(new double[]{ 0.7542513807361038 }));
        batch.addRow(new DataList(new double[]{ 0.7583619152887219 }));
        batch.addRow(new DataList(new double[]{ 0.7624425110114479 }));
        batch.addRow(new DataList(new double[]{ 0.7664930068093498 }));
        batch.addRow(new DataList(new double[]{ 0.7705132427757893 }));
        batch.addRow(new DataList(new double[]{ 0.7745030601987338 }));
        batch.addRow(new DataList(new double[]{ 0.7784623015670233 }));
        batch.addRow(new DataList(new double[]{ 0.7823908105765881 }));
        batch.addRow(new DataList(new double[]{ 0.7862884321366188 }));
        batch.addRow(new DataList(new double[]{ 0.7901550123756903 }));
        batch.addRow(new DataList(new double[]{ 0.7939903986478353 }));
        batch.addRow(new DataList(new double[]{ 0.797794439538571 }));
        batch.addRow(new DataList(new double[]{ 0.8015669848708765 }));
        batch.addRow(new DataList(new double[]{ 0.8053078857111219 }));
        batch.addRow(new DataList(new double[]{ 0.8090169943749475 }));
        batch.addRow(new DataList(new double[]{ 0.812694164433094 }));
        batch.addRow(new DataList(new double[]{ 0.8163392507171839 }));
        batch.addRow(new DataList(new double[]{ 0.8199521093254523 }));
        batch.addRow(new DataList(new double[]{ 0.8235325976284275 }));
        batch.addRow(new DataList(new double[]{ 0.8270805742745618 }));
        batch.addRow(new DataList(new double[]{ 0.8305958991958126 }));
        batch.addRow(new DataList(new double[]{ 0.8340784336131711 }));
        batch.addRow(new DataList(new double[]{ 0.8375280400421417 }));
        batch.addRow(new DataList(new double[]{ 0.840944582298169 }));
        batch.addRow(new DataList(new double[]{ 0.8443279255020151 }));
        batch.addRow(new DataList(new double[]{ 0.8476779360850831 }));
        batch.addRow(new DataList(new double[]{ 0.8509944817946918 }));
        batch.addRow(new DataList(new double[]{ 0.8542774316992952 }));
        batch.addRow(new DataList(new double[]{ 0.8575266561936523 }));
        batch.addRow(new DataList(new double[]{ 0.8607420270039436 }));
        batch.addRow(new DataList(new double[]{ 0.8639234171928353 }));
        batch.addRow(new DataList(new double[]{ 0.86707070116449 }));
        batch.addRow(new DataList(new double[]{ 0.8701837546695257 }));
        batch.addRow(new DataList(new double[]{ 0.8732624548099202 }));
        batch.addRow(new DataList(new double[]{ 0.8763066800438637 }));
        batch.addRow(new DataList(new double[]{ 0.8793163101905562 }));
        batch.addRow(new DataList(new double[]{ 0.8822912264349532 }));
        batch.addRow(new DataList(new double[]{ 0.8852313113324551 }));
        batch.addRow(new DataList(new double[]{ 0.8881364488135445 }));
        batch.addRow(new DataList(new double[]{ 0.8910065241883678 }));
        batch.addRow(new DataList(new double[]{ 0.8938414241512637 }));
        batch.addRow(new DataList(new double[]{ 0.8966410367852358 }));
        batch.addRow(new DataList(new double[]{ 0.899405251566371 }));
        batch.addRow(new DataList(new double[]{ 0.9021339593682028 }));
        batch.addRow(new DataList(new double[]{ 0.9048270524660196 }));
        batch.addRow(new DataList(new double[]{ 0.9074844245411169 }));
        batch.addRow(new DataList(new double[]{ 0.9101059706849957 }));
        batch.addRow(new DataList(new double[]{ 0.9126915874035028 }));
        batch.addRow(new DataList(new double[]{ 0.9152411726209175 }));
        batch.addRow(new DataList(new double[]{ 0.9177546256839811 }));
        batch.addRow(new DataList(new double[]{ 0.9202318473658703 }));
        batch.addRow(new DataList(new double[]{ 0.9226727398701148 }));
        batch.addRow(new DataList(new double[]{ 0.925077206834458 }));
        batch.addRow(new DataList(new double[]{ 0.9274451533346614 }));
        batch.addRow(new DataList(new double[]{ 0.9297764858882513 }));
        batch.addRow(new DataList(new double[]{ 0.932071112458211 }));
        batch.addRow(new DataList(new double[]{ 0.934328942456612 }));
        batch.addRow(new DataList(new double[]{ 0.9365498867481924 }));
        batch.addRow(new DataList(new double[]{ 0.9387338576538741 }));
        batch.addRow(new DataList(new double[]{ 0.9408807689542255 }));
        batch.addRow(new DataList(new double[]{ 0.9429905358928644 }));
        batch.addRow(new DataList(new double[]{ 0.9450630751798048 }));
        batch.addRow(new DataList(new double[]{ 0.9470983049947443 }));
        batch.addRow(new DataList(new double[]{ 0.9490961449902946 }));
        batch.addRow(new DataList(new double[]{ 0.9510565162951535 }));
        batch.addRow(new DataList(new double[]{ 0.9529793415172189 }));
        batch.addRow(new DataList(new double[]{ 0.954864544746643 }));
        batch.addRow(new DataList(new double[]{ 0.9567120515588305 }));
        batch.addRow(new DataList(new double[]{ 0.9585217890173758 }));
        batch.addRow(new DataList(new double[]{ 0.960293685676943 }));
        batch.addRow(new DataList(new double[]{ 0.9620276715860858 }));
        batch.addRow(new DataList(new double[]{ 0.9637236782900097 }));
        batch.addRow(new DataList(new double[]{ 0.9653816388332739 }));
        batch.addRow(new DataList(new double[]{ 0.967001487762435 }));
        batch.addRow(new DataList(new double[]{ 0.9685831611286311 }));
        batch.addRow(new DataList(new double[]{ 0.9701265964901058 }));
        batch.addRow(new DataList(new double[]{ 0.9716317329146739 }));
        batch.addRow(new DataList(new double[]{ 0.9730985109821265 }));
        batch.addRow(new DataList(new double[]{ 0.9745268727865771 }));
        batch.addRow(new DataList(new double[]{ 0.9759167619387473 }));
        batch.addRow(new DataList(new double[]{ 0.9772681235681935 }));
        batch.addRow(new DataList(new double[]{ 0.9785809043254721 }));
        batch.addRow(new DataList(new double[]{ 0.9798550523842469 }));
        batch.addRow(new DataList(new double[]{ 0.9810905174433341 }));
        batch.addRow(new DataList(new double[]{ 0.9822872507286886 }));
        batch.addRow(new DataList(new double[]{ 0.9834452049953297 }));
        batch.addRow(new DataList(new double[]{ 0.9845643345292053 }));
        batch.addRow(new DataList(new double[]{ 0.985644595148998 }));
        batch.addRow(new DataList(new double[]{ 0.986685944207868 }));
        batch.addRow(new DataList(new double[]{ 0.9876883405951378 }));
        batch.addRow(new DataList(new double[]{ 0.9886517447379141 }));
        batch.addRow(new DataList(new double[]{ 0.9895761186026509 }));
        batch.addRow(new DataList(new double[]{ 0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ 0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ 0.9921147013144779 }));
        batch.addRow(new DataList(new double[]{ 0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ 0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ 0.9943007903969989 }));
        batch.addRow(new DataList(new double[]{ 0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ 0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ 0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ 0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ 0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ 0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ 0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ 0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ 0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ 0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ 0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ 0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ 0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ 0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ 0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ 0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ 0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ 0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ 0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ 0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ 0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ 0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ 0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ 0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ 0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ 0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ 0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ 0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ 0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ 0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ 0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ 0.9943007903969989 }));
        batch.addRow(new DataList(new double[]{ 0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ 0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ 0.9921147013144778 }));
        batch.addRow(new DataList(new double[]{ 0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ 0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ 0.9895761186026509 }));
        batch.addRow(new DataList(new double[]{ 0.988651744737914 }));
        batch.addRow(new DataList(new double[]{ 0.9876883405951377 }));
        batch.addRow(new DataList(new double[]{ 0.986685944207868 }));
        batch.addRow(new DataList(new double[]{ 0.985644595148998 }));
        batch.addRow(new DataList(new double[]{ 0.9845643345292053 }));
        batch.addRow(new DataList(new double[]{ 0.9834452049953296 }));
        batch.addRow(new DataList(new double[]{ 0.9822872507286886 }));
        batch.addRow(new DataList(new double[]{ 0.9810905174433341 }));
        batch.addRow(new DataList(new double[]{ 0.9798550523842469 }));
        batch.addRow(new DataList(new double[]{ 0.9785809043254722 }));
        batch.addRow(new DataList(new double[]{ 0.9772681235681935 }));
        batch.addRow(new DataList(new double[]{ 0.9759167619387474 }));
        batch.addRow(new DataList(new double[]{ 0.9745268727865772 }));
        batch.addRow(new DataList(new double[]{ 0.9730985109821266 }));
        batch.addRow(new DataList(new double[]{ 0.971631732914674 }));
        batch.addRow(new DataList(new double[]{ 0.9701265964901059 }));
        batch.addRow(new DataList(new double[]{ 0.9685831611286312 }));
        batch.addRow(new DataList(new double[]{ 0.9670014877624351 }));
        batch.addRow(new DataList(new double[]{ 0.965381638833274 }));
        batch.addRow(new DataList(new double[]{ 0.9637236782900097 }));
        batch.addRow(new DataList(new double[]{ 0.9620276715860859 }));
        batch.addRow(new DataList(new double[]{ 0.9602936856769431 }));
        batch.addRow(new DataList(new double[]{ 0.958521789017376 }));
        batch.addRow(new DataList(new double[]{ 0.9567120515588305 }));
        batch.addRow(new DataList(new double[]{ 0.9548645447466431 }));
        batch.addRow(new DataList(new double[]{ 0.9529793415172189 }));
        batch.addRow(new DataList(new double[]{ 0.9510565162951536 }));
        batch.addRow(new DataList(new double[]{ 0.9490961449902947 }));
        batch.addRow(new DataList(new double[]{ 0.9470983049947443 }));
        batch.addRow(new DataList(new double[]{ 0.9450630751798049 }));
        batch.addRow(new DataList(new double[]{ 0.9429905358928645 }));
        batch.addRow(new DataList(new double[]{ 0.9408807689542255 }));
        batch.addRow(new DataList(new double[]{ 0.9387338576538742 }));
        batch.addRow(new DataList(new double[]{ 0.9365498867481924 }));
        batch.addRow(new DataList(new double[]{ 0.9343289424566121 }));
        batch.addRow(new DataList(new double[]{ 0.932071112458211 }));
        batch.addRow(new DataList(new double[]{ 0.9297764858882515 }));
        batch.addRow(new DataList(new double[]{ 0.9274451533346614 }));
        batch.addRow(new DataList(new double[]{ 0.925077206834458 }));
        batch.addRow(new DataList(new double[]{ 0.9226727398701149 }));
        batch.addRow(new DataList(new double[]{ 0.9202318473658704 }));
        batch.addRow(new DataList(new double[]{ 0.9177546256839813 }));
        batch.addRow(new DataList(new double[]{ 0.9152411726209176 }));
        batch.addRow(new DataList(new double[]{ 0.9126915874035029 }));
        batch.addRow(new DataList(new double[]{ 0.9101059706849957 }));
        batch.addRow(new DataList(new double[]{ 0.9074844245411169 }));
        batch.addRow(new DataList(new double[]{ 0.9048270524660195 }));
        batch.addRow(new DataList(new double[]{ 0.9021339593682027 }));
        batch.addRow(new DataList(new double[]{ 0.8994052515663712 }));
        batch.addRow(new DataList(new double[]{ 0.896641036785236 }));
        batch.addRow(new DataList(new double[]{ 0.8938414241512639 }));
        batch.addRow(new DataList(new double[]{ 0.8910065241883679 }));
        batch.addRow(new DataList(new double[]{ 0.8881364488135446 }));
        batch.addRow(new DataList(new double[]{ 0.8852313113324553 }));
        batch.addRow(new DataList(new double[]{ 0.8822912264349533 }));
        batch.addRow(new DataList(new double[]{ 0.8793163101905562 }));
        batch.addRow(new DataList(new double[]{ 0.8763066800438635 }));
        batch.addRow(new DataList(new double[]{ 0.87326245480992 }));
        batch.addRow(new DataList(new double[]{ 0.8701837546695257 }));
        batch.addRow(new DataList(new double[]{ 0.8670707011644901 }));
        batch.addRow(new DataList(new double[]{ 0.8639234171928354 }));
        batch.addRow(new DataList(new double[]{ 0.8607420270039436 }));
        batch.addRow(new DataList(new double[]{ 0.8575266561936522 }));
        batch.addRow(new DataList(new double[]{ 0.8542774316992952 }));
        batch.addRow(new DataList(new double[]{ 0.8509944817946917 }));
        batch.addRow(new DataList(new double[]{ 0.8476779360850831 }));
        batch.addRow(new DataList(new double[]{ 0.844327925502015 }));
        batch.addRow(new DataList(new double[]{ 0.8409445822981692 }));
        batch.addRow(new DataList(new double[]{ 0.8375280400421418 }));
        batch.addRow(new DataList(new double[]{ 0.8340784336131711 }));
        batch.addRow(new DataList(new double[]{ 0.8305958991958129 }));
        batch.addRow(new DataList(new double[]{ 0.827080574274562 }));
        batch.addRow(new DataList(new double[]{ 0.8235325976284276 }));
        batch.addRow(new DataList(new double[]{ 0.8199521093254525 }));
        batch.addRow(new DataList(new double[]{ 0.816339250717184 }));
        batch.addRow(new DataList(new double[]{ 0.8126941644330941 }));
        batch.addRow(new DataList(new double[]{ 0.8090169943749475 }));
        batch.addRow(new DataList(new double[]{ 0.805307885711122 }));
        batch.addRow(new DataList(new double[]{ 0.8015669848708769 }));
        batch.addRow(new DataList(new double[]{ 0.7977944395385712 }));
        batch.addRow(new DataList(new double[]{ 0.7939903986478355 }));
        batch.addRow(new DataList(new double[]{ 0.7901550123756905 }));
        batch.addRow(new DataList(new double[]{ 0.786288432136619 }));
        batch.addRow(new DataList(new double[]{ 0.7823908105765882 }));
        batch.addRow(new DataList(new double[]{ 0.7784623015670235 }));
        batch.addRow(new DataList(new double[]{ 0.7745030601987338 }));
        batch.addRow(new DataList(new double[]{ 0.7705132427757893 }));
        batch.addRow(new DataList(new double[]{ 0.7664930068093498 }));
        batch.addRow(new DataList(new double[]{ 0.7624425110114481 }));
        batch.addRow(new DataList(new double[]{ 0.758361915288722 }));
        batch.addRow(new DataList(new double[]{ 0.754251380736104 }));
        batch.addRow(new DataList(new double[]{ 0.7501110696304596 }));
        batch.addRow(new DataList(new double[]{ 0.7459411454241822 }));
        batch.addRow(new DataList(new double[]{ 0.7417417727387393 }));
        batch.addRow(new DataList(new double[]{ 0.7375131173581739 }));
        batch.addRow(new DataList(new double[]{ 0.73325534622256 }));
        batch.addRow(new DataList(new double[]{ 0.7289686274214114 }));
        batch.addRow(new DataList(new double[]{ 0.7246531301870468 }));
        batch.addRow(new DataList(new double[]{ 0.720309024887907 }));
        batch.addRow(new DataList(new double[]{ 0.7159364830218313 }));
        batch.addRow(new DataList(new double[]{ 0.7115356772092855 }));
        batch.addRow(new DataList(new double[]{ 0.7071067811865476 }));
        batch.addRow(new DataList(new double[]{ 0.7026499697988492 }));
        batch.addRow(new DataList(new double[]{ 0.6981654189934726 }));
        batch.addRow(new DataList(new double[]{ 0.6936533058128049 }));
        batch.addRow(new DataList(new double[]{ 0.6891138083873484 }));
        batch.addRow(new DataList(new double[]{ 0.6845471059286888 }));
        batch.addRow(new DataList(new double[]{ 0.6799533787224193 }));
        batch.addRow(new DataList(new double[]{ 0.6753328081210246 }));
        batch.addRow(new DataList(new double[]{ 0.6706855765367201 }));
        batch.addRow(new DataList(new double[]{ 0.6660118674342517 }));
        batch.addRow(new DataList(new double[]{ 0.6613118653236518 }));
        batch.addRow(new DataList(new double[]{ 0.6565857557529564 }));
        batch.addRow(new DataList(new double[]{ 0.6518337253008787 }));
        batch.addRow(new DataList(new double[]{ 0.6470559615694442 }));
        batch.addRow(new DataList(new double[]{ 0.6422526531765845 }));
        batch.addRow(new DataList(new double[]{ 0.6374239897486899 }));
        batch.addRow(new DataList(new double[]{ 0.6325701619131245 }));
        batch.addRow(new DataList(new double[]{ 0.6276913612907006 }));
        batch.addRow(new DataList(new double[]{ 0.6227877804881126 }));
        batch.addRow(new DataList(new double[]{ 0.6178596130903343 }));
        batch.addRow(new DataList(new double[]{ 0.6129070536529764 }));
        batch.addRow(new DataList(new double[]{ 0.6079302976946053 }));
        batch.addRow(new DataList(new double[]{ 0.6029295416890246 }));
        batch.addRow(new DataList(new double[]{ 0.5979049830575187 }));
        batch.addRow(new DataList(new double[]{ 0.5928568201610593 }));
        batch.addRow(new DataList(new double[]{ 0.5877852522924732 }));
        batch.addRow(new DataList(new double[]{ 0.5826904796685761 }));
        batch.addRow(new DataList(new double[]{ 0.5775727034222676 }));
        batch.addRow(new DataList(new double[]{ 0.5724321255945908 }));
        batch.addRow(new DataList(new double[]{ 0.5672689491267564 }));
        batch.addRow(new DataList(new double[]{ 0.5620833778521305 }));
        batch.addRow(new DataList(new double[]{ 0.5568756164881878 }));
        batch.addRow(new DataList(new double[]{ 0.5516458706284304 }));
        batch.addRow(new DataList(new double[]{ 0.5463943467342692 }));
        batch.addRow(new DataList(new double[]{ 0.5411212521268759 }));
        batch.addRow(new DataList(new double[]{ 0.535826794978997 }));
        batch.addRow(new DataList(new double[]{ 0.5305111843067344 }));
        batch.addRow(new DataList(new double[]{ 0.525174629961296 }));
        batch.addRow(new DataList(new double[]{ 0.5198173426207098 }));
        batch.addRow(new DataList(new double[]{ 0.5144395337815066 }));
        batch.addRow(new DataList(new double[]{ 0.5090414157503714 }));
        batch.addRow(new DataList(new double[]{ 0.5036232016357609 }));
        batch.addRow(new DataList(new double[]{ 0.4981851053394909 }));
        batch.addRow(new DataList(new double[]{ 0.49272734154829156 }));
        batch.addRow(new DataList(new double[]{ 0.48725012572533266 }));
        batch.addRow(new DataList(new double[]{ 0.4817536741017156 }));
        batch.addRow(new DataList(new double[]{ 0.4762382036679394 }));
        batch.addRow(new DataList(new double[]{ 0.4707039321653328 }));
        batch.addRow(new DataList(new double[]{ 0.46515107807745854 }));
        batch.addRow(new DataList(new double[]{ 0.459579860621488 }));
        batch.addRow(new DataList(new double[]{ 0.45399049973954686 }));
        batch.addRow(new DataList(new double[]{ 0.4483832160900323 }));
        batch.addRow(new DataList(new double[]{ 0.44275823103890155 }));
        batch.addRow(new DataList(new double[]{ 0.4371157666509329 }));
        batch.addRow(new DataList(new double[]{ 0.4314560456809593 }));
        batch.addRow(new DataList(new double[]{ 0.4257792915650729 }));
        batch.addRow(new DataList(new double[]{ 0.42008572841180647 }));
        batch.addRow(new DataList(new double[]{ 0.4143755809932843 }));
        batch.addRow(new DataList(new double[]{ 0.40864907473634915 }));
        batch.addRow(new DataList(new double[]{ 0.40290643571366275 }));
        batch.addRow(new DataList(new double[]{ 0.3971478906347806 }));
        batch.addRow(new DataList(new double[]{ 0.39137366683720237 }));
        batch.addRow(new DataList(new double[]{ 0.3855839922773965 }));
        batch.addRow(new DataList(new double[]{ 0.3797790955218014 }));
        batch.addRow(new DataList(new double[]{ 0.37395920573780067 }));
        batch.addRow(new DataList(new double[]{ 0.36812455268467814 }));
        batch.addRow(new DataList(new double[]{ 0.3622753667045458 }));
        batch.addRow(new DataList(new double[]{ 0.3564118787132508 }));
        batch.addRow(new DataList(new double[]{ 0.350534320191259 }));
        batch.addRow(new DataList(new double[]{ 0.34464292317451706 }));
        batch.addRow(new DataList(new double[]{ 0.3387379202452913 }));
        batch.addRow(new DataList(new double[]{ 0.3328195445229865 }));
        batch.addRow(new DataList(new double[]{ 0.32688802965494274 }));
        batch.addRow(new DataList(new double[]{ 0.3209436098072097 }));
        batch.addRow(new DataList(new double[]{ 0.31498651965530494 }));
        batch.addRow(new DataList(new double[]{ 0.3090169943749475 }));
        batch.addRow(new DataList(new double[]{ 0.30303526963277405 }));
        batch.addRow(new DataList(new double[]{ 0.2970415815770349 }));
        batch.addRow(new DataList(new double[]{ 0.29103616682827177 }));
        batch.addRow(new DataList(new double[]{ 0.28501926246997605 }));
        batch.addRow(new DataList(new double[]{ 0.2789911060392291 }));
        batch.addRow(new DataList(new double[]{ 0.27295193551732505 }));
        batch.addRow(new DataList(new double[]{ 0.26690198932037573 }));
        batch.addRow(new DataList(new double[]{ 0.26084150628989705 }));
        batch.addRow(new DataList(new double[]{ 0.25477072568338227 }));
        batch.addRow(new DataList(new double[]{ 0.24868988716485482 }));
        batch.addRow(new DataList(new double[]{ 0.2425992307954074 }));
        batch.addRow(new DataList(new double[]{ 0.2364989970237246 }));
        batch.addRow(new DataList(new double[]{ 0.23038942667659046 }));
        batch.addRow(new DataList(new double[]{ 0.224270760949381 }));
        batch.addRow(new DataList(new double[]{ 0.21814324139654231 }));
        batch.addRow(new DataList(new double[]{ 0.2120071099220548 }));
        batch.addRow(new DataList(new double[]{ 0.2058626087698814 }));
        batch.addRow(new DataList(new double[]{ 0.19970998051440705 }));
        batch.addRow(new DataList(new double[]{ 0.19354946805086068 }));
        batch.addRow(new DataList(new double[]{ 0.18738131458572502 }));
        batch.addRow(new DataList(new double[]{ 0.18120576362713767 }));
        batch.addRow(new DataList(new double[]{ 0.1750230589752763 }));
        batch.addRow(new DataList(new double[]{ 0.1688334447127341 }));
        batch.addRow(new DataList(new double[]{ 0.16263716519488378 }));
        batch.addRow(new DataList(new double[]{ 0.15643446504023098 }));
        batch.addRow(new DataList(new double[]{ 0.15022558912075712 }));
        batch.addRow(new DataList(new double[]{ 0.1440107825522526 }));
        batch.addRow(new DataList(new double[]{ 0.13779029068463847 }));
        batch.addRow(new DataList(new double[]{ 0.13156435909228284 }));
        batch.addRow(new DataList(new double[]{ 0.12533323356430454 }));
        batch.addRow(new DataList(new double[]{ 0.11909716009486998 }));
        batch.addRow(new DataList(new double[]{ 0.11285638487348187 }));
        batch.addRow(new DataList(new double[]{ 0.10661115427526005 }));
        batch.addRow(new DataList(new double[]{ 0.10036171485121498 }));
        batch.addRow(new DataList(new double[]{ 0.09410831331851435 }));
        batch.addRow(new DataList(new double[]{ 0.08785119655074315 }));
        batch.addRow(new DataList(new double[]{ 0.08159061156815792 }));
        batch.addRow(new DataList(new double[]{ 0.07532680552793304 }));
        batch.addRow(new DataList(new double[]{ 0.06906002571440606 }));
        batch.addRow(new DataList(new double[]{ 0.06279051952931358 }));
        batch.addRow(new DataList(new double[]{ 0.05651853448202468 }));
        batch.addRow(new DataList(new double[]{ 0.05024431817976966 }));
        batch.addRow(new DataList(new double[]{ 0.04396811831786495 }));
        batch.addRow(new DataList(new double[]{ 0.037690182669934534 }));
        batch.addRow(new DataList(new double[]{ 0.031410759078128236 }));
        batch.addRow(new DataList(new double[]{ 0.025130095443337813 }));
        batch.addRow(new DataList(new double[]{ 0.01884843971540846 }));
        batch.addRow(new DataList(new double[]{ 0.012566039883352836 }));
        batch.addRow(new DataList(new double[]{ 0.006283143965559127 }));
        batch.addRow(new DataList(new double[]{ 1.2246467991473532e-16 }));
        batch.addRow(new DataList(new double[]{ -0.006283143965558882 }));
        batch.addRow(new DataList(new double[]{ -0.012566039883352592 }));
        batch.addRow(new DataList(new double[]{ -0.018848439715408213 }));
        batch.addRow(new DataList(new double[]{ -0.02513009544333757 }));
        batch.addRow(new DataList(new double[]{ -0.031410759078127994 }));
        batch.addRow(new DataList(new double[]{ -0.03769018266993429 }));
        batch.addRow(new DataList(new double[]{ -0.04396811831786471 }));
        batch.addRow(new DataList(new double[]{ -0.05024431817976942 }));
        batch.addRow(new DataList(new double[]{ -0.056518534482024436 }));
        batch.addRow(new DataList(new double[]{ -0.06279051952931335 }));
        batch.addRow(new DataList(new double[]{ -0.06906002571440581 }));
        batch.addRow(new DataList(new double[]{ -0.07532680552793279 }));
        batch.addRow(new DataList(new double[]{ -0.08159061156815768 }));
        batch.addRow(new DataList(new double[]{ -0.0878511965507429 }));
        batch.addRow(new DataList(new double[]{ -0.0941083133185141 }));
        batch.addRow(new DataList(new double[]{ -0.10036171485121473 }));
        batch.addRow(new DataList(new double[]{ -0.1066111542752598 }));
        batch.addRow(new DataList(new double[]{ -0.11285638487348164 }));
        batch.addRow(new DataList(new double[]{ -0.11909716009486973 }));
        batch.addRow(new DataList(new double[]{ -0.12533323356430429 }));
        batch.addRow(new DataList(new double[]{ -0.13156435909228262 }));
        batch.addRow(new DataList(new double[]{ -0.13779029068463822 }));
        batch.addRow(new DataList(new double[]{ -0.14401078255225236 }));
        batch.addRow(new DataList(new double[]{ -0.15022558912075687 }));
        batch.addRow(new DataList(new double[]{ -0.15643446504023073 }));
        batch.addRow(new DataList(new double[]{ -0.16263716519488353 }));
        batch.addRow(new DataList(new double[]{ -0.16883344471273384 }));
        batch.addRow(new DataList(new double[]{ -0.1750230589752761 }));
        batch.addRow(new DataList(new double[]{ -0.18120576362713745 }));
        batch.addRow(new DataList(new double[]{ -0.18738131458572477 }));
        batch.addRow(new DataList(new double[]{ -0.19354946805086046 }));
        batch.addRow(new DataList(new double[]{ -0.19970998051440725 }));
        batch.addRow(new DataList(new double[]{ -0.2058626087698812 }));
        batch.addRow(new DataList(new double[]{ -0.21200710992205454 }));
        batch.addRow(new DataList(new double[]{ -0.2181432413965425 }));
        batch.addRow(new DataList(new double[]{ -0.2242707609493812 }));
        batch.addRow(new DataList(new double[]{ -0.23038942667659065 }));
        batch.addRow(new DataList(new double[]{ -0.2364989970237248 }));
        batch.addRow(new DataList(new double[]{ -0.2425992307954076 }));
        batch.addRow(new DataList(new double[]{ -0.24868988716485502 }));
        batch.addRow(new DataList(new double[]{ -0.25477072568338244 }));
        batch.addRow(new DataList(new double[]{ -0.26084150628989683 }));
        batch.addRow(new DataList(new double[]{ -0.2669019893203755 }));
        batch.addRow(new DataList(new double[]{ -0.2729519355173252 }));
        batch.addRow(new DataList(new double[]{ -0.2789911060392293 }));
        batch.addRow(new DataList(new double[]{ -0.2850192624699762 }));
        batch.addRow(new DataList(new double[]{ -0.291036166828272 }));
        batch.addRow(new DataList(new double[]{ -0.2970415815770351 }));
        batch.addRow(new DataList(new double[]{ -0.3030352696327742 }));
        batch.addRow(new DataList(new double[]{ -0.30901699437494773 }));
        batch.addRow(new DataList(new double[]{ -0.31498651965530516 }));
        batch.addRow(new DataList(new double[]{ -0.3209436098072095 }));
        batch.addRow(new DataList(new double[]{ -0.3268880296549425 }));
        batch.addRow(new DataList(new double[]{ -0.33281954452298673 }));
        batch.addRow(new DataList(new double[]{ -0.3387379202452915 }));
        batch.addRow(new DataList(new double[]{ -0.3446429231745172 }));
        batch.addRow(new DataList(new double[]{ -0.35053432019125924 }));
        batch.addRow(new DataList(new double[]{ -0.356411878713251 }));
        batch.addRow(new DataList(new double[]{ -0.362275366704546 }));
        batch.addRow(new DataList(new double[]{ -0.3681245526846783 }));
        batch.addRow(new DataList(new double[]{ -0.37395920573780045 }));
        batch.addRow(new DataList(new double[]{ -0.37977909552180117 }));
        batch.addRow(new DataList(new double[]{ -0.38558399227739626 }));
        batch.addRow(new DataList(new double[]{ -0.39137366683720215 }));
        batch.addRow(new DataList(new double[]{ -0.39714789063478 }));
        batch.addRow(new DataList(new double[]{ -0.4029064357136621 }));
        batch.addRow(new DataList(new double[]{ -0.40864907473634854 }));
        batch.addRow(new DataList(new double[]{ -0.41437558099328364 }));
        batch.addRow(new DataList(new double[]{ -0.42008572841180586 }));
        batch.addRow(new DataList(new double[]{ -0.42577929156507227 }));
        batch.addRow(new DataList(new double[]{ -0.43145604568095863 }));
        batch.addRow(new DataList(new double[]{ -0.43711576665093266 }));
        batch.addRow(new DataList(new double[]{ -0.44275823103890133 }));
        batch.addRow(new DataList(new double[]{ -0.4483832160900317 }));
        batch.addRow(new DataList(new double[]{ -0.45399049973954625 }));
        batch.addRow(new DataList(new double[]{ -0.45957986062148737 }));
        batch.addRow(new DataList(new double[]{ -0.4651510780774579 }));
        batch.addRow(new DataList(new double[]{ -0.4707039321653322 }));
        batch.addRow(new DataList(new double[]{ -0.4762382036679388 }));
        batch.addRow(new DataList(new double[]{ -0.481753674101715 }));
        batch.addRow(new DataList(new double[]{ -0.4872501257253321 }));
        batch.addRow(new DataList(new double[]{ -0.4927273415482914 }));
        batch.addRow(new DataList(new double[]{ -0.4981851053394907 }));
        batch.addRow(new DataList(new double[]{ -0.5036232016357604 }));
        batch.addRow(new DataList(new double[]{ -0.5090414157503709 }));
        batch.addRow(new DataList(new double[]{ -0.5144395337815061 }));
        batch.addRow(new DataList(new double[]{ -0.5198173426207091 }));
        batch.addRow(new DataList(new double[]{ -0.5251746299612954 }));
        batch.addRow(new DataList(new double[]{ -0.5305111843067338 }));
        batch.addRow(new DataList(new double[]{ -0.5358267949789964 }));
        batch.addRow(new DataList(new double[]{ -0.5411212521268757 }));
        batch.addRow(new DataList(new double[]{ -0.546394346734269 }));
        batch.addRow(new DataList(new double[]{ -0.5516458706284298 }));
        batch.addRow(new DataList(new double[]{ -0.5568756164881876 }));
        batch.addRow(new DataList(new double[]{ -0.5620833778521303 }));
        batch.addRow(new DataList(new double[]{ -0.5672689491267562 }));
        batch.addRow(new DataList(new double[]{ -0.5724321255945907 }));
        batch.addRow(new DataList(new double[]{ -0.5775727034222674 }));
        batch.addRow(new DataList(new double[]{ -0.5826904796685759 }));
        batch.addRow(new DataList(new double[]{ -0.587785252292473 }));
        batch.addRow(new DataList(new double[]{ -0.5928568201610591 }));
        batch.addRow(new DataList(new double[]{ -0.5979049830575185 }));
        batch.addRow(new DataList(new double[]{ -0.6029295416890244 }));
        batch.addRow(new DataList(new double[]{ -0.607930297694605 }));
        batch.addRow(new DataList(new double[]{ -0.6129070536529763 }));
        batch.addRow(new DataList(new double[]{ -0.6178596130903341 }));
        batch.addRow(new DataList(new double[]{ -0.6227877804881123 }));
        batch.addRow(new DataList(new double[]{ -0.6276913612907004 }));
        batch.addRow(new DataList(new double[]{ -0.6325701619131244 }));
        batch.addRow(new DataList(new double[]{ -0.6374239897486896 }));
        batch.addRow(new DataList(new double[]{ -0.6422526531765844 }));
        batch.addRow(new DataList(new double[]{ -0.647055961569444 }));
        batch.addRow(new DataList(new double[]{ -0.6518337253008785 }));
        batch.addRow(new DataList(new double[]{ -0.6565857557529562 }));
        batch.addRow(new DataList(new double[]{ -0.6613118653236517 }));
        batch.addRow(new DataList(new double[]{ -0.6660118674342514 }));
        batch.addRow(new DataList(new double[]{ -0.6706855765367199 }));
        batch.addRow(new DataList(new double[]{ -0.6753328081210244 }));
        batch.addRow(new DataList(new double[]{ -0.6799533787224191 }));
        batch.addRow(new DataList(new double[]{ -0.6845471059286887 }));
        batch.addRow(new DataList(new double[]{ -0.6891138083873481 }));
        batch.addRow(new DataList(new double[]{ -0.6936533058128047 }));
        batch.addRow(new DataList(new double[]{ -0.6981654189934725 }));
        batch.addRow(new DataList(new double[]{ -0.7026499697988491 }));
        batch.addRow(new DataList(new double[]{ -0.7071067811865475 }));
        batch.addRow(new DataList(new double[]{ -0.7115356772092852 }));
        batch.addRow(new DataList(new double[]{ -0.7159364830218311 }));
        batch.addRow(new DataList(new double[]{ -0.7203090248879069 }));
        batch.addRow(new DataList(new double[]{ -0.7246531301870467 }));
        batch.addRow(new DataList(new double[]{ -0.7289686274214113 }));
        batch.addRow(new DataList(new double[]{ -0.7332553462225598 }));
        batch.addRow(new DataList(new double[]{ -0.7375131173581737 }));
        batch.addRow(new DataList(new double[]{ -0.7417417727387391 }));
        batch.addRow(new DataList(new double[]{ -0.7459411454241821 }));
        batch.addRow(new DataList(new double[]{ -0.7501110696304595 }));
        batch.addRow(new DataList(new double[]{ -0.7542513807361038 }));
        batch.addRow(new DataList(new double[]{ -0.7583619152887215 }));
        batch.addRow(new DataList(new double[]{ -0.7624425110114479 }));
        batch.addRow(new DataList(new double[]{ -0.7664930068093496 }));
        batch.addRow(new DataList(new double[]{ -0.7705132427757894 }));
        batch.addRow(new DataList(new double[]{ -0.7745030601987337 }));
        batch.addRow(new DataList(new double[]{ -0.7784623015670236 }));
        batch.addRow(new DataList(new double[]{ -0.7823908105765881 }));
        batch.addRow(new DataList(new double[]{ -0.7862884321366186 }));
        batch.addRow(new DataList(new double[]{ -0.7901550123756904 }));
        batch.addRow(new DataList(new double[]{ -0.793990398647835 }));
        batch.addRow(new DataList(new double[]{ -0.7977944395385711 }));
        batch.addRow(new DataList(new double[]{ -0.8015669848708764 }));
        batch.addRow(new DataList(new double[]{ -0.8053078857111221 }));
        batch.addRow(new DataList(new double[]{ -0.8090169943749473 }));
        batch.addRow(new DataList(new double[]{ -0.8126941644330942 }));
        batch.addRow(new DataList(new double[]{ -0.8163392507171839 }));
        batch.addRow(new DataList(new double[]{ -0.819952109325452 }));
        batch.addRow(new DataList(new double[]{ -0.8235325976284275 }));
        batch.addRow(new DataList(new double[]{ -0.8270805742745616 }));
        batch.addRow(new DataList(new double[]{ -0.8305958991958127 }));
        batch.addRow(new DataList(new double[]{ -0.834078433613171 }));
        batch.addRow(new DataList(new double[]{ -0.8375280400421419 }));
        batch.addRow(new DataList(new double[]{ -0.840944582298169 }));
        batch.addRow(new DataList(new double[]{ -0.8443279255020153 }));
        batch.addRow(new DataList(new double[]{ -0.8476779360850832 }));
        batch.addRow(new DataList(new double[]{ -0.8509944817946921 }));
        batch.addRow(new DataList(new double[]{ -0.8542774316992952 }));
        batch.addRow(new DataList(new double[]{ -0.8575266561936521 }));
        batch.addRow(new DataList(new double[]{ -0.8607420270039438 }));
        batch.addRow(new DataList(new double[]{ -0.8639234171928352 }));
        batch.addRow(new DataList(new double[]{ -0.8670707011644903 }));
        batch.addRow(new DataList(new double[]{ -0.8701837546695256 }));
        batch.addRow(new DataList(new double[]{ -0.8732624548099204 }));
        batch.addRow(new DataList(new double[]{ -0.8763066800438636 }));
        batch.addRow(new DataList(new double[]{ -0.8793163101905564 }));
        batch.addRow(new DataList(new double[]{ -0.8822912264349534 }));
        batch.addRow(new DataList(new double[]{ -0.8852313113324551 }));
        batch.addRow(new DataList(new double[]{ -0.8881364488135446 }));
        batch.addRow(new DataList(new double[]{ -0.8910065241883678 }));
        batch.addRow(new DataList(new double[]{ -0.8938414241512639 }));
        batch.addRow(new DataList(new double[]{ -0.8966410367852359 }));
        batch.addRow(new DataList(new double[]{ -0.8994052515663712 }));
        batch.addRow(new DataList(new double[]{ -0.9021339593682028 }));
        batch.addRow(new DataList(new double[]{ -0.9048270524660198 }));
        batch.addRow(new DataList(new double[]{ -0.907484424541117 }));
        batch.addRow(new DataList(new double[]{ -0.9101059706849955 }));
        batch.addRow(new DataList(new double[]{ -0.9126915874035029 }));
        batch.addRow(new DataList(new double[]{ -0.9152411726209175 }));
        batch.addRow(new DataList(new double[]{ -0.9177546256839813 }));
        batch.addRow(new DataList(new double[]{ -0.9202318473658704 }));
        batch.addRow(new DataList(new double[]{ -0.922672739870115 }));
        batch.addRow(new DataList(new double[]{ -0.9250772068344577 }));
        batch.addRow(new DataList(new double[]{ -0.9274451533346612 }));
        batch.addRow(new DataList(new double[]{ -0.9297764858882511 }));
        batch.addRow(new DataList(new double[]{ -0.9320711124582108 }));
        batch.addRow(new DataList(new double[]{ -0.9343289424566118 }));
        batch.addRow(new DataList(new double[]{ -0.9365498867481923 }));
        batch.addRow(new DataList(new double[]{ -0.938733857653874 }));
        batch.addRow(new DataList(new double[]{ -0.9408807689542251 }));
        batch.addRow(new DataList(new double[]{ -0.9429905358928643 }));
        batch.addRow(new DataList(new double[]{ -0.9450630751798046 }));
        batch.addRow(new DataList(new double[]{ -0.9470983049947442 }));
        batch.addRow(new DataList(new double[]{ -0.9490961449902944 }));
        batch.addRow(new DataList(new double[]{ -0.9510565162951535 }));
        batch.addRow(new DataList(new double[]{ -0.9529793415172186 }));
        batch.addRow(new DataList(new double[]{ -0.954864544746643 }));
        batch.addRow(new DataList(new double[]{ -0.9567120515588303 }));
        batch.addRow(new DataList(new double[]{ -0.9585217890173756 }));
        batch.addRow(new DataList(new double[]{ -0.960293685676943 }));
        batch.addRow(new DataList(new double[]{ -0.9620276715860857 }));
        batch.addRow(new DataList(new double[]{ -0.9637236782900096 }));
        batch.addRow(new DataList(new double[]{ -0.9653816388332738 }));
        batch.addRow(new DataList(new double[]{ -0.967001487762435 }));
        batch.addRow(new DataList(new double[]{ -0.968583161128631 }));
        batch.addRow(new DataList(new double[]{ -0.9701265964901058 }));
        batch.addRow(new DataList(new double[]{ -0.9716317329146739 }));
        batch.addRow(new DataList(new double[]{ -0.9730985109821264 }));
        batch.addRow(new DataList(new double[]{ -0.9745268727865771 }));
        batch.addRow(new DataList(new double[]{ -0.9759167619387472 }));
        batch.addRow(new DataList(new double[]{ -0.9772681235681934 }));
        batch.addRow(new DataList(new double[]{ -0.978580904325472 }));
        batch.addRow(new DataList(new double[]{ -0.9798550523842469 }));
        batch.addRow(new DataList(new double[]{ -0.981090517443334 }));
        batch.addRow(new DataList(new double[]{ -0.9822872507286887 }));
        batch.addRow(new DataList(new double[]{ -0.9834452049953296 }));
        batch.addRow(new DataList(new double[]{ -0.9845643345292054 }));
        batch.addRow(new DataList(new double[]{ -0.9856445951489979 }));
        batch.addRow(new DataList(new double[]{ -0.9866859442078679 }));
        batch.addRow(new DataList(new double[]{ -0.9876883405951377 }));
        batch.addRow(new DataList(new double[]{ -0.988651744737914 }));
        batch.addRow(new DataList(new double[]{ -0.9895761186026509 }));
        batch.addRow(new DataList(new double[]{ -0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ -0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ -0.9921147013144778 }));
        batch.addRow(new DataList(new double[]{ -0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ -0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ -0.9943007903969988 }));
        batch.addRow(new DataList(new double[]{ -0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ -0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ -0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ -0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ -0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ -0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ -0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ -0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ -0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ -0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ -0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ -0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ -0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ -0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ -0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ -0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ -1.0 }));
        batch.addRow(new DataList(new double[]{ -0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ -0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ -0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ -0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ -0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ -0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ -0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ -0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ -0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ -0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ -0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ -0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ -0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ -0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ -0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ -0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ -0.9943007903969988 }));
        batch.addRow(new DataList(new double[]{ -0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ -0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ -0.9921147013144779 }));
        batch.addRow(new DataList(new double[]{ -0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ -0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ -0.989576118602651 }));
        batch.addRow(new DataList(new double[]{ -0.988651744737914 }));
        batch.addRow(new DataList(new double[]{ -0.9876883405951378 }));
        batch.addRow(new DataList(new double[]{ -0.986685944207868 }));
        batch.addRow(new DataList(new double[]{ -0.985644595148998 }));
        batch.addRow(new DataList(new double[]{ -0.9845643345292054 }));
        batch.addRow(new DataList(new double[]{ -0.9834452049953297 }));
        batch.addRow(new DataList(new double[]{ -0.9822872507286887 }));
        batch.addRow(new DataList(new double[]{ -0.9810905174433341 }));
        batch.addRow(new DataList(new double[]{ -0.979855052384247 }));
        batch.addRow(new DataList(new double[]{ -0.9785809043254721 }));
        batch.addRow(new DataList(new double[]{ -0.9772681235681935 }));
        batch.addRow(new DataList(new double[]{ -0.9759167619387473 }));
        batch.addRow(new DataList(new double[]{ -0.9745268727865771 }));
        batch.addRow(new DataList(new double[]{ -0.9730985109821264 }));
        batch.addRow(new DataList(new double[]{ -0.971631732914674 }));
        batch.addRow(new DataList(new double[]{ -0.9701265964901059 }));
        batch.addRow(new DataList(new double[]{ -0.9685831611286311 }));
        batch.addRow(new DataList(new double[]{ -0.9670014877624351 }));
        batch.addRow(new DataList(new double[]{ -0.9653816388332738 }));
        batch.addRow(new DataList(new double[]{ -0.9637236782900097 }));
        batch.addRow(new DataList(new double[]{ -0.9620276715860858 }));
        batch.addRow(new DataList(new double[]{ -0.9602936856769431 }));
        batch.addRow(new DataList(new double[]{ -0.9585217890173757 }));
        batch.addRow(new DataList(new double[]{ -0.9567120515588304 }));
        batch.addRow(new DataList(new double[]{ -0.9548645447466431 }));
        batch.addRow(new DataList(new double[]{ -0.9529793415172187 }));
        batch.addRow(new DataList(new double[]{ -0.9510565162951536 }));
        batch.addRow(new DataList(new double[]{ -0.9490961449902945 }));
        batch.addRow(new DataList(new double[]{ -0.9470983049947443 }));
        batch.addRow(new DataList(new double[]{ -0.9450630751798047 }));
        batch.addRow(new DataList(new double[]{ -0.9429905358928644 }));
        batch.addRow(new DataList(new double[]{ -0.9408807689542253 }));
        batch.addRow(new DataList(new double[]{ -0.9387338576538741 }));
        batch.addRow(new DataList(new double[]{ -0.9365498867481924 }));
        batch.addRow(new DataList(new double[]{ -0.9343289424566119 }));
        batch.addRow(new DataList(new double[]{ -0.9320711124582111 }));
        batch.addRow(new DataList(new double[]{ -0.9297764858882512 }));
        batch.addRow(new DataList(new double[]{ -0.9274451533346614 }));
        batch.addRow(new DataList(new double[]{ -0.9250772068344579 }));
        batch.addRow(new DataList(new double[]{ -0.9226727398701151 }));
        batch.addRow(new DataList(new double[]{ -0.9202318473658705 }));
        batch.addRow(new DataList(new double[]{ -0.9177546256839815 }));
        batch.addRow(new DataList(new double[]{ -0.9152411726209176 }));
        batch.addRow(new DataList(new double[]{ -0.9126915874035031 }));
        batch.addRow(new DataList(new double[]{ -0.9101059706849958 }));
        batch.addRow(new DataList(new double[]{ -0.9074844245411171 }));
        batch.addRow(new DataList(new double[]{ -0.9048270524660199 }));
        batch.addRow(new DataList(new double[]{ -0.9021339593682031 }));
        batch.addRow(new DataList(new double[]{ -0.8994052515663714 }));
        batch.addRow(new DataList(new double[]{ -0.896641036785236 }));
        batch.addRow(new DataList(new double[]{ -0.8938414241512641 }));
        batch.addRow(new DataList(new double[]{ -0.891006524188368 }));
        batch.addRow(new DataList(new double[]{ -0.8881364488135448 }));
        batch.addRow(new DataList(new double[]{ -0.8852313113324553 }));
        batch.addRow(new DataList(new double[]{ -0.8822912264349535 }));
        batch.addRow(new DataList(new double[]{ -0.8793163101905567 }));
        batch.addRow(new DataList(new double[]{ -0.8763066800438638 }));
        batch.addRow(new DataList(new double[]{ -0.8732624548099205 }));
        batch.addRow(new DataList(new double[]{ -0.8701837546695258 }));
        batch.addRow(new DataList(new double[]{ -0.8670707011644904 }));
        batch.addRow(new DataList(new double[]{ -0.8639234171928354 }));
        batch.addRow(new DataList(new double[]{ -0.8607420270039439 }));
        batch.addRow(new DataList(new double[]{ -0.8575266561936523 }));
        batch.addRow(new DataList(new double[]{ -0.8542774316992954 }));
        batch.addRow(new DataList(new double[]{ -0.8509944817946923 }));
        batch.addRow(new DataList(new double[]{ -0.8476779360850835 }));
        batch.addRow(new DataList(new double[]{ -0.8443279255020155 }));
        batch.addRow(new DataList(new double[]{ -0.8409445822981693 }));
        batch.addRow(new DataList(new double[]{ -0.8375280400421421 }));
        batch.addRow(new DataList(new double[]{ -0.8340784336131712 }));
        batch.addRow(new DataList(new double[]{ -0.8305958991958129 }));
        batch.addRow(new DataList(new double[]{ -0.8270805742745618 }));
        batch.addRow(new DataList(new double[]{ -0.8235325976284277 }));
        batch.addRow(new DataList(new double[]{ -0.8199521093254523 }));
        batch.addRow(new DataList(new double[]{ -0.8163392507171842 }));
        batch.addRow(new DataList(new double[]{ -0.8126941644330944 }));
        batch.addRow(new DataList(new double[]{ -0.8090169943749476 }));
        batch.addRow(new DataList(new double[]{ -0.8053078857111223 }));
        batch.addRow(new DataList(new double[]{ -0.8015669848708766 }));
        batch.addRow(new DataList(new double[]{ -0.7977944395385713 }));
        batch.addRow(new DataList(new double[]{ -0.7939903986478354 }));
        batch.addRow(new DataList(new double[]{ -0.7901550123756906 }));
        batch.addRow(new DataList(new double[]{ -0.7862884321366188 }));
        batch.addRow(new DataList(new double[]{ -0.7823908105765883 }));
        batch.addRow(new DataList(new double[]{ -0.7784623015670239 }));
        batch.addRow(new DataList(new double[]{ -0.7745030601987339 }));
        batch.addRow(new DataList(new double[]{ -0.7705132427757896 }));
        batch.addRow(new DataList(new double[]{ -0.7664930068093498 }));
        batch.addRow(new DataList(new double[]{ -0.7624425110114482 }));
        batch.addRow(new DataList(new double[]{ -0.7583619152887218 }));
        batch.addRow(new DataList(new double[]{ -0.754251380736104 }));
        batch.addRow(new DataList(new double[]{ -0.7501110696304595 }));
        batch.addRow(new DataList(new double[]{ -0.7459411454241823 }));
        batch.addRow(new DataList(new double[]{ -0.7417417727387396 }));
        batch.addRow(new DataList(new double[]{ -0.737513117358174 }));
        batch.addRow(new DataList(new double[]{ -0.7332553462225604 }));
        batch.addRow(new DataList(new double[]{ -0.7289686274214116 }));
        batch.addRow(new DataList(new double[]{ -0.7246531301870469 }));
        batch.addRow(new DataList(new double[]{ -0.7203090248879068 }));
        batch.addRow(new DataList(new double[]{ -0.7159364830218313 }));
        batch.addRow(new DataList(new double[]{ -0.7115356772092852 }));
        batch.addRow(new DataList(new double[]{ -0.7071067811865477 }));
        batch.addRow(new DataList(new double[]{ -0.7026499697988496 }));
        batch.addRow(new DataList(new double[]{ -0.6981654189934727 }));
        batch.addRow(new DataList(new double[]{ -0.6936533058128054 }));
        batch.addRow(new DataList(new double[]{ -0.6891138083873485 }));
        batch.addRow(new DataList(new double[]{ -0.684547105928689 }));
        batch.addRow(new DataList(new double[]{ -0.6799533787224191 }));
        batch.addRow(new DataList(new double[]{ -0.6753328081210246 }));
        batch.addRow(new DataList(new double[]{ -0.6706855765367199 }));
        batch.addRow(new DataList(new double[]{ -0.6660118674342518 }));
        batch.addRow(new DataList(new double[]{ -0.6613118653236523 }));
        batch.addRow(new DataList(new double[]{ -0.6565857557529565 }));
        batch.addRow(new DataList(new double[]{ -0.6518337253008791 }));
        batch.addRow(new DataList(new double[]{ -0.6470559615694443 }));
        batch.addRow(new DataList(new double[]{ -0.6422526531765846 }));
        batch.addRow(new DataList(new double[]{ -0.6374239897486896 }));
        batch.addRow(new DataList(new double[]{ -0.6325701619131247 }));
        batch.addRow(new DataList(new double[]{ -0.6276913612907002 }));
        batch.addRow(new DataList(new double[]{ -0.6227877804881126 }));
        batch.addRow(new DataList(new double[]{ -0.6178596130903348 }));
        batch.addRow(new DataList(new double[]{ -0.6129070536529765 }));
        batch.addRow(new DataList(new double[]{ -0.6079302976946057 }));
        batch.addRow(new DataList(new double[]{ -0.6029295416890247 }));
        batch.addRow(new DataList(new double[]{ -0.5979049830575192 }));
        batch.addRow(new DataList(new double[]{ -0.5928568201610591 }));
        batch.addRow(new DataList(new double[]{ -0.5877852522924734 }));
        batch.addRow(new DataList(new double[]{ -0.5826904796685758 }));
        batch.addRow(new DataList(new double[]{ -0.5775727034222677 }));
        batch.addRow(new DataList(new double[]{ -0.5724321255945913 }));
        batch.addRow(new DataList(new double[]{ -0.5672689491267565 }));
        batch.addRow(new DataList(new double[]{ -0.5620833778521309 }));
        batch.addRow(new DataList(new double[]{ -0.556875616488188 }));
        batch.addRow(new DataList(new double[]{ -0.5516458706284305 }));
        batch.addRow(new DataList(new double[]{ -0.5463943467342689 }));
        batch.addRow(new DataList(new double[]{ -0.541121252126876 }));
        batch.addRow(new DataList(new double[]{ -0.5358267949789963 }));
        batch.addRow(new DataList(new double[]{ -0.5305111843067342 }));
        batch.addRow(new DataList(new double[]{ -0.5251746299612954 }));
        batch.addRow(new DataList(new double[]{ -0.5198173426207094 }));
        batch.addRow(new DataList(new double[]{ -0.5144395337815068 }));
        batch.addRow(new DataList(new double[]{ -0.5090414157503712 }));
        batch.addRow(new DataList(new double[]{ -0.503623201635761 }));
        batch.addRow(new DataList(new double[]{ -0.4981851053394906 }));
        batch.addRow(new DataList(new double[]{ -0.4927273415482917 }));
        batch.addRow(new DataList(new double[]{ -0.487250125725332 }));
        batch.addRow(new DataList(new double[]{ -0.4817536741017153 }));
        batch.addRow(new DataList(new double[]{ -0.47623820366793873 }));
        batch.addRow(new DataList(new double[]{ -0.4707039321653325 }));
        batch.addRow(new DataList(new double[]{ -0.46515107807745865 }));
        batch.addRow(new DataList(new double[]{ -0.4595798606214877 }));
        batch.addRow(new DataList(new double[]{ -0.45399049973954697 }));
        batch.addRow(new DataList(new double[]{ -0.448383216090032 }));
        batch.addRow(new DataList(new double[]{ -0.44275823103890166 }));
        batch.addRow(new DataList(new double[]{ -0.43711576665093255 }));
        batch.addRow(new DataList(new double[]{ -0.43145604568095897 }));
        batch.addRow(new DataList(new double[]{ -0.4257792915650722 }));
        batch.addRow(new DataList(new double[]{ -0.4200857284118062 }));
        batch.addRow(new DataList(new double[]{ -0.4143755809932844 }));
        batch.addRow(new DataList(new double[]{ -0.40864907473634887 }));
        batch.addRow(new DataList(new double[]{ -0.40290643571366286 }));
        batch.addRow(new DataList(new double[]{ -0.39714789063478034 }));
        batch.addRow(new DataList(new double[]{ -0.3913736668372025 }));
        batch.addRow(new DataList(new double[]{ -0.38558399227739615 }));
        batch.addRow(new DataList(new double[]{ -0.3797790955218019 }));
        batch.addRow(new DataList(new double[]{ -0.3739592057378008 }));
        batch.addRow(new DataList(new double[]{ -0.3681245526846787 }));
        batch.addRow(new DataList(new double[]{ -0.3622753667045459 }));
        batch.addRow(new DataList(new double[]{ -0.3564118787132513 }));
        batch.addRow(new DataList(new double[]{ -0.3505343201912592 }));
        batch.addRow(new DataList(new double[]{ -0.34464292317451756 }));
        batch.addRow(new DataList(new double[]{ -0.33873792024529226 }));
        batch.addRow(new DataList(new double[]{ -0.33281954452298707 }));
        batch.addRow(new DataList(new double[]{ -0.3268880296549433 }));
        batch.addRow(new DataList(new double[]{ -0.3209436098072098 }));
        batch.addRow(new DataList(new double[]{ -0.3149865196553055 }));
        batch.addRow(new DataList(new double[]{ -0.3090169943749477 }));
        batch.addRow(new DataList(new double[]{ -0.30303526963277455 }));
        batch.addRow(new DataList(new double[]{ -0.29704158157703503 }));
        batch.addRow(new DataList(new double[]{ -0.2910361668282723 }));
        batch.addRow(new DataList(new double[]{ -0.285019262469977 }));
        batch.addRow(new DataList(new double[]{ -0.27899110603922966 }));
        batch.addRow(new DataList(new double[]{ -0.272951935517326 }));
        batch.addRow(new DataList(new double[]{ -0.26690198932037584 }));
        batch.addRow(new DataList(new double[]{ -0.2608415062898976 }));
        batch.addRow(new DataList(new double[]{ -0.2547707256833824 }));
        batch.addRow(new DataList(new double[]{ -0.24868988716485535 }));
        batch.addRow(new DataList(new double[]{ -0.24259923079540752 }));
        batch.addRow(new DataList(new double[]{ -0.23649899702372515 }));
        batch.addRow(new DataList(new double[]{ -0.23038942667659143 }));
        batch.addRow(new DataList(new double[]{ -0.22427076094938156 }));
        batch.addRow(new DataList(new double[]{ -0.2181432413965433 }));
        batch.addRow(new DataList(new double[]{ -0.2120071099220549 }));
        batch.addRow(new DataList(new double[]{ -0.20586260876988197 }));
        batch.addRow(new DataList(new double[]{ -0.1997099805144072 }));
        batch.addRow(new DataList(new double[]{ -0.19354946805086082 }));
        batch.addRow(new DataList(new double[]{ -0.18738131458572468 }));
        batch.addRow(new DataList(new double[]{ -0.1812057636271378 }));
        batch.addRow(new DataList(new double[]{ -0.175023058975276 }));
        batch.addRow(new DataList(new double[]{ -0.1688334447127342 }));
        batch.addRow(new DataList(new double[]{ -0.16263716519488433 }));
        batch.addRow(new DataList(new double[]{ -0.1564344650402311 }));
        batch.addRow(new DataList(new double[]{ -0.15022558912075767 }));
        batch.addRow(new DataList(new double[]{ -0.1440107825522523 }));
        batch.addRow(new DataList(new double[]{ -0.13779029068463858 }));
        batch.addRow(new DataList(new double[]{ -0.13156435909228253 }));
        batch.addRow(new DataList(new double[]{ -0.12533323356430465 }));
        batch.addRow(new DataList(new double[]{ -0.11909716009486966 }));
        batch.addRow(new DataList(new double[]{ -0.112856384873482 }));
        batch.addRow(new DataList(new double[]{ -0.1066111542752606 }));
        batch.addRow(new DataList(new double[]{ -0.10036171485121509 }));
        batch.addRow(new DataList(new double[]{ -0.09410831331851491 }));
        batch.addRow(new DataList(new double[]{ -0.08785119655074328 }));
        batch.addRow(new DataList(new double[]{ -0.08159061156815804 }));
        batch.addRow(new DataList(new double[]{ -0.07532680552793272 }));
        batch.addRow(new DataList(new double[]{ -0.06906002571440618 }));
        batch.addRow(new DataList(new double[]{ -0.06279051952931326 }));
        batch.addRow(new DataList(new double[]{ -0.056518534482024804 }));
        batch.addRow(new DataList(new double[]{ -0.05024431817977022 }));
        batch.addRow(new DataList(new double[]{ -0.043968118317865075 }));
        batch.addRow(new DataList(new double[]{ -0.0376901826699351 }));
        batch.addRow(new DataList(new double[]{ -0.03141075907812836 }));
        batch.addRow(new DataList(new double[]{ -0.025130095443337937 }));
        batch.addRow(new DataList(new double[]{ -0.018848439715408137 }));
        batch.addRow(new DataList(new double[]{ -0.01256603988335296 }));
        batch.addRow(new DataList(new double[]{ -0.006283143965558805 }));

        return batch;
    }

    public static Batch getTestingInputBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.001 }));
        batch.addRow(new DataList(new double[]{ 0.002 }));
        batch.addRow(new DataList(new double[]{ 0.003 }));
        batch.addRow(new DataList(new double[]{ 0.004 }));
        batch.addRow(new DataList(new double[]{ 0.005 }));
        batch.addRow(new DataList(new double[]{ 0.006 }));
        batch.addRow(new DataList(new double[]{ 0.007 }));
        batch.addRow(new DataList(new double[]{ 0.008 }));
        batch.addRow(new DataList(new double[]{ 0.009 }));
        batch.addRow(new DataList(new double[]{ 0.01 }));
        batch.addRow(new DataList(new double[]{ 0.011 }));
        batch.addRow(new DataList(new double[]{ 0.012 }));
        batch.addRow(new DataList(new double[]{ 0.013 }));
        batch.addRow(new DataList(new double[]{ 0.014 }));
        batch.addRow(new DataList(new double[]{ 0.015 }));
        batch.addRow(new DataList(new double[]{ 0.016 }));
        batch.addRow(new DataList(new double[]{ 0.017 }));
        batch.addRow(new DataList(new double[]{ 0.018 }));
        batch.addRow(new DataList(new double[]{ 0.019 }));
        batch.addRow(new DataList(new double[]{ 0.02 }));
        batch.addRow(new DataList(new double[]{ 0.021 }));
        batch.addRow(new DataList(new double[]{ 0.022 }));
        batch.addRow(new DataList(new double[]{ 0.023 }));
        batch.addRow(new DataList(new double[]{ 0.024 }));
        batch.addRow(new DataList(new double[]{ 0.025 }));
        batch.addRow(new DataList(new double[]{ 0.026 }));
        batch.addRow(new DataList(new double[]{ 0.027 }));
        batch.addRow(new DataList(new double[]{ 0.028 }));
        batch.addRow(new DataList(new double[]{ 0.029 }));
        batch.addRow(new DataList(new double[]{ 0.03 }));
        batch.addRow(new DataList(new double[]{ 0.031 }));
        batch.addRow(new DataList(new double[]{ 0.032 }));
        batch.addRow(new DataList(new double[]{ 0.033 }));
        batch.addRow(new DataList(new double[]{ 0.034 }));
        batch.addRow(new DataList(new double[]{ 0.035 }));
        batch.addRow(new DataList(new double[]{ 0.036 }));
        batch.addRow(new DataList(new double[]{ 0.037 }));
        batch.addRow(new DataList(new double[]{ 0.038 }));
        batch.addRow(new DataList(new double[]{ 0.039 }));
        batch.addRow(new DataList(new double[]{ 0.04 }));
        batch.addRow(new DataList(new double[]{ 0.041 }));
        batch.addRow(new DataList(new double[]{ 0.042 }));
        batch.addRow(new DataList(new double[]{ 0.043 }));
        batch.addRow(new DataList(new double[]{ 0.044 }));
        batch.addRow(new DataList(new double[]{ 0.045 }));
        batch.addRow(new DataList(new double[]{ 0.046 }));
        batch.addRow(new DataList(new double[]{ 0.047 }));
        batch.addRow(new DataList(new double[]{ 0.048 }));
        batch.addRow(new DataList(new double[]{ 0.049 }));
        batch.addRow(new DataList(new double[]{ 0.05 }));
        batch.addRow(new DataList(new double[]{ 0.051 }));
        batch.addRow(new DataList(new double[]{ 0.052 }));
        batch.addRow(new DataList(new double[]{ 0.053 }));
        batch.addRow(new DataList(new double[]{ 0.054 }));
        batch.addRow(new DataList(new double[]{ 0.055 }));
        batch.addRow(new DataList(new double[]{ 0.056 }));
        batch.addRow(new DataList(new double[]{ 0.057 }));
        batch.addRow(new DataList(new double[]{ 0.058 }));
        batch.addRow(new DataList(new double[]{ 0.059 }));
        batch.addRow(new DataList(new double[]{ 0.06 }));
        batch.addRow(new DataList(new double[]{ 0.061 }));
        batch.addRow(new DataList(new double[]{ 0.062 }));
        batch.addRow(new DataList(new double[]{ 0.063 }));
        batch.addRow(new DataList(new double[]{ 0.064 }));
        batch.addRow(new DataList(new double[]{ 0.065 }));
        batch.addRow(new DataList(new double[]{ 0.066 }));
        batch.addRow(new DataList(new double[]{ 0.067 }));
        batch.addRow(new DataList(new double[]{ 0.068 }));
        batch.addRow(new DataList(new double[]{ 0.069 }));
        batch.addRow(new DataList(new double[]{ 0.07 }));
        batch.addRow(new DataList(new double[]{ 0.071 }));
        batch.addRow(new DataList(new double[]{ 0.072 }));
        batch.addRow(new DataList(new double[]{ 0.073 }));
        batch.addRow(new DataList(new double[]{ 0.074 }));
        batch.addRow(new DataList(new double[]{ 0.075 }));
        batch.addRow(new DataList(new double[]{ 0.076 }));
        batch.addRow(new DataList(new double[]{ 0.077 }));
        batch.addRow(new DataList(new double[]{ 0.078 }));
        batch.addRow(new DataList(new double[]{ 0.079 }));
        batch.addRow(new DataList(new double[]{ 0.08 }));
        batch.addRow(new DataList(new double[]{ 0.081 }));
        batch.addRow(new DataList(new double[]{ 0.082 }));
        batch.addRow(new DataList(new double[]{ 0.083 }));
        batch.addRow(new DataList(new double[]{ 0.084 }));
        batch.addRow(new DataList(new double[]{ 0.085 }));
        batch.addRow(new DataList(new double[]{ 0.086 }));
        batch.addRow(new DataList(new double[]{ 0.087 }));
        batch.addRow(new DataList(new double[]{ 0.088 }));
        batch.addRow(new DataList(new double[]{ 0.089 }));
        batch.addRow(new DataList(new double[]{ 0.09 }));
        batch.addRow(new DataList(new double[]{ 0.091 }));
        batch.addRow(new DataList(new double[]{ 0.092 }));
        batch.addRow(new DataList(new double[]{ 0.093 }));
        batch.addRow(new DataList(new double[]{ 0.094 }));
        batch.addRow(new DataList(new double[]{ 0.095 }));
        batch.addRow(new DataList(new double[]{ 0.096 }));
        batch.addRow(new DataList(new double[]{ 0.097 }));
        batch.addRow(new DataList(new double[]{ 0.098 }));
        batch.addRow(new DataList(new double[]{ 0.099 }));
        batch.addRow(new DataList(new double[]{ 0.1 }));
        batch.addRow(new DataList(new double[]{ 0.101 }));
        batch.addRow(new DataList(new double[]{ 0.102 }));
        batch.addRow(new DataList(new double[]{ 0.103 }));
        batch.addRow(new DataList(new double[]{ 0.104 }));
        batch.addRow(new DataList(new double[]{ 0.105 }));
        batch.addRow(new DataList(new double[]{ 0.106 }));
        batch.addRow(new DataList(new double[]{ 0.107 }));
        batch.addRow(new DataList(new double[]{ 0.108 }));
        batch.addRow(new DataList(new double[]{ 0.109 }));
        batch.addRow(new DataList(new double[]{ 0.11 }));
        batch.addRow(new DataList(new double[]{ 0.111 }));
        batch.addRow(new DataList(new double[]{ 0.112 }));
        batch.addRow(new DataList(new double[]{ 0.113 }));
        batch.addRow(new DataList(new double[]{ 0.114 }));
        batch.addRow(new DataList(new double[]{ 0.115 }));
        batch.addRow(new DataList(new double[]{ 0.116 }));
        batch.addRow(new DataList(new double[]{ 0.117 }));
        batch.addRow(new DataList(new double[]{ 0.118 }));
        batch.addRow(new DataList(new double[]{ 0.119 }));
        batch.addRow(new DataList(new double[]{ 0.12 }));
        batch.addRow(new DataList(new double[]{ 0.121 }));
        batch.addRow(new DataList(new double[]{ 0.122 }));
        batch.addRow(new DataList(new double[]{ 0.123 }));
        batch.addRow(new DataList(new double[]{ 0.124 }));
        batch.addRow(new DataList(new double[]{ 0.125 }));
        batch.addRow(new DataList(new double[]{ 0.126 }));
        batch.addRow(new DataList(new double[]{ 0.127 }));
        batch.addRow(new DataList(new double[]{ 0.128 }));
        batch.addRow(new DataList(new double[]{ 0.129 }));
        batch.addRow(new DataList(new double[]{ 0.13 }));
        batch.addRow(new DataList(new double[]{ 0.131 }));
        batch.addRow(new DataList(new double[]{ 0.132 }));
        batch.addRow(new DataList(new double[]{ 0.133 }));
        batch.addRow(new DataList(new double[]{ 0.134 }));
        batch.addRow(new DataList(new double[]{ 0.135 }));
        batch.addRow(new DataList(new double[]{ 0.136 }));
        batch.addRow(new DataList(new double[]{ 0.137 }));
        batch.addRow(new DataList(new double[]{ 0.138 }));
        batch.addRow(new DataList(new double[]{ 0.139 }));
        batch.addRow(new DataList(new double[]{ 0.14 }));
        batch.addRow(new DataList(new double[]{ 0.141 }));
        batch.addRow(new DataList(new double[]{ 0.142 }));
        batch.addRow(new DataList(new double[]{ 0.143 }));
        batch.addRow(new DataList(new double[]{ 0.144 }));
        batch.addRow(new DataList(new double[]{ 0.145 }));
        batch.addRow(new DataList(new double[]{ 0.146 }));
        batch.addRow(new DataList(new double[]{ 0.147 }));
        batch.addRow(new DataList(new double[]{ 0.148 }));
        batch.addRow(new DataList(new double[]{ 0.149 }));
        batch.addRow(new DataList(new double[]{ 0.15 }));
        batch.addRow(new DataList(new double[]{ 0.151 }));
        batch.addRow(new DataList(new double[]{ 0.152 }));
        batch.addRow(new DataList(new double[]{ 0.153 }));
        batch.addRow(new DataList(new double[]{ 0.154 }));
        batch.addRow(new DataList(new double[]{ 0.155 }));
        batch.addRow(new DataList(new double[]{ 0.156 }));
        batch.addRow(new DataList(new double[]{ 0.157 }));
        batch.addRow(new DataList(new double[]{ 0.158 }));
        batch.addRow(new DataList(new double[]{ 0.159 }));
        batch.addRow(new DataList(new double[]{ 0.16 }));
        batch.addRow(new DataList(new double[]{ 0.161 }));
        batch.addRow(new DataList(new double[]{ 0.162 }));
        batch.addRow(new DataList(new double[]{ 0.163 }));
        batch.addRow(new DataList(new double[]{ 0.164 }));
        batch.addRow(new DataList(new double[]{ 0.165 }));
        batch.addRow(new DataList(new double[]{ 0.166 }));
        batch.addRow(new DataList(new double[]{ 0.167 }));
        batch.addRow(new DataList(new double[]{ 0.168 }));
        batch.addRow(new DataList(new double[]{ 0.169 }));
        batch.addRow(new DataList(new double[]{ 0.17 }));
        batch.addRow(new DataList(new double[]{ 0.171 }));
        batch.addRow(new DataList(new double[]{ 0.172 }));
        batch.addRow(new DataList(new double[]{ 0.173 }));
        batch.addRow(new DataList(new double[]{ 0.174 }));
        batch.addRow(new DataList(new double[]{ 0.175 }));
        batch.addRow(new DataList(new double[]{ 0.176 }));
        batch.addRow(new DataList(new double[]{ 0.177 }));
        batch.addRow(new DataList(new double[]{ 0.178 }));
        batch.addRow(new DataList(new double[]{ 0.179 }));
        batch.addRow(new DataList(new double[]{ 0.18 }));
        batch.addRow(new DataList(new double[]{ 0.181 }));
        batch.addRow(new DataList(new double[]{ 0.182 }));
        batch.addRow(new DataList(new double[]{ 0.183 }));
        batch.addRow(new DataList(new double[]{ 0.184 }));
        batch.addRow(new DataList(new double[]{ 0.185 }));
        batch.addRow(new DataList(new double[]{ 0.186 }));
        batch.addRow(new DataList(new double[]{ 0.187 }));
        batch.addRow(new DataList(new double[]{ 0.188 }));
        batch.addRow(new DataList(new double[]{ 0.189 }));
        batch.addRow(new DataList(new double[]{ 0.19 }));
        batch.addRow(new DataList(new double[]{ 0.191 }));
        batch.addRow(new DataList(new double[]{ 0.192 }));
        batch.addRow(new DataList(new double[]{ 0.193 }));
        batch.addRow(new DataList(new double[]{ 0.194 }));
        batch.addRow(new DataList(new double[]{ 0.195 }));
        batch.addRow(new DataList(new double[]{ 0.196 }));
        batch.addRow(new DataList(new double[]{ 0.197 }));
        batch.addRow(new DataList(new double[]{ 0.198 }));
        batch.addRow(new DataList(new double[]{ 0.199 }));
        batch.addRow(new DataList(new double[]{ 0.2 }));
        batch.addRow(new DataList(new double[]{ 0.201 }));
        batch.addRow(new DataList(new double[]{ 0.202 }));
        batch.addRow(new DataList(new double[]{ 0.203 }));
        batch.addRow(new DataList(new double[]{ 0.204 }));
        batch.addRow(new DataList(new double[]{ 0.205 }));
        batch.addRow(new DataList(new double[]{ 0.206 }));
        batch.addRow(new DataList(new double[]{ 0.207 }));
        batch.addRow(new DataList(new double[]{ 0.208 }));
        batch.addRow(new DataList(new double[]{ 0.209 }));
        batch.addRow(new DataList(new double[]{ 0.21 }));
        batch.addRow(new DataList(new double[]{ 0.211 }));
        batch.addRow(new DataList(new double[]{ 0.212 }));
        batch.addRow(new DataList(new double[]{ 0.213 }));
        batch.addRow(new DataList(new double[]{ 0.214 }));
        batch.addRow(new DataList(new double[]{ 0.215 }));
        batch.addRow(new DataList(new double[]{ 0.216 }));
        batch.addRow(new DataList(new double[]{ 0.217 }));
        batch.addRow(new DataList(new double[]{ 0.218 }));
        batch.addRow(new DataList(new double[]{ 0.219 }));
        batch.addRow(new DataList(new double[]{ 0.22 }));
        batch.addRow(new DataList(new double[]{ 0.221 }));
        batch.addRow(new DataList(new double[]{ 0.222 }));
        batch.addRow(new DataList(new double[]{ 0.223 }));
        batch.addRow(new DataList(new double[]{ 0.224 }));
        batch.addRow(new DataList(new double[]{ 0.225 }));
        batch.addRow(new DataList(new double[]{ 0.226 }));
        batch.addRow(new DataList(new double[]{ 0.227 }));
        batch.addRow(new DataList(new double[]{ 0.228 }));
        batch.addRow(new DataList(new double[]{ 0.229 }));
        batch.addRow(new DataList(new double[]{ 0.23 }));
        batch.addRow(new DataList(new double[]{ 0.231 }));
        batch.addRow(new DataList(new double[]{ 0.232 }));
        batch.addRow(new DataList(new double[]{ 0.233 }));
        batch.addRow(new DataList(new double[]{ 0.234 }));
        batch.addRow(new DataList(new double[]{ 0.235 }));
        batch.addRow(new DataList(new double[]{ 0.236 }));
        batch.addRow(new DataList(new double[]{ 0.237 }));
        batch.addRow(new DataList(new double[]{ 0.238 }));
        batch.addRow(new DataList(new double[]{ 0.239 }));
        batch.addRow(new DataList(new double[]{ 0.24 }));
        batch.addRow(new DataList(new double[]{ 0.241 }));
        batch.addRow(new DataList(new double[]{ 0.242 }));
        batch.addRow(new DataList(new double[]{ 0.243 }));
        batch.addRow(new DataList(new double[]{ 0.244 }));
        batch.addRow(new DataList(new double[]{ 0.245 }));
        batch.addRow(new DataList(new double[]{ 0.246 }));
        batch.addRow(new DataList(new double[]{ 0.247 }));
        batch.addRow(new DataList(new double[]{ 0.248 }));
        batch.addRow(new DataList(new double[]{ 0.249 }));
        batch.addRow(new DataList(new double[]{ 0.25 }));
        batch.addRow(new DataList(new double[]{ 0.251 }));
        batch.addRow(new DataList(new double[]{ 0.252 }));
        batch.addRow(new DataList(new double[]{ 0.253 }));
        batch.addRow(new DataList(new double[]{ 0.254 }));
        batch.addRow(new DataList(new double[]{ 0.255 }));
        batch.addRow(new DataList(new double[]{ 0.256 }));
        batch.addRow(new DataList(new double[]{ 0.257 }));
        batch.addRow(new DataList(new double[]{ 0.258 }));
        batch.addRow(new DataList(new double[]{ 0.259 }));
        batch.addRow(new DataList(new double[]{ 0.26 }));
        batch.addRow(new DataList(new double[]{ 0.261 }));
        batch.addRow(new DataList(new double[]{ 0.262 }));
        batch.addRow(new DataList(new double[]{ 0.263 }));
        batch.addRow(new DataList(new double[]{ 0.264 }));
        batch.addRow(new DataList(new double[]{ 0.265 }));
        batch.addRow(new DataList(new double[]{ 0.266 }));
        batch.addRow(new DataList(new double[]{ 0.267 }));
        batch.addRow(new DataList(new double[]{ 0.268 }));
        batch.addRow(new DataList(new double[]{ 0.269 }));
        batch.addRow(new DataList(new double[]{ 0.27 }));
        batch.addRow(new DataList(new double[]{ 0.271 }));
        batch.addRow(new DataList(new double[]{ 0.272 }));
        batch.addRow(new DataList(new double[]{ 0.273 }));
        batch.addRow(new DataList(new double[]{ 0.274 }));
        batch.addRow(new DataList(new double[]{ 0.275 }));
        batch.addRow(new DataList(new double[]{ 0.276 }));
        batch.addRow(new DataList(new double[]{ 0.277 }));
        batch.addRow(new DataList(new double[]{ 0.278 }));
        batch.addRow(new DataList(new double[]{ 0.279 }));
        batch.addRow(new DataList(new double[]{ 0.28 }));
        batch.addRow(new DataList(new double[]{ 0.281 }));
        batch.addRow(new DataList(new double[]{ 0.282 }));
        batch.addRow(new DataList(new double[]{ 0.283 }));
        batch.addRow(new DataList(new double[]{ 0.284 }));
        batch.addRow(new DataList(new double[]{ 0.285 }));
        batch.addRow(new DataList(new double[]{ 0.286 }));
        batch.addRow(new DataList(new double[]{ 0.287 }));
        batch.addRow(new DataList(new double[]{ 0.288 }));
        batch.addRow(new DataList(new double[]{ 0.289 }));
        batch.addRow(new DataList(new double[]{ 0.29 }));
        batch.addRow(new DataList(new double[]{ 0.291 }));
        batch.addRow(new DataList(new double[]{ 0.292 }));
        batch.addRow(new DataList(new double[]{ 0.293 }));
        batch.addRow(new DataList(new double[]{ 0.294 }));
        batch.addRow(new DataList(new double[]{ 0.295 }));
        batch.addRow(new DataList(new double[]{ 0.296 }));
        batch.addRow(new DataList(new double[]{ 0.297 }));
        batch.addRow(new DataList(new double[]{ 0.298 }));
        batch.addRow(new DataList(new double[]{ 0.299 }));
        batch.addRow(new DataList(new double[]{ 0.3 }));
        batch.addRow(new DataList(new double[]{ 0.301 }));
        batch.addRow(new DataList(new double[]{ 0.302 }));
        batch.addRow(new DataList(new double[]{ 0.303 }));
        batch.addRow(new DataList(new double[]{ 0.304 }));
        batch.addRow(new DataList(new double[]{ 0.305 }));
        batch.addRow(new DataList(new double[]{ 0.306 }));
        batch.addRow(new DataList(new double[]{ 0.307 }));
        batch.addRow(new DataList(new double[]{ 0.308 }));
        batch.addRow(new DataList(new double[]{ 0.309 }));
        batch.addRow(new DataList(new double[]{ 0.31 }));
        batch.addRow(new DataList(new double[]{ 0.311 }));
        batch.addRow(new DataList(new double[]{ 0.312 }));
        batch.addRow(new DataList(new double[]{ 0.313 }));
        batch.addRow(new DataList(new double[]{ 0.314 }));
        batch.addRow(new DataList(new double[]{ 0.315 }));
        batch.addRow(new DataList(new double[]{ 0.316 }));
        batch.addRow(new DataList(new double[]{ 0.317 }));
        batch.addRow(new DataList(new double[]{ 0.318 }));
        batch.addRow(new DataList(new double[]{ 0.319 }));
        batch.addRow(new DataList(new double[]{ 0.32 }));
        batch.addRow(new DataList(new double[]{ 0.321 }));
        batch.addRow(new DataList(new double[]{ 0.322 }));
        batch.addRow(new DataList(new double[]{ 0.323 }));
        batch.addRow(new DataList(new double[]{ 0.324 }));
        batch.addRow(new DataList(new double[]{ 0.325 }));
        batch.addRow(new DataList(new double[]{ 0.326 }));
        batch.addRow(new DataList(new double[]{ 0.327 }));
        batch.addRow(new DataList(new double[]{ 0.328 }));
        batch.addRow(new DataList(new double[]{ 0.329 }));
        batch.addRow(new DataList(new double[]{ 0.33 }));
        batch.addRow(new DataList(new double[]{ 0.331 }));
        batch.addRow(new DataList(new double[]{ 0.332 }));
        batch.addRow(new DataList(new double[]{ 0.333 }));
        batch.addRow(new DataList(new double[]{ 0.334 }));
        batch.addRow(new DataList(new double[]{ 0.335 }));
        batch.addRow(new DataList(new double[]{ 0.336 }));
        batch.addRow(new DataList(new double[]{ 0.337 }));
        batch.addRow(new DataList(new double[]{ 0.338 }));
        batch.addRow(new DataList(new double[]{ 0.339 }));
        batch.addRow(new DataList(new double[]{ 0.34 }));
        batch.addRow(new DataList(new double[]{ 0.341 }));
        batch.addRow(new DataList(new double[]{ 0.342 }));
        batch.addRow(new DataList(new double[]{ 0.343 }));
        batch.addRow(new DataList(new double[]{ 0.344 }));
        batch.addRow(new DataList(new double[]{ 0.345 }));
        batch.addRow(new DataList(new double[]{ 0.346 }));
        batch.addRow(new DataList(new double[]{ 0.347 }));
        batch.addRow(new DataList(new double[]{ 0.348 }));
        batch.addRow(new DataList(new double[]{ 0.349 }));
        batch.addRow(new DataList(new double[]{ 0.35 }));
        batch.addRow(new DataList(new double[]{ 0.351 }));
        batch.addRow(new DataList(new double[]{ 0.352 }));
        batch.addRow(new DataList(new double[]{ 0.353 }));
        batch.addRow(new DataList(new double[]{ 0.354 }));
        batch.addRow(new DataList(new double[]{ 0.355 }));
        batch.addRow(new DataList(new double[]{ 0.356 }));
        batch.addRow(new DataList(new double[]{ 0.357 }));
        batch.addRow(new DataList(new double[]{ 0.358 }));
        batch.addRow(new DataList(new double[]{ 0.359 }));
        batch.addRow(new DataList(new double[]{ 0.36 }));
        batch.addRow(new DataList(new double[]{ 0.361 }));
        batch.addRow(new DataList(new double[]{ 0.362 }));
        batch.addRow(new DataList(new double[]{ 0.363 }));
        batch.addRow(new DataList(new double[]{ 0.364 }));
        batch.addRow(new DataList(new double[]{ 0.365 }));
        batch.addRow(new DataList(new double[]{ 0.366 }));
        batch.addRow(new DataList(new double[]{ 0.367 }));
        batch.addRow(new DataList(new double[]{ 0.368 }));
        batch.addRow(new DataList(new double[]{ 0.369 }));
        batch.addRow(new DataList(new double[]{ 0.37 }));
        batch.addRow(new DataList(new double[]{ 0.371 }));
        batch.addRow(new DataList(new double[]{ 0.372 }));
        batch.addRow(new DataList(new double[]{ 0.373 }));
        batch.addRow(new DataList(new double[]{ 0.374 }));
        batch.addRow(new DataList(new double[]{ 0.375 }));
        batch.addRow(new DataList(new double[]{ 0.376 }));
        batch.addRow(new DataList(new double[]{ 0.377 }));
        batch.addRow(new DataList(new double[]{ 0.378 }));
        batch.addRow(new DataList(new double[]{ 0.379 }));
        batch.addRow(new DataList(new double[]{ 0.38 }));
        batch.addRow(new DataList(new double[]{ 0.381 }));
        batch.addRow(new DataList(new double[]{ 0.382 }));
        batch.addRow(new DataList(new double[]{ 0.383 }));
        batch.addRow(new DataList(new double[]{ 0.384 }));
        batch.addRow(new DataList(new double[]{ 0.385 }));
        batch.addRow(new DataList(new double[]{ 0.386 }));
        batch.addRow(new DataList(new double[]{ 0.387 }));
        batch.addRow(new DataList(new double[]{ 0.388 }));
        batch.addRow(new DataList(new double[]{ 0.389 }));
        batch.addRow(new DataList(new double[]{ 0.39 }));
        batch.addRow(new DataList(new double[]{ 0.391 }));
        batch.addRow(new DataList(new double[]{ 0.392 }));
        batch.addRow(new DataList(new double[]{ 0.393 }));
        batch.addRow(new DataList(new double[]{ 0.394 }));
        batch.addRow(new DataList(new double[]{ 0.395 }));
        batch.addRow(new DataList(new double[]{ 0.396 }));
        batch.addRow(new DataList(new double[]{ 0.397 }));
        batch.addRow(new DataList(new double[]{ 0.398 }));
        batch.addRow(new DataList(new double[]{ 0.399 }));
        batch.addRow(new DataList(new double[]{ 0.4 }));
        batch.addRow(new DataList(new double[]{ 0.401 }));
        batch.addRow(new DataList(new double[]{ 0.402 }));
        batch.addRow(new DataList(new double[]{ 0.403 }));
        batch.addRow(new DataList(new double[]{ 0.404 }));
        batch.addRow(new DataList(new double[]{ 0.405 }));
        batch.addRow(new DataList(new double[]{ 0.406 }));
        batch.addRow(new DataList(new double[]{ 0.407 }));
        batch.addRow(new DataList(new double[]{ 0.408 }));
        batch.addRow(new DataList(new double[]{ 0.409 }));
        batch.addRow(new DataList(new double[]{ 0.41 }));
        batch.addRow(new DataList(new double[]{ 0.411 }));
        batch.addRow(new DataList(new double[]{ 0.412 }));
        batch.addRow(new DataList(new double[]{ 0.413 }));
        batch.addRow(new DataList(new double[]{ 0.414 }));
        batch.addRow(new DataList(new double[]{ 0.415 }));
        batch.addRow(new DataList(new double[]{ 0.416 }));
        batch.addRow(new DataList(new double[]{ 0.417 }));
        batch.addRow(new DataList(new double[]{ 0.418 }));
        batch.addRow(new DataList(new double[]{ 0.419 }));
        batch.addRow(new DataList(new double[]{ 0.42 }));
        batch.addRow(new DataList(new double[]{ 0.421 }));
        batch.addRow(new DataList(new double[]{ 0.422 }));
        batch.addRow(new DataList(new double[]{ 0.423 }));
        batch.addRow(new DataList(new double[]{ 0.424 }));
        batch.addRow(new DataList(new double[]{ 0.425 }));
        batch.addRow(new DataList(new double[]{ 0.426 }));
        batch.addRow(new DataList(new double[]{ 0.427 }));
        batch.addRow(new DataList(new double[]{ 0.428 }));
        batch.addRow(new DataList(new double[]{ 0.429 }));
        batch.addRow(new DataList(new double[]{ 0.43 }));
        batch.addRow(new DataList(new double[]{ 0.431 }));
        batch.addRow(new DataList(new double[]{ 0.432 }));
        batch.addRow(new DataList(new double[]{ 0.433 }));
        batch.addRow(new DataList(new double[]{ 0.434 }));
        batch.addRow(new DataList(new double[]{ 0.435 }));
        batch.addRow(new DataList(new double[]{ 0.436 }));
        batch.addRow(new DataList(new double[]{ 0.437 }));
        batch.addRow(new DataList(new double[]{ 0.438 }));
        batch.addRow(new DataList(new double[]{ 0.439 }));
        batch.addRow(new DataList(new double[]{ 0.44 }));
        batch.addRow(new DataList(new double[]{ 0.441 }));
        batch.addRow(new DataList(new double[]{ 0.442 }));
        batch.addRow(new DataList(new double[]{ 0.443 }));
        batch.addRow(new DataList(new double[]{ 0.444 }));
        batch.addRow(new DataList(new double[]{ 0.445 }));
        batch.addRow(new DataList(new double[]{ 0.446 }));
        batch.addRow(new DataList(new double[]{ 0.447 }));
        batch.addRow(new DataList(new double[]{ 0.448 }));
        batch.addRow(new DataList(new double[]{ 0.449 }));
        batch.addRow(new DataList(new double[]{ 0.45 }));
        batch.addRow(new DataList(new double[]{ 0.451 }));
        batch.addRow(new DataList(new double[]{ 0.452 }));
        batch.addRow(new DataList(new double[]{ 0.453 }));
        batch.addRow(new DataList(new double[]{ 0.454 }));
        batch.addRow(new DataList(new double[]{ 0.455 }));
        batch.addRow(new DataList(new double[]{ 0.456 }));
        batch.addRow(new DataList(new double[]{ 0.457 }));
        batch.addRow(new DataList(new double[]{ 0.458 }));
        batch.addRow(new DataList(new double[]{ 0.459 }));
        batch.addRow(new DataList(new double[]{ 0.46 }));
        batch.addRow(new DataList(new double[]{ 0.461 }));
        batch.addRow(new DataList(new double[]{ 0.462 }));
        batch.addRow(new DataList(new double[]{ 0.463 }));
        batch.addRow(new DataList(new double[]{ 0.464 }));
        batch.addRow(new DataList(new double[]{ 0.465 }));
        batch.addRow(new DataList(new double[]{ 0.466 }));
        batch.addRow(new DataList(new double[]{ 0.467 }));
        batch.addRow(new DataList(new double[]{ 0.468 }));
        batch.addRow(new DataList(new double[]{ 0.469 }));
        batch.addRow(new DataList(new double[]{ 0.47 }));
        batch.addRow(new DataList(new double[]{ 0.471 }));
        batch.addRow(new DataList(new double[]{ 0.472 }));
        batch.addRow(new DataList(new double[]{ 0.473 }));
        batch.addRow(new DataList(new double[]{ 0.474 }));
        batch.addRow(new DataList(new double[]{ 0.475 }));
        batch.addRow(new DataList(new double[]{ 0.476 }));
        batch.addRow(new DataList(new double[]{ 0.477 }));
        batch.addRow(new DataList(new double[]{ 0.478 }));
        batch.addRow(new DataList(new double[]{ 0.479 }));
        batch.addRow(new DataList(new double[]{ 0.48 }));
        batch.addRow(new DataList(new double[]{ 0.481 }));
        batch.addRow(new DataList(new double[]{ 0.482 }));
        batch.addRow(new DataList(new double[]{ 0.483 }));
        batch.addRow(new DataList(new double[]{ 0.484 }));
        batch.addRow(new DataList(new double[]{ 0.485 }));
        batch.addRow(new DataList(new double[]{ 0.486 }));
        batch.addRow(new DataList(new double[]{ 0.487 }));
        batch.addRow(new DataList(new double[]{ 0.488 }));
        batch.addRow(new DataList(new double[]{ 0.489 }));
        batch.addRow(new DataList(new double[]{ 0.49 }));
        batch.addRow(new DataList(new double[]{ 0.491 }));
        batch.addRow(new DataList(new double[]{ 0.492 }));
        batch.addRow(new DataList(new double[]{ 0.493 }));
        batch.addRow(new DataList(new double[]{ 0.494 }));
        batch.addRow(new DataList(new double[]{ 0.495 }));
        batch.addRow(new DataList(new double[]{ 0.496 }));
        batch.addRow(new DataList(new double[]{ 0.497 }));
        batch.addRow(new DataList(new double[]{ 0.498 }));
        batch.addRow(new DataList(new double[]{ 0.499 }));
        batch.addRow(new DataList(new double[]{ 0.5 }));
        batch.addRow(new DataList(new double[]{ 0.501 }));
        batch.addRow(new DataList(new double[]{ 0.502 }));
        batch.addRow(new DataList(new double[]{ 0.503 }));
        batch.addRow(new DataList(new double[]{ 0.504 }));
        batch.addRow(new DataList(new double[]{ 0.505 }));
        batch.addRow(new DataList(new double[]{ 0.506 }));
        batch.addRow(new DataList(new double[]{ 0.507 }));
        batch.addRow(new DataList(new double[]{ 0.508 }));
        batch.addRow(new DataList(new double[]{ 0.509 }));
        batch.addRow(new DataList(new double[]{ 0.51 }));
        batch.addRow(new DataList(new double[]{ 0.511 }));
        batch.addRow(new DataList(new double[]{ 0.512 }));
        batch.addRow(new DataList(new double[]{ 0.513 }));
        batch.addRow(new DataList(new double[]{ 0.514 }));
        batch.addRow(new DataList(new double[]{ 0.515 }));
        batch.addRow(new DataList(new double[]{ 0.516 }));
        batch.addRow(new DataList(new double[]{ 0.517 }));
        batch.addRow(new DataList(new double[]{ 0.518 }));
        batch.addRow(new DataList(new double[]{ 0.519 }));
        batch.addRow(new DataList(new double[]{ 0.52 }));
        batch.addRow(new DataList(new double[]{ 0.521 }));
        batch.addRow(new DataList(new double[]{ 0.522 }));
        batch.addRow(new DataList(new double[]{ 0.523 }));
        batch.addRow(new DataList(new double[]{ 0.524 }));
        batch.addRow(new DataList(new double[]{ 0.525 }));
        batch.addRow(new DataList(new double[]{ 0.526 }));
        batch.addRow(new DataList(new double[]{ 0.527 }));
        batch.addRow(new DataList(new double[]{ 0.528 }));
        batch.addRow(new DataList(new double[]{ 0.529 }));
        batch.addRow(new DataList(new double[]{ 0.53 }));
        batch.addRow(new DataList(new double[]{ 0.531 }));
        batch.addRow(new DataList(new double[]{ 0.532 }));
        batch.addRow(new DataList(new double[]{ 0.533 }));
        batch.addRow(new DataList(new double[]{ 0.534 }));
        batch.addRow(new DataList(new double[]{ 0.535 }));
        batch.addRow(new DataList(new double[]{ 0.536 }));
        batch.addRow(new DataList(new double[]{ 0.537 }));
        batch.addRow(new DataList(new double[]{ 0.538 }));
        batch.addRow(new DataList(new double[]{ 0.539 }));
        batch.addRow(new DataList(new double[]{ 0.54 }));
        batch.addRow(new DataList(new double[]{ 0.541 }));
        batch.addRow(new DataList(new double[]{ 0.542 }));
        batch.addRow(new DataList(new double[]{ 0.543 }));
        batch.addRow(new DataList(new double[]{ 0.544 }));
        batch.addRow(new DataList(new double[]{ 0.545 }));
        batch.addRow(new DataList(new double[]{ 0.546 }));
        batch.addRow(new DataList(new double[]{ 0.547 }));
        batch.addRow(new DataList(new double[]{ 0.548 }));
        batch.addRow(new DataList(new double[]{ 0.549 }));
        batch.addRow(new DataList(new double[]{ 0.55 }));
        batch.addRow(new DataList(new double[]{ 0.551 }));
        batch.addRow(new DataList(new double[]{ 0.552 }));
        batch.addRow(new DataList(new double[]{ 0.553 }));
        batch.addRow(new DataList(new double[]{ 0.554 }));
        batch.addRow(new DataList(new double[]{ 0.555 }));
        batch.addRow(new DataList(new double[]{ 0.556 }));
        batch.addRow(new DataList(new double[]{ 0.557 }));
        batch.addRow(new DataList(new double[]{ 0.558 }));
        batch.addRow(new DataList(new double[]{ 0.559 }));
        batch.addRow(new DataList(new double[]{ 0.56 }));
        batch.addRow(new DataList(new double[]{ 0.561 }));
        batch.addRow(new DataList(new double[]{ 0.562 }));
        batch.addRow(new DataList(new double[]{ 0.563 }));
        batch.addRow(new DataList(new double[]{ 0.564 }));
        batch.addRow(new DataList(new double[]{ 0.565 }));
        batch.addRow(new DataList(new double[]{ 0.566 }));
        batch.addRow(new DataList(new double[]{ 0.567 }));
        batch.addRow(new DataList(new double[]{ 0.568 }));
        batch.addRow(new DataList(new double[]{ 0.569 }));
        batch.addRow(new DataList(new double[]{ 0.57 }));
        batch.addRow(new DataList(new double[]{ 0.571 }));
        batch.addRow(new DataList(new double[]{ 0.572 }));
        batch.addRow(new DataList(new double[]{ 0.573 }));
        batch.addRow(new DataList(new double[]{ 0.574 }));
        batch.addRow(new DataList(new double[]{ 0.575 }));
        batch.addRow(new DataList(new double[]{ 0.576 }));
        batch.addRow(new DataList(new double[]{ 0.577 }));
        batch.addRow(new DataList(new double[]{ 0.578 }));
        batch.addRow(new DataList(new double[]{ 0.579 }));
        batch.addRow(new DataList(new double[]{ 0.58 }));
        batch.addRow(new DataList(new double[]{ 0.581 }));
        batch.addRow(new DataList(new double[]{ 0.582 }));
        batch.addRow(new DataList(new double[]{ 0.583 }));
        batch.addRow(new DataList(new double[]{ 0.584 }));
        batch.addRow(new DataList(new double[]{ 0.585 }));
        batch.addRow(new DataList(new double[]{ 0.586 }));
        batch.addRow(new DataList(new double[]{ 0.587 }));
        batch.addRow(new DataList(new double[]{ 0.588 }));
        batch.addRow(new DataList(new double[]{ 0.589 }));
        batch.addRow(new DataList(new double[]{ 0.59 }));
        batch.addRow(new DataList(new double[]{ 0.591 }));
        batch.addRow(new DataList(new double[]{ 0.592 }));
        batch.addRow(new DataList(new double[]{ 0.593 }));
        batch.addRow(new DataList(new double[]{ 0.594 }));
        batch.addRow(new DataList(new double[]{ 0.595 }));
        batch.addRow(new DataList(new double[]{ 0.596 }));
        batch.addRow(new DataList(new double[]{ 0.597 }));
        batch.addRow(new DataList(new double[]{ 0.598 }));
        batch.addRow(new DataList(new double[]{ 0.599 }));
        batch.addRow(new DataList(new double[]{ 0.6 }));
        batch.addRow(new DataList(new double[]{ 0.601 }));
        batch.addRow(new DataList(new double[]{ 0.602 }));
        batch.addRow(new DataList(new double[]{ 0.603 }));
        batch.addRow(new DataList(new double[]{ 0.604 }));
        batch.addRow(new DataList(new double[]{ 0.605 }));
        batch.addRow(new DataList(new double[]{ 0.606 }));
        batch.addRow(new DataList(new double[]{ 0.607 }));
        batch.addRow(new DataList(new double[]{ 0.608 }));
        batch.addRow(new DataList(new double[]{ 0.609 }));
        batch.addRow(new DataList(new double[]{ 0.61 }));
        batch.addRow(new DataList(new double[]{ 0.611 }));
        batch.addRow(new DataList(new double[]{ 0.612 }));
        batch.addRow(new DataList(new double[]{ 0.613 }));
        batch.addRow(new DataList(new double[]{ 0.614 }));
        batch.addRow(new DataList(new double[]{ 0.615 }));
        batch.addRow(new DataList(new double[]{ 0.616 }));
        batch.addRow(new DataList(new double[]{ 0.617 }));
        batch.addRow(new DataList(new double[]{ 0.618 }));
        batch.addRow(new DataList(new double[]{ 0.619 }));
        batch.addRow(new DataList(new double[]{ 0.62 }));
        batch.addRow(new DataList(new double[]{ 0.621 }));
        batch.addRow(new DataList(new double[]{ 0.622 }));
        batch.addRow(new DataList(new double[]{ 0.623 }));
        batch.addRow(new DataList(new double[]{ 0.624 }));
        batch.addRow(new DataList(new double[]{ 0.625 }));
        batch.addRow(new DataList(new double[]{ 0.626 }));
        batch.addRow(new DataList(new double[]{ 0.627 }));
        batch.addRow(new DataList(new double[]{ 0.628 }));
        batch.addRow(new DataList(new double[]{ 0.629 }));
        batch.addRow(new DataList(new double[]{ 0.63 }));
        batch.addRow(new DataList(new double[]{ 0.631 }));
        batch.addRow(new DataList(new double[]{ 0.632 }));
        batch.addRow(new DataList(new double[]{ 0.633 }));
        batch.addRow(new DataList(new double[]{ 0.634 }));
        batch.addRow(new DataList(new double[]{ 0.635 }));
        batch.addRow(new DataList(new double[]{ 0.636 }));
        batch.addRow(new DataList(new double[]{ 0.637 }));
        batch.addRow(new DataList(new double[]{ 0.638 }));
        batch.addRow(new DataList(new double[]{ 0.639 }));
        batch.addRow(new DataList(new double[]{ 0.64 }));
        batch.addRow(new DataList(new double[]{ 0.641 }));
        batch.addRow(new DataList(new double[]{ 0.642 }));
        batch.addRow(new DataList(new double[]{ 0.643 }));
        batch.addRow(new DataList(new double[]{ 0.644 }));
        batch.addRow(new DataList(new double[]{ 0.645 }));
        batch.addRow(new DataList(new double[]{ 0.646 }));
        batch.addRow(new DataList(new double[]{ 0.647 }));
        batch.addRow(new DataList(new double[]{ 0.648 }));
        batch.addRow(new DataList(new double[]{ 0.649 }));
        batch.addRow(new DataList(new double[]{ 0.65 }));
        batch.addRow(new DataList(new double[]{ 0.651 }));
        batch.addRow(new DataList(new double[]{ 0.652 }));
        batch.addRow(new DataList(new double[]{ 0.653 }));
        batch.addRow(new DataList(new double[]{ 0.654 }));
        batch.addRow(new DataList(new double[]{ 0.655 }));
        batch.addRow(new DataList(new double[]{ 0.656 }));
        batch.addRow(new DataList(new double[]{ 0.657 }));
        batch.addRow(new DataList(new double[]{ 0.658 }));
        batch.addRow(new DataList(new double[]{ 0.659 }));
        batch.addRow(new DataList(new double[]{ 0.66 }));
        batch.addRow(new DataList(new double[]{ 0.661 }));
        batch.addRow(new DataList(new double[]{ 0.662 }));
        batch.addRow(new DataList(new double[]{ 0.663 }));
        batch.addRow(new DataList(new double[]{ 0.664 }));
        batch.addRow(new DataList(new double[]{ 0.665 }));
        batch.addRow(new DataList(new double[]{ 0.666 }));
        batch.addRow(new DataList(new double[]{ 0.667 }));
        batch.addRow(new DataList(new double[]{ 0.668 }));
        batch.addRow(new DataList(new double[]{ 0.669 }));
        batch.addRow(new DataList(new double[]{ 0.67 }));
        batch.addRow(new DataList(new double[]{ 0.671 }));
        batch.addRow(new DataList(new double[]{ 0.672 }));
        batch.addRow(new DataList(new double[]{ 0.673 }));
        batch.addRow(new DataList(new double[]{ 0.674 }));
        batch.addRow(new DataList(new double[]{ 0.675 }));
        batch.addRow(new DataList(new double[]{ 0.676 }));
        batch.addRow(new DataList(new double[]{ 0.677 }));
        batch.addRow(new DataList(new double[]{ 0.678 }));
        batch.addRow(new DataList(new double[]{ 0.679 }));
        batch.addRow(new DataList(new double[]{ 0.68 }));
        batch.addRow(new DataList(new double[]{ 0.681 }));
        batch.addRow(new DataList(new double[]{ 0.682 }));
        batch.addRow(new DataList(new double[]{ 0.683 }));
        batch.addRow(new DataList(new double[]{ 0.684 }));
        batch.addRow(new DataList(new double[]{ 0.685 }));
        batch.addRow(new DataList(new double[]{ 0.686 }));
        batch.addRow(new DataList(new double[]{ 0.687 }));
        batch.addRow(new DataList(new double[]{ 0.688 }));
        batch.addRow(new DataList(new double[]{ 0.689 }));
        batch.addRow(new DataList(new double[]{ 0.69 }));
        batch.addRow(new DataList(new double[]{ 0.691 }));
        batch.addRow(new DataList(new double[]{ 0.692 }));
        batch.addRow(new DataList(new double[]{ 0.693 }));
        batch.addRow(new DataList(new double[]{ 0.694 }));
        batch.addRow(new DataList(new double[]{ 0.695 }));
        batch.addRow(new DataList(new double[]{ 0.696 }));
        batch.addRow(new DataList(new double[]{ 0.697 }));
        batch.addRow(new DataList(new double[]{ 0.698 }));
        batch.addRow(new DataList(new double[]{ 0.699 }));
        batch.addRow(new DataList(new double[]{ 0.7 }));
        batch.addRow(new DataList(new double[]{ 0.701 }));
        batch.addRow(new DataList(new double[]{ 0.702 }));
        batch.addRow(new DataList(new double[]{ 0.703 }));
        batch.addRow(new DataList(new double[]{ 0.704 }));
        batch.addRow(new DataList(new double[]{ 0.705 }));
        batch.addRow(new DataList(new double[]{ 0.706 }));
        batch.addRow(new DataList(new double[]{ 0.707 }));
        batch.addRow(new DataList(new double[]{ 0.708 }));
        batch.addRow(new DataList(new double[]{ 0.709 }));
        batch.addRow(new DataList(new double[]{ 0.71 }));
        batch.addRow(new DataList(new double[]{ 0.711 }));
        batch.addRow(new DataList(new double[]{ 0.712 }));
        batch.addRow(new DataList(new double[]{ 0.713 }));
        batch.addRow(new DataList(new double[]{ 0.714 }));
        batch.addRow(new DataList(new double[]{ 0.715 }));
        batch.addRow(new DataList(new double[]{ 0.716 }));
        batch.addRow(new DataList(new double[]{ 0.717 }));
        batch.addRow(new DataList(new double[]{ 0.718 }));
        batch.addRow(new DataList(new double[]{ 0.719 }));
        batch.addRow(new DataList(new double[]{ 0.72 }));
        batch.addRow(new DataList(new double[]{ 0.721 }));
        batch.addRow(new DataList(new double[]{ 0.722 }));
        batch.addRow(new DataList(new double[]{ 0.723 }));
        batch.addRow(new DataList(new double[]{ 0.724 }));
        batch.addRow(new DataList(new double[]{ 0.725 }));
        batch.addRow(new DataList(new double[]{ 0.726 }));
        batch.addRow(new DataList(new double[]{ 0.727 }));
        batch.addRow(new DataList(new double[]{ 0.728 }));
        batch.addRow(new DataList(new double[]{ 0.729 }));
        batch.addRow(new DataList(new double[]{ 0.73 }));
        batch.addRow(new DataList(new double[]{ 0.731 }));
        batch.addRow(new DataList(new double[]{ 0.732 }));
        batch.addRow(new DataList(new double[]{ 0.733 }));
        batch.addRow(new DataList(new double[]{ 0.734 }));
        batch.addRow(new DataList(new double[]{ 0.735 }));
        batch.addRow(new DataList(new double[]{ 0.736 }));
        batch.addRow(new DataList(new double[]{ 0.737 }));
        batch.addRow(new DataList(new double[]{ 0.738 }));
        batch.addRow(new DataList(new double[]{ 0.739 }));
        batch.addRow(new DataList(new double[]{ 0.74 }));
        batch.addRow(new DataList(new double[]{ 0.741 }));
        batch.addRow(new DataList(new double[]{ 0.742 }));
        batch.addRow(new DataList(new double[]{ 0.743 }));
        batch.addRow(new DataList(new double[]{ 0.744 }));
        batch.addRow(new DataList(new double[]{ 0.745 }));
        batch.addRow(new DataList(new double[]{ 0.746 }));
        batch.addRow(new DataList(new double[]{ 0.747 }));
        batch.addRow(new DataList(new double[]{ 0.748 }));
        batch.addRow(new DataList(new double[]{ 0.749 }));
        batch.addRow(new DataList(new double[]{ 0.75 }));
        batch.addRow(new DataList(new double[]{ 0.751 }));
        batch.addRow(new DataList(new double[]{ 0.752 }));
        batch.addRow(new DataList(new double[]{ 0.753 }));
        batch.addRow(new DataList(new double[]{ 0.754 }));
        batch.addRow(new DataList(new double[]{ 0.755 }));
        batch.addRow(new DataList(new double[]{ 0.756 }));
        batch.addRow(new DataList(new double[]{ 0.757 }));
        batch.addRow(new DataList(new double[]{ 0.758 }));
        batch.addRow(new DataList(new double[]{ 0.759 }));
        batch.addRow(new DataList(new double[]{ 0.76 }));
        batch.addRow(new DataList(new double[]{ 0.761 }));
        batch.addRow(new DataList(new double[]{ 0.762 }));
        batch.addRow(new DataList(new double[]{ 0.763 }));
        batch.addRow(new DataList(new double[]{ 0.764 }));
        batch.addRow(new DataList(new double[]{ 0.765 }));
        batch.addRow(new DataList(new double[]{ 0.766 }));
        batch.addRow(new DataList(new double[]{ 0.767 }));
        batch.addRow(new DataList(new double[]{ 0.768 }));
        batch.addRow(new DataList(new double[]{ 0.769 }));
        batch.addRow(new DataList(new double[]{ 0.77 }));
        batch.addRow(new DataList(new double[]{ 0.771 }));
        batch.addRow(new DataList(new double[]{ 0.772 }));
        batch.addRow(new DataList(new double[]{ 0.773 }));
        batch.addRow(new DataList(new double[]{ 0.774 }));
        batch.addRow(new DataList(new double[]{ 0.775 }));
        batch.addRow(new DataList(new double[]{ 0.776 }));
        batch.addRow(new DataList(new double[]{ 0.777 }));
        batch.addRow(new DataList(new double[]{ 0.778 }));
        batch.addRow(new DataList(new double[]{ 0.779 }));
        batch.addRow(new DataList(new double[]{ 0.78 }));
        batch.addRow(new DataList(new double[]{ 0.781 }));
        batch.addRow(new DataList(new double[]{ 0.782 }));
        batch.addRow(new DataList(new double[]{ 0.783 }));
        batch.addRow(new DataList(new double[]{ 0.784 }));
        batch.addRow(new DataList(new double[]{ 0.785 }));
        batch.addRow(new DataList(new double[]{ 0.786 }));
        batch.addRow(new DataList(new double[]{ 0.787 }));
        batch.addRow(new DataList(new double[]{ 0.788 }));
        batch.addRow(new DataList(new double[]{ 0.789 }));
        batch.addRow(new DataList(new double[]{ 0.79 }));
        batch.addRow(new DataList(new double[]{ 0.791 }));
        batch.addRow(new DataList(new double[]{ 0.792 }));
        batch.addRow(new DataList(new double[]{ 0.793 }));
        batch.addRow(new DataList(new double[]{ 0.794 }));
        batch.addRow(new DataList(new double[]{ 0.795 }));
        batch.addRow(new DataList(new double[]{ 0.796 }));
        batch.addRow(new DataList(new double[]{ 0.797 }));
        batch.addRow(new DataList(new double[]{ 0.798 }));
        batch.addRow(new DataList(new double[]{ 0.799 }));
        batch.addRow(new DataList(new double[]{ 0.8 }));
        batch.addRow(new DataList(new double[]{ 0.801 }));
        batch.addRow(new DataList(new double[]{ 0.802 }));
        batch.addRow(new DataList(new double[]{ 0.803 }));
        batch.addRow(new DataList(new double[]{ 0.804 }));
        batch.addRow(new DataList(new double[]{ 0.805 }));
        batch.addRow(new DataList(new double[]{ 0.806 }));
        batch.addRow(new DataList(new double[]{ 0.807 }));
        batch.addRow(new DataList(new double[]{ 0.808 }));
        batch.addRow(new DataList(new double[]{ 0.809 }));
        batch.addRow(new DataList(new double[]{ 0.81 }));
        batch.addRow(new DataList(new double[]{ 0.811 }));
        batch.addRow(new DataList(new double[]{ 0.812 }));
        batch.addRow(new DataList(new double[]{ 0.813 }));
        batch.addRow(new DataList(new double[]{ 0.814 }));
        batch.addRow(new DataList(new double[]{ 0.815 }));
        batch.addRow(new DataList(new double[]{ 0.816 }));
        batch.addRow(new DataList(new double[]{ 0.817 }));
        batch.addRow(new DataList(new double[]{ 0.818 }));
        batch.addRow(new DataList(new double[]{ 0.819 }));
        batch.addRow(new DataList(new double[]{ 0.82 }));
        batch.addRow(new DataList(new double[]{ 0.821 }));
        batch.addRow(new DataList(new double[]{ 0.822 }));
        batch.addRow(new DataList(new double[]{ 0.823 }));
        batch.addRow(new DataList(new double[]{ 0.824 }));
        batch.addRow(new DataList(new double[]{ 0.825 }));
        batch.addRow(new DataList(new double[]{ 0.826 }));
        batch.addRow(new DataList(new double[]{ 0.827 }));
        batch.addRow(new DataList(new double[]{ 0.828 }));
        batch.addRow(new DataList(new double[]{ 0.829 }));
        batch.addRow(new DataList(new double[]{ 0.83 }));
        batch.addRow(new DataList(new double[]{ 0.831 }));
        batch.addRow(new DataList(new double[]{ 0.832 }));
        batch.addRow(new DataList(new double[]{ 0.833 }));
        batch.addRow(new DataList(new double[]{ 0.834 }));
        batch.addRow(new DataList(new double[]{ 0.835 }));
        batch.addRow(new DataList(new double[]{ 0.836 }));
        batch.addRow(new DataList(new double[]{ 0.837 }));
        batch.addRow(new DataList(new double[]{ 0.838 }));
        batch.addRow(new DataList(new double[]{ 0.839 }));
        batch.addRow(new DataList(new double[]{ 0.84 }));
        batch.addRow(new DataList(new double[]{ 0.841 }));
        batch.addRow(new DataList(new double[]{ 0.842 }));
        batch.addRow(new DataList(new double[]{ 0.843 }));
        batch.addRow(new DataList(new double[]{ 0.844 }));
        batch.addRow(new DataList(new double[]{ 0.845 }));
        batch.addRow(new DataList(new double[]{ 0.846 }));
        batch.addRow(new DataList(new double[]{ 0.847 }));
        batch.addRow(new DataList(new double[]{ 0.848 }));
        batch.addRow(new DataList(new double[]{ 0.849 }));
        batch.addRow(new DataList(new double[]{ 0.85 }));
        batch.addRow(new DataList(new double[]{ 0.851 }));
        batch.addRow(new DataList(new double[]{ 0.852 }));
        batch.addRow(new DataList(new double[]{ 0.853 }));
        batch.addRow(new DataList(new double[]{ 0.854 }));
        batch.addRow(new DataList(new double[]{ 0.855 }));
        batch.addRow(new DataList(new double[]{ 0.856 }));
        batch.addRow(new DataList(new double[]{ 0.857 }));
        batch.addRow(new DataList(new double[]{ 0.858 }));
        batch.addRow(new DataList(new double[]{ 0.859 }));
        batch.addRow(new DataList(new double[]{ 0.86 }));
        batch.addRow(new DataList(new double[]{ 0.861 }));
        batch.addRow(new DataList(new double[]{ 0.862 }));
        batch.addRow(new DataList(new double[]{ 0.863 }));
        batch.addRow(new DataList(new double[]{ 0.864 }));
        batch.addRow(new DataList(new double[]{ 0.865 }));
        batch.addRow(new DataList(new double[]{ 0.866 }));
        batch.addRow(new DataList(new double[]{ 0.867 }));
        batch.addRow(new DataList(new double[]{ 0.868 }));
        batch.addRow(new DataList(new double[]{ 0.869 }));
        batch.addRow(new DataList(new double[]{ 0.87 }));
        batch.addRow(new DataList(new double[]{ 0.871 }));
        batch.addRow(new DataList(new double[]{ 0.872 }));
        batch.addRow(new DataList(new double[]{ 0.873 }));
        batch.addRow(new DataList(new double[]{ 0.874 }));
        batch.addRow(new DataList(new double[]{ 0.875 }));
        batch.addRow(new DataList(new double[]{ 0.876 }));
        batch.addRow(new DataList(new double[]{ 0.877 }));
        batch.addRow(new DataList(new double[]{ 0.878 }));
        batch.addRow(new DataList(new double[]{ 0.879 }));
        batch.addRow(new DataList(new double[]{ 0.88 }));
        batch.addRow(new DataList(new double[]{ 0.881 }));
        batch.addRow(new DataList(new double[]{ 0.882 }));
        batch.addRow(new DataList(new double[]{ 0.883 }));
        batch.addRow(new DataList(new double[]{ 0.884 }));
        batch.addRow(new DataList(new double[]{ 0.885 }));
        batch.addRow(new DataList(new double[]{ 0.886 }));
        batch.addRow(new DataList(new double[]{ 0.887 }));
        batch.addRow(new DataList(new double[]{ 0.888 }));
        batch.addRow(new DataList(new double[]{ 0.889 }));
        batch.addRow(new DataList(new double[]{ 0.89 }));
        batch.addRow(new DataList(new double[]{ 0.891 }));
        batch.addRow(new DataList(new double[]{ 0.892 }));
        batch.addRow(new DataList(new double[]{ 0.893 }));
        batch.addRow(new DataList(new double[]{ 0.894 }));
        batch.addRow(new DataList(new double[]{ 0.895 }));
        batch.addRow(new DataList(new double[]{ 0.896 }));
        batch.addRow(new DataList(new double[]{ 0.897 }));
        batch.addRow(new DataList(new double[]{ 0.898 }));
        batch.addRow(new DataList(new double[]{ 0.899 }));
        batch.addRow(new DataList(new double[]{ 0.9 }));
        batch.addRow(new DataList(new double[]{ 0.901 }));
        batch.addRow(new DataList(new double[]{ 0.902 }));
        batch.addRow(new DataList(new double[]{ 0.903 }));
        batch.addRow(new DataList(new double[]{ 0.904 }));
        batch.addRow(new DataList(new double[]{ 0.905 }));
        batch.addRow(new DataList(new double[]{ 0.906 }));
        batch.addRow(new DataList(new double[]{ 0.907 }));
        batch.addRow(new DataList(new double[]{ 0.908 }));
        batch.addRow(new DataList(new double[]{ 0.909 }));
        batch.addRow(new DataList(new double[]{ 0.91 }));
        batch.addRow(new DataList(new double[]{ 0.911 }));
        batch.addRow(new DataList(new double[]{ 0.912 }));
        batch.addRow(new DataList(new double[]{ 0.913 }));
        batch.addRow(new DataList(new double[]{ 0.914 }));
        batch.addRow(new DataList(new double[]{ 0.915 }));
        batch.addRow(new DataList(new double[]{ 0.916 }));
        batch.addRow(new DataList(new double[]{ 0.917 }));
        batch.addRow(new DataList(new double[]{ 0.918 }));
        batch.addRow(new DataList(new double[]{ 0.919 }));
        batch.addRow(new DataList(new double[]{ 0.92 }));
        batch.addRow(new DataList(new double[]{ 0.921 }));
        batch.addRow(new DataList(new double[]{ 0.922 }));
        batch.addRow(new DataList(new double[]{ 0.923 }));
        batch.addRow(new DataList(new double[]{ 0.924 }));
        batch.addRow(new DataList(new double[]{ 0.925 }));
        batch.addRow(new DataList(new double[]{ 0.926 }));
        batch.addRow(new DataList(new double[]{ 0.927 }));
        batch.addRow(new DataList(new double[]{ 0.928 }));
        batch.addRow(new DataList(new double[]{ 0.929 }));
        batch.addRow(new DataList(new double[]{ 0.93 }));
        batch.addRow(new DataList(new double[]{ 0.931 }));
        batch.addRow(new DataList(new double[]{ 0.932 }));
        batch.addRow(new DataList(new double[]{ 0.933 }));
        batch.addRow(new DataList(new double[]{ 0.934 }));
        batch.addRow(new DataList(new double[]{ 0.935 }));
        batch.addRow(new DataList(new double[]{ 0.936 }));
        batch.addRow(new DataList(new double[]{ 0.937 }));
        batch.addRow(new DataList(new double[]{ 0.938 }));
        batch.addRow(new DataList(new double[]{ 0.939 }));
        batch.addRow(new DataList(new double[]{ 0.94 }));
        batch.addRow(new DataList(new double[]{ 0.941 }));
        batch.addRow(new DataList(new double[]{ 0.942 }));
        batch.addRow(new DataList(new double[]{ 0.943 }));
        batch.addRow(new DataList(new double[]{ 0.944 }));
        batch.addRow(new DataList(new double[]{ 0.945 }));
        batch.addRow(new DataList(new double[]{ 0.946 }));
        batch.addRow(new DataList(new double[]{ 0.947 }));
        batch.addRow(new DataList(new double[]{ 0.948 }));
        batch.addRow(new DataList(new double[]{ 0.949 }));
        batch.addRow(new DataList(new double[]{ 0.95 }));
        batch.addRow(new DataList(new double[]{ 0.951 }));
        batch.addRow(new DataList(new double[]{ 0.952 }));
        batch.addRow(new DataList(new double[]{ 0.953 }));
        batch.addRow(new DataList(new double[]{ 0.954 }));
        batch.addRow(new DataList(new double[]{ 0.955 }));
        batch.addRow(new DataList(new double[]{ 0.956 }));
        batch.addRow(new DataList(new double[]{ 0.957 }));
        batch.addRow(new DataList(new double[]{ 0.958 }));
        batch.addRow(new DataList(new double[]{ 0.959 }));
        batch.addRow(new DataList(new double[]{ 0.96 }));
        batch.addRow(new DataList(new double[]{ 0.961 }));
        batch.addRow(new DataList(new double[]{ 0.962 }));
        batch.addRow(new DataList(new double[]{ 0.963 }));
        batch.addRow(new DataList(new double[]{ 0.964 }));
        batch.addRow(new DataList(new double[]{ 0.965 }));
        batch.addRow(new DataList(new double[]{ 0.966 }));
        batch.addRow(new DataList(new double[]{ 0.967 }));
        batch.addRow(new DataList(new double[]{ 0.968 }));
        batch.addRow(new DataList(new double[]{ 0.969 }));
        batch.addRow(new DataList(new double[]{ 0.97 }));
        batch.addRow(new DataList(new double[]{ 0.971 }));
        batch.addRow(new DataList(new double[]{ 0.972 }));
        batch.addRow(new DataList(new double[]{ 0.973 }));
        batch.addRow(new DataList(new double[]{ 0.974 }));
        batch.addRow(new DataList(new double[]{ 0.975 }));
        batch.addRow(new DataList(new double[]{ 0.976 }));
        batch.addRow(new DataList(new double[]{ 0.977 }));
        batch.addRow(new DataList(new double[]{ 0.978 }));
        batch.addRow(new DataList(new double[]{ 0.979 }));
        batch.addRow(new DataList(new double[]{ 0.98 }));
        batch.addRow(new DataList(new double[]{ 0.981 }));
        batch.addRow(new DataList(new double[]{ 0.982 }));
        batch.addRow(new DataList(new double[]{ 0.983 }));
        batch.addRow(new DataList(new double[]{ 0.984 }));
        batch.addRow(new DataList(new double[]{ 0.985 }));
        batch.addRow(new DataList(new double[]{ 0.986 }));
        batch.addRow(new DataList(new double[]{ 0.987 }));
        batch.addRow(new DataList(new double[]{ 0.988 }));
        batch.addRow(new DataList(new double[]{ 0.989 }));
        batch.addRow(new DataList(new double[]{ 0.99 }));
        batch.addRow(new DataList(new double[]{ 0.991 }));
        batch.addRow(new DataList(new double[]{ 0.992 }));
        batch.addRow(new DataList(new double[]{ 0.993 }));
        batch.addRow(new DataList(new double[]{ 0.994 }));
        batch.addRow(new DataList(new double[]{ 0.995 }));
        batch.addRow(new DataList(new double[]{ 0.996 }));
        batch.addRow(new DataList(new double[]{ 0.997 }));
        batch.addRow(new DataList(new double[]{ 0.998 }));
        batch.addRow(new DataList(new double[]{ 0.999 }));

        return batch;
    }

    public static Batch getTestingTargetBatch() {
        final Batch batch = new Batch();

        batch.addRow(new DataList(new double[]{ 0.0 }));
        batch.addRow(new DataList(new double[]{ 0.006283143965558951 }));
        batch.addRow(new DataList(new double[]{ 0.012566039883352607 }));
        batch.addRow(new DataList(new double[]{ 0.018848439715408175 }));
        batch.addRow(new DataList(new double[]{ 0.02513009544333748 }));
        batch.addRow(new DataList(new double[]{ 0.03141075907812829 }));
        batch.addRow(new DataList(new double[]{ 0.03769018266993454 }));
        batch.addRow(new DataList(new double[]{ 0.0439681183178649 }));
        batch.addRow(new DataList(new double[]{ 0.050244318179769556 }));
        batch.addRow(new DataList(new double[]{ 0.05651853448202452 }));
        batch.addRow(new DataList(new double[]{ 0.06279051952931337 }));
        batch.addRow(new DataList(new double[]{ 0.06906002571440578 }));
        batch.addRow(new DataList(new double[]{ 0.07532680552793272 }));
        batch.addRow(new DataList(new double[]{ 0.08159061156815754 }));
        batch.addRow(new DataList(new double[]{ 0.08785119655074317 }));
        batch.addRow(new DataList(new double[]{ 0.09410831331851431 }));
        batch.addRow(new DataList(new double[]{ 0.1003617148512149 }));
        batch.addRow(new DataList(new double[]{ 0.10661115427525991 }));
        batch.addRow(new DataList(new double[]{ 0.11285638487348167 }));
        batch.addRow(new DataList(new double[]{ 0.11909716009486973 }));
        batch.addRow(new DataList(new double[]{ 0.12533323356430426 }));
        batch.addRow(new DataList(new double[]{ 0.1315643590922825 }));
        batch.addRow(new DataList(new double[]{ 0.13779029068463805 }));
        batch.addRow(new DataList(new double[]{ 0.14401078255225216 }));
        batch.addRow(new DataList(new double[]{ 0.15022558912075706 }));
        batch.addRow(new DataList(new double[]{ 0.15643446504023087 }));
        batch.addRow(new DataList(new double[]{ 0.16263716519488358 }));
        batch.addRow(new DataList(new double[]{ 0.16883344471273387 }));
        batch.addRow(new DataList(new double[]{ 0.17502305897527604 }));
        batch.addRow(new DataList(new double[]{ 0.18120576362713736 }));
        batch.addRow(new DataList(new double[]{ 0.1873813145857246 }));
        batch.addRow(new DataList(new double[]{ 0.19354946805086023 }));
        batch.addRow(new DataList(new double[]{ 0.19970998051440703 }));
        batch.addRow(new DataList(new double[]{ 0.20586260876988133 }));
        batch.addRow(new DataList(new double[]{ 0.21200710992205463 }));
        batch.addRow(new DataList(new double[]{ 0.21814324139654256 }));
        batch.addRow(new DataList(new double[]{ 0.22427076094938114 }));
        batch.addRow(new DataList(new double[]{ 0.23038942667659057 }));
        batch.addRow(new DataList(new double[]{ 0.23649899702372468 }));
        batch.addRow(new DataList(new double[]{ 0.2425992307954074 }));
        batch.addRow(new DataList(new double[]{ 0.2486898871648548 }));
        batch.addRow(new DataList(new double[]{ 0.25477072568338216 }));
        batch.addRow(new DataList(new double[]{ 0.26084150628989694 }));
        batch.addRow(new DataList(new double[]{ 0.2669019893203755 }));
        batch.addRow(new DataList(new double[]{ 0.27295193551732516 }));
        batch.addRow(new DataList(new double[]{ 0.2789911060392293 }));
        batch.addRow(new DataList(new double[]{ 0.2850192624699761 }));
        batch.addRow(new DataList(new double[]{ 0.2910361668282718 }));
        batch.addRow(new DataList(new double[]{ 0.2970415815770349 }));
        batch.addRow(new DataList(new double[]{ 0.30303526963277394 }));
        batch.addRow(new DataList(new double[]{ 0.3090169943749474 }));
        batch.addRow(new DataList(new double[]{ 0.3149865196553048 }));
        batch.addRow(new DataList(new double[]{ 0.3209436098072095 }));
        batch.addRow(new DataList(new double[]{ 0.32688802965494246 }));
        batch.addRow(new DataList(new double[]{ 0.3328195445229866 }));
        batch.addRow(new DataList(new double[]{ 0.33873792024529137 }));
        batch.addRow(new DataList(new double[]{ 0.34464292317451706 }));
        batch.addRow(new DataList(new double[]{ 0.350534320191259 }));
        batch.addRow(new DataList(new double[]{ 0.35641187871325075 }));
        batch.addRow(new DataList(new double[]{ 0.36227536670454563 }));
        batch.addRow(new DataList(new double[]{ 0.3681245526846779 }));
        batch.addRow(new DataList(new double[]{ 0.3739592057378004 }));
        batch.addRow(new DataList(new double[]{ 0.37977909552180106 }));
        batch.addRow(new DataList(new double[]{ 0.38558399227739654 }));
        batch.addRow(new DataList(new double[]{ 0.3913736668372024 }));
        batch.addRow(new DataList(new double[]{ 0.3971478906347806 }));
        batch.addRow(new DataList(new double[]{ 0.40290643571366264 }));
        batch.addRow(new DataList(new double[]{ 0.40864907473634904 }));
        batch.addRow(new DataList(new double[]{ 0.41437558099328414 }));
        batch.addRow(new DataList(new double[]{ 0.42008572841180625 }));
        batch.addRow(new DataList(new double[]{ 0.4257792915650727 }));
        batch.addRow(new DataList(new double[]{ 0.4314560456809589 }));
        batch.addRow(new DataList(new double[]{ 0.4371157666509328 }));
        batch.addRow(new DataList(new double[]{ 0.44275823103890144 }));
        batch.addRow(new DataList(new double[]{ 0.44838321609003223 }));
        batch.addRow(new DataList(new double[]{ 0.45399049973954675 }));
        batch.addRow(new DataList(new double[]{ 0.4595798606214878 }));
        batch.addRow(new DataList(new double[]{ 0.4651510780774583 }));
        batch.addRow(new DataList(new double[]{ 0.4707039321653325 }));
        batch.addRow(new DataList(new double[]{ 0.47623820366793906 }));
        batch.addRow(new DataList(new double[]{ 0.4817536741017153 }));
        batch.addRow(new DataList(new double[]{ 0.4872501257253323 }));
        batch.addRow(new DataList(new double[]{ 0.49272734154829156 }));
        batch.addRow(new DataList(new double[]{ 0.4981851053394908 }));
        batch.addRow(new DataList(new double[]{ 0.5036232016357608 }));
        batch.addRow(new DataList(new double[]{ 0.5090414157503713 }));
        batch.addRow(new DataList(new double[]{ 0.5144395337815063 }));
        batch.addRow(new DataList(new double[]{ 0.5198173426207094 }));
        batch.addRow(new DataList(new double[]{ 0.5251746299612956 }));
        batch.addRow(new DataList(new double[]{ 0.530511184306734 }));
        batch.addRow(new DataList(new double[]{ 0.5358267949789967 }));
        batch.addRow(new DataList(new double[]{ 0.5411212521268758 }));
        batch.addRow(new DataList(new double[]{ 0.5463943467342691 }));
        batch.addRow(new DataList(new double[]{ 0.5516458706284302 }));
        batch.addRow(new DataList(new double[]{ 0.556875616488188 }));
        batch.addRow(new DataList(new double[]{ 0.5620833778521306 }));
        batch.addRow(new DataList(new double[]{ 0.5672689491267565 }));
        batch.addRow(new DataList(new double[]{ 0.5724321255945909 }));
        batch.addRow(new DataList(new double[]{ 0.5775727034222675 }));
        batch.addRow(new DataList(new double[]{ 0.5826904796685761 }));
        batch.addRow(new DataList(new double[]{ 0.5877852522924731 }));
        batch.addRow(new DataList(new double[]{ 0.5928568201610592 }));
        batch.addRow(new DataList(new double[]{ 0.5979049830575188 }));
        batch.addRow(new DataList(new double[]{ 0.6029295416890247 }));
        batch.addRow(new DataList(new double[]{ 0.6079302976946054 }));
        batch.addRow(new DataList(new double[]{ 0.6129070536529764 }));
        batch.addRow(new DataList(new double[]{ 0.6178596130903343 }));
        batch.addRow(new DataList(new double[]{ 0.6227877804881126 }));
        batch.addRow(new DataList(new double[]{ 0.6276913612907005 }));
        batch.addRow(new DataList(new double[]{ 0.6325701619131244 }));
        batch.addRow(new DataList(new double[]{ 0.6374239897486896 }));
        batch.addRow(new DataList(new double[]{ 0.6422526531765844 }));
        batch.addRow(new DataList(new double[]{ 0.6470559615694442 }));
        batch.addRow(new DataList(new double[]{ 0.6518337253008788 }));
        batch.addRow(new DataList(new double[]{ 0.6565857557529565 }));
        batch.addRow(new DataList(new double[]{ 0.6613118653236518 }));
        batch.addRow(new DataList(new double[]{ 0.6660118674342517 }));
        batch.addRow(new DataList(new double[]{ 0.67068557653672 }));
        batch.addRow(new DataList(new double[]{ 0.6753328081210244 }));
        batch.addRow(new DataList(new double[]{ 0.6799533787224191 }));
        batch.addRow(new DataList(new double[]{ 0.6845471059286886 }));
        batch.addRow(new DataList(new double[]{ 0.6891138083873485 }));
        batch.addRow(new DataList(new double[]{ 0.6936533058128049 }));
        batch.addRow(new DataList(new double[]{ 0.6981654189934726 }));
        batch.addRow(new DataList(new double[]{ 0.7026499697988492 }));
        batch.addRow(new DataList(new double[]{ 0.7071067811865476 }));
        batch.addRow(new DataList(new double[]{ 0.7115356772092853 }));
        batch.addRow(new DataList(new double[]{ 0.7159364830218311 }));
        batch.addRow(new DataList(new double[]{ 0.7203090248879069 }));
        batch.addRow(new DataList(new double[]{ 0.7246531301870466 }));
        batch.addRow(new DataList(new double[]{ 0.7289686274214116 }));
        batch.addRow(new DataList(new double[]{ 0.7332553462225601 }));
        batch.addRow(new DataList(new double[]{ 0.7375131173581739 }));
        batch.addRow(new DataList(new double[]{ 0.7417417727387392 }));
        batch.addRow(new DataList(new double[]{ 0.7459411454241821 }));
        batch.addRow(new DataList(new double[]{ 0.7501110696304596 }));
        batch.addRow(new DataList(new double[]{ 0.7542513807361038 }));
        batch.addRow(new DataList(new double[]{ 0.7583619152887219 }));
        batch.addRow(new DataList(new double[]{ 0.7624425110114479 }));
        batch.addRow(new DataList(new double[]{ 0.7664930068093498 }));
        batch.addRow(new DataList(new double[]{ 0.7705132427757893 }));
        batch.addRow(new DataList(new double[]{ 0.7745030601987338 }));
        batch.addRow(new DataList(new double[]{ 0.7784623015670233 }));
        batch.addRow(new DataList(new double[]{ 0.7823908105765881 }));
        batch.addRow(new DataList(new double[]{ 0.7862884321366188 }));
        batch.addRow(new DataList(new double[]{ 0.7901550123756903 }));
        batch.addRow(new DataList(new double[]{ 0.7939903986478353 }));
        batch.addRow(new DataList(new double[]{ 0.797794439538571 }));
        batch.addRow(new DataList(new double[]{ 0.8015669848708765 }));
        batch.addRow(new DataList(new double[]{ 0.8053078857111219 }));
        batch.addRow(new DataList(new double[]{ 0.8090169943749475 }));
        batch.addRow(new DataList(new double[]{ 0.812694164433094 }));
        batch.addRow(new DataList(new double[]{ 0.8163392507171839 }));
        batch.addRow(new DataList(new double[]{ 0.8199521093254523 }));
        batch.addRow(new DataList(new double[]{ 0.8235325976284275 }));
        batch.addRow(new DataList(new double[]{ 0.8270805742745618 }));
        batch.addRow(new DataList(new double[]{ 0.8305958991958126 }));
        batch.addRow(new DataList(new double[]{ 0.8340784336131711 }));
        batch.addRow(new DataList(new double[]{ 0.8375280400421417 }));
        batch.addRow(new DataList(new double[]{ 0.840944582298169 }));
        batch.addRow(new DataList(new double[]{ 0.8443279255020151 }));
        batch.addRow(new DataList(new double[]{ 0.8476779360850831 }));
        batch.addRow(new DataList(new double[]{ 0.8509944817946918 }));
        batch.addRow(new DataList(new double[]{ 0.8542774316992952 }));
        batch.addRow(new DataList(new double[]{ 0.8575266561936523 }));
        batch.addRow(new DataList(new double[]{ 0.8607420270039436 }));
        batch.addRow(new DataList(new double[]{ 0.8639234171928353 }));
        batch.addRow(new DataList(new double[]{ 0.86707070116449 }));
        batch.addRow(new DataList(new double[]{ 0.8701837546695257 }));
        batch.addRow(new DataList(new double[]{ 0.8732624548099202 }));
        batch.addRow(new DataList(new double[]{ 0.8763066800438637 }));
        batch.addRow(new DataList(new double[]{ 0.8793163101905562 }));
        batch.addRow(new DataList(new double[]{ 0.8822912264349532 }));
        batch.addRow(new DataList(new double[]{ 0.8852313113324551 }));
        batch.addRow(new DataList(new double[]{ 0.8881364488135445 }));
        batch.addRow(new DataList(new double[]{ 0.8910065241883678 }));
        batch.addRow(new DataList(new double[]{ 0.8938414241512637 }));
        batch.addRow(new DataList(new double[]{ 0.8966410367852358 }));
        batch.addRow(new DataList(new double[]{ 0.899405251566371 }));
        batch.addRow(new DataList(new double[]{ 0.9021339593682028 }));
        batch.addRow(new DataList(new double[]{ 0.9048270524660196 }));
        batch.addRow(new DataList(new double[]{ 0.9074844245411169 }));
        batch.addRow(new DataList(new double[]{ 0.9101059706849957 }));
        batch.addRow(new DataList(new double[]{ 0.9126915874035028 }));
        batch.addRow(new DataList(new double[]{ 0.9152411726209175 }));
        batch.addRow(new DataList(new double[]{ 0.9177546256839811 }));
        batch.addRow(new DataList(new double[]{ 0.9202318473658703 }));
        batch.addRow(new DataList(new double[]{ 0.9226727398701148 }));
        batch.addRow(new DataList(new double[]{ 0.925077206834458 }));
        batch.addRow(new DataList(new double[]{ 0.9274451533346614 }));
        batch.addRow(new DataList(new double[]{ 0.9297764858882513 }));
        batch.addRow(new DataList(new double[]{ 0.932071112458211 }));
        batch.addRow(new DataList(new double[]{ 0.934328942456612 }));
        batch.addRow(new DataList(new double[]{ 0.9365498867481924 }));
        batch.addRow(new DataList(new double[]{ 0.9387338576538741 }));
        batch.addRow(new DataList(new double[]{ 0.9408807689542255 }));
        batch.addRow(new DataList(new double[]{ 0.9429905358928644 }));
        batch.addRow(new DataList(new double[]{ 0.9450630751798048 }));
        batch.addRow(new DataList(new double[]{ 0.9470983049947443 }));
        batch.addRow(new DataList(new double[]{ 0.9490961449902946 }));
        batch.addRow(new DataList(new double[]{ 0.9510565162951535 }));
        batch.addRow(new DataList(new double[]{ 0.9529793415172189 }));
        batch.addRow(new DataList(new double[]{ 0.954864544746643 }));
        batch.addRow(new DataList(new double[]{ 0.9567120515588305 }));
        batch.addRow(new DataList(new double[]{ 0.9585217890173758 }));
        batch.addRow(new DataList(new double[]{ 0.960293685676943 }));
        batch.addRow(new DataList(new double[]{ 0.9620276715860858 }));
        batch.addRow(new DataList(new double[]{ 0.9637236782900097 }));
        batch.addRow(new DataList(new double[]{ 0.9653816388332739 }));
        batch.addRow(new DataList(new double[]{ 0.967001487762435 }));
        batch.addRow(new DataList(new double[]{ 0.9685831611286311 }));
        batch.addRow(new DataList(new double[]{ 0.9701265964901058 }));
        batch.addRow(new DataList(new double[]{ 0.9716317329146739 }));
        batch.addRow(new DataList(new double[]{ 0.9730985109821265 }));
        batch.addRow(new DataList(new double[]{ 0.9745268727865771 }));
        batch.addRow(new DataList(new double[]{ 0.9759167619387473 }));
        batch.addRow(new DataList(new double[]{ 0.9772681235681935 }));
        batch.addRow(new DataList(new double[]{ 0.9785809043254721 }));
        batch.addRow(new DataList(new double[]{ 0.9798550523842469 }));
        batch.addRow(new DataList(new double[]{ 0.9810905174433341 }));
        batch.addRow(new DataList(new double[]{ 0.9822872507286886 }));
        batch.addRow(new DataList(new double[]{ 0.9834452049953297 }));
        batch.addRow(new DataList(new double[]{ 0.9845643345292053 }));
        batch.addRow(new DataList(new double[]{ 0.985644595148998 }));
        batch.addRow(new DataList(new double[]{ 0.986685944207868 }));
        batch.addRow(new DataList(new double[]{ 0.9876883405951378 }));
        batch.addRow(new DataList(new double[]{ 0.9886517447379141 }));
        batch.addRow(new DataList(new double[]{ 0.9895761186026509 }));
        batch.addRow(new DataList(new double[]{ 0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ 0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ 0.9921147013144779 }));
        batch.addRow(new DataList(new double[]{ 0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ 0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ 0.9943007903969989 }));
        batch.addRow(new DataList(new double[]{ 0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ 0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ 0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ 0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ 0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ 0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ 0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ 0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ 0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ 0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ 0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ 0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ 0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ 0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ 0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ 0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ 1.0 }));
        batch.addRow(new DataList(new double[]{ 0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ 0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ 0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ 0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ 0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ 0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ 0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ 0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ 0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ 0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ 0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ 0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ 0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ 0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ 0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ 0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ 0.9943007903969989 }));
        batch.addRow(new DataList(new double[]{ 0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ 0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ 0.9921147013144778 }));
        batch.addRow(new DataList(new double[]{ 0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ 0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ 0.9895761186026509 }));
        batch.addRow(new DataList(new double[]{ 0.988651744737914 }));
        batch.addRow(new DataList(new double[]{ 0.9876883405951377 }));
        batch.addRow(new DataList(new double[]{ 0.986685944207868 }));
        batch.addRow(new DataList(new double[]{ 0.985644595148998 }));
        batch.addRow(new DataList(new double[]{ 0.9845643345292053 }));
        batch.addRow(new DataList(new double[]{ 0.9834452049953296 }));
        batch.addRow(new DataList(new double[]{ 0.9822872507286886 }));
        batch.addRow(new DataList(new double[]{ 0.9810905174433341 }));
        batch.addRow(new DataList(new double[]{ 0.9798550523842469 }));
        batch.addRow(new DataList(new double[]{ 0.9785809043254722 }));
        batch.addRow(new DataList(new double[]{ 0.9772681235681935 }));
        batch.addRow(new DataList(new double[]{ 0.9759167619387474 }));
        batch.addRow(new DataList(new double[]{ 0.9745268727865772 }));
        batch.addRow(new DataList(new double[]{ 0.9730985109821266 }));
        batch.addRow(new DataList(new double[]{ 0.971631732914674 }));
        batch.addRow(new DataList(new double[]{ 0.9701265964901059 }));
        batch.addRow(new DataList(new double[]{ 0.9685831611286312 }));
        batch.addRow(new DataList(new double[]{ 0.9670014877624351 }));
        batch.addRow(new DataList(new double[]{ 0.965381638833274 }));
        batch.addRow(new DataList(new double[]{ 0.9637236782900097 }));
        batch.addRow(new DataList(new double[]{ 0.9620276715860859 }));
        batch.addRow(new DataList(new double[]{ 0.9602936856769431 }));
        batch.addRow(new DataList(new double[]{ 0.958521789017376 }));
        batch.addRow(new DataList(new double[]{ 0.9567120515588305 }));
        batch.addRow(new DataList(new double[]{ 0.9548645447466431 }));
        batch.addRow(new DataList(new double[]{ 0.9529793415172189 }));
        batch.addRow(new DataList(new double[]{ 0.9510565162951536 }));
        batch.addRow(new DataList(new double[]{ 0.9490961449902947 }));
        batch.addRow(new DataList(new double[]{ 0.9470983049947443 }));
        batch.addRow(new DataList(new double[]{ 0.9450630751798049 }));
        batch.addRow(new DataList(new double[]{ 0.9429905358928645 }));
        batch.addRow(new DataList(new double[]{ 0.9408807689542255 }));
        batch.addRow(new DataList(new double[]{ 0.9387338576538742 }));
        batch.addRow(new DataList(new double[]{ 0.9365498867481924 }));
        batch.addRow(new DataList(new double[]{ 0.9343289424566121 }));
        batch.addRow(new DataList(new double[]{ 0.932071112458211 }));
        batch.addRow(new DataList(new double[]{ 0.9297764858882515 }));
        batch.addRow(new DataList(new double[]{ 0.9274451533346614 }));
        batch.addRow(new DataList(new double[]{ 0.925077206834458 }));
        batch.addRow(new DataList(new double[]{ 0.9226727398701149 }));
        batch.addRow(new DataList(new double[]{ 0.9202318473658704 }));
        batch.addRow(new DataList(new double[]{ 0.9177546256839813 }));
        batch.addRow(new DataList(new double[]{ 0.9152411726209176 }));
        batch.addRow(new DataList(new double[]{ 0.9126915874035029 }));
        batch.addRow(new DataList(new double[]{ 0.9101059706849957 }));
        batch.addRow(new DataList(new double[]{ 0.9074844245411169 }));
        batch.addRow(new DataList(new double[]{ 0.9048270524660195 }));
        batch.addRow(new DataList(new double[]{ 0.9021339593682027 }));
        batch.addRow(new DataList(new double[]{ 0.8994052515663712 }));
        batch.addRow(new DataList(new double[]{ 0.896641036785236 }));
        batch.addRow(new DataList(new double[]{ 0.8938414241512639 }));
        batch.addRow(new DataList(new double[]{ 0.8910065241883679 }));
        batch.addRow(new DataList(new double[]{ 0.8881364488135446 }));
        batch.addRow(new DataList(new double[]{ 0.8852313113324553 }));
        batch.addRow(new DataList(new double[]{ 0.8822912264349533 }));
        batch.addRow(new DataList(new double[]{ 0.8793163101905562 }));
        batch.addRow(new DataList(new double[]{ 0.8763066800438635 }));
        batch.addRow(new DataList(new double[]{ 0.87326245480992 }));
        batch.addRow(new DataList(new double[]{ 0.8701837546695257 }));
        batch.addRow(new DataList(new double[]{ 0.8670707011644901 }));
        batch.addRow(new DataList(new double[]{ 0.8639234171928354 }));
        batch.addRow(new DataList(new double[]{ 0.8607420270039436 }));
        batch.addRow(new DataList(new double[]{ 0.8575266561936522 }));
        batch.addRow(new DataList(new double[]{ 0.8542774316992952 }));
        batch.addRow(new DataList(new double[]{ 0.8509944817946917 }));
        batch.addRow(new DataList(new double[]{ 0.8476779360850831 }));
        batch.addRow(new DataList(new double[]{ 0.844327925502015 }));
        batch.addRow(new DataList(new double[]{ 0.8409445822981692 }));
        batch.addRow(new DataList(new double[]{ 0.8375280400421418 }));
        batch.addRow(new DataList(new double[]{ 0.8340784336131711 }));
        batch.addRow(new DataList(new double[]{ 0.8305958991958129 }));
        batch.addRow(new DataList(new double[]{ 0.827080574274562 }));
        batch.addRow(new DataList(new double[]{ 0.8235325976284276 }));
        batch.addRow(new DataList(new double[]{ 0.8199521093254525 }));
        batch.addRow(new DataList(new double[]{ 0.816339250717184 }));
        batch.addRow(new DataList(new double[]{ 0.8126941644330941 }));
        batch.addRow(new DataList(new double[]{ 0.8090169943749475 }));
        batch.addRow(new DataList(new double[]{ 0.805307885711122 }));
        batch.addRow(new DataList(new double[]{ 0.8015669848708769 }));
        batch.addRow(new DataList(new double[]{ 0.7977944395385712 }));
        batch.addRow(new DataList(new double[]{ 0.7939903986478355 }));
        batch.addRow(new DataList(new double[]{ 0.7901550123756905 }));
        batch.addRow(new DataList(new double[]{ 0.786288432136619 }));
        batch.addRow(new DataList(new double[]{ 0.7823908105765882 }));
        batch.addRow(new DataList(new double[]{ 0.7784623015670235 }));
        batch.addRow(new DataList(new double[]{ 0.7745030601987338 }));
        batch.addRow(new DataList(new double[]{ 0.7705132427757893 }));
        batch.addRow(new DataList(new double[]{ 0.7664930068093498 }));
        batch.addRow(new DataList(new double[]{ 0.7624425110114481 }));
        batch.addRow(new DataList(new double[]{ 0.758361915288722 }));
        batch.addRow(new DataList(new double[]{ 0.754251380736104 }));
        batch.addRow(new DataList(new double[]{ 0.7501110696304596 }));
        batch.addRow(new DataList(new double[]{ 0.7459411454241822 }));
        batch.addRow(new DataList(new double[]{ 0.7417417727387393 }));
        batch.addRow(new DataList(new double[]{ 0.7375131173581739 }));
        batch.addRow(new DataList(new double[]{ 0.73325534622256 }));
        batch.addRow(new DataList(new double[]{ 0.7289686274214114 }));
        batch.addRow(new DataList(new double[]{ 0.7246531301870468 }));
        batch.addRow(new DataList(new double[]{ 0.720309024887907 }));
        batch.addRow(new DataList(new double[]{ 0.7159364830218313 }));
        batch.addRow(new DataList(new double[]{ 0.7115356772092855 }));
        batch.addRow(new DataList(new double[]{ 0.7071067811865476 }));
        batch.addRow(new DataList(new double[]{ 0.7026499697988492 }));
        batch.addRow(new DataList(new double[]{ 0.6981654189934726 }));
        batch.addRow(new DataList(new double[]{ 0.6936533058128049 }));
        batch.addRow(new DataList(new double[]{ 0.6891138083873484 }));
        batch.addRow(new DataList(new double[]{ 0.6845471059286888 }));
        batch.addRow(new DataList(new double[]{ 0.6799533787224193 }));
        batch.addRow(new DataList(new double[]{ 0.6753328081210246 }));
        batch.addRow(new DataList(new double[]{ 0.6706855765367201 }));
        batch.addRow(new DataList(new double[]{ 0.6660118674342517 }));
        batch.addRow(new DataList(new double[]{ 0.6613118653236518 }));
        batch.addRow(new DataList(new double[]{ 0.6565857557529564 }));
        batch.addRow(new DataList(new double[]{ 0.6518337253008787 }));
        batch.addRow(new DataList(new double[]{ 0.6470559615694442 }));
        batch.addRow(new DataList(new double[]{ 0.6422526531765845 }));
        batch.addRow(new DataList(new double[]{ 0.6374239897486899 }));
        batch.addRow(new DataList(new double[]{ 0.6325701619131245 }));
        batch.addRow(new DataList(new double[]{ 0.6276913612907006 }));
        batch.addRow(new DataList(new double[]{ 0.6227877804881126 }));
        batch.addRow(new DataList(new double[]{ 0.6178596130903343 }));
        batch.addRow(new DataList(new double[]{ 0.6129070536529764 }));
        batch.addRow(new DataList(new double[]{ 0.6079302976946053 }));
        batch.addRow(new DataList(new double[]{ 0.6029295416890246 }));
        batch.addRow(new DataList(new double[]{ 0.5979049830575187 }));
        batch.addRow(new DataList(new double[]{ 0.5928568201610593 }));
        batch.addRow(new DataList(new double[]{ 0.5877852522924732 }));
        batch.addRow(new DataList(new double[]{ 0.5826904796685761 }));
        batch.addRow(new DataList(new double[]{ 0.5775727034222676 }));
        batch.addRow(new DataList(new double[]{ 0.5724321255945908 }));
        batch.addRow(new DataList(new double[]{ 0.5672689491267564 }));
        batch.addRow(new DataList(new double[]{ 0.5620833778521305 }));
        batch.addRow(new DataList(new double[]{ 0.5568756164881878 }));
        batch.addRow(new DataList(new double[]{ 0.5516458706284304 }));
        batch.addRow(new DataList(new double[]{ 0.5463943467342692 }));
        batch.addRow(new DataList(new double[]{ 0.5411212521268759 }));
        batch.addRow(new DataList(new double[]{ 0.535826794978997 }));
        batch.addRow(new DataList(new double[]{ 0.5305111843067344 }));
        batch.addRow(new DataList(new double[]{ 0.525174629961296 }));
        batch.addRow(new DataList(new double[]{ 0.5198173426207098 }));
        batch.addRow(new DataList(new double[]{ 0.5144395337815066 }));
        batch.addRow(new DataList(new double[]{ 0.5090414157503714 }));
        batch.addRow(new DataList(new double[]{ 0.5036232016357609 }));
        batch.addRow(new DataList(new double[]{ 0.4981851053394909 }));
        batch.addRow(new DataList(new double[]{ 0.49272734154829156 }));
        batch.addRow(new DataList(new double[]{ 0.48725012572533266 }));
        batch.addRow(new DataList(new double[]{ 0.4817536741017156 }));
        batch.addRow(new DataList(new double[]{ 0.4762382036679394 }));
        batch.addRow(new DataList(new double[]{ 0.4707039321653328 }));
        batch.addRow(new DataList(new double[]{ 0.46515107807745854 }));
        batch.addRow(new DataList(new double[]{ 0.459579860621488 }));
        batch.addRow(new DataList(new double[]{ 0.45399049973954686 }));
        batch.addRow(new DataList(new double[]{ 0.4483832160900323 }));
        batch.addRow(new DataList(new double[]{ 0.44275823103890155 }));
        batch.addRow(new DataList(new double[]{ 0.4371157666509329 }));
        batch.addRow(new DataList(new double[]{ 0.4314560456809593 }));
        batch.addRow(new DataList(new double[]{ 0.4257792915650729 }));
        batch.addRow(new DataList(new double[]{ 0.42008572841180647 }));
        batch.addRow(new DataList(new double[]{ 0.4143755809932843 }));
        batch.addRow(new DataList(new double[]{ 0.40864907473634915 }));
        batch.addRow(new DataList(new double[]{ 0.40290643571366275 }));
        batch.addRow(new DataList(new double[]{ 0.3971478906347806 }));
        batch.addRow(new DataList(new double[]{ 0.39137366683720237 }));
        batch.addRow(new DataList(new double[]{ 0.3855839922773965 }));
        batch.addRow(new DataList(new double[]{ 0.3797790955218014 }));
        batch.addRow(new DataList(new double[]{ 0.37395920573780067 }));
        batch.addRow(new DataList(new double[]{ 0.36812455268467814 }));
        batch.addRow(new DataList(new double[]{ 0.3622753667045458 }));
        batch.addRow(new DataList(new double[]{ 0.3564118787132508 }));
        batch.addRow(new DataList(new double[]{ 0.350534320191259 }));
        batch.addRow(new DataList(new double[]{ 0.34464292317451706 }));
        batch.addRow(new DataList(new double[]{ 0.3387379202452913 }));
        batch.addRow(new DataList(new double[]{ 0.3328195445229865 }));
        batch.addRow(new DataList(new double[]{ 0.32688802965494274 }));
        batch.addRow(new DataList(new double[]{ 0.3209436098072097 }));
        batch.addRow(new DataList(new double[]{ 0.31498651965530494 }));
        batch.addRow(new DataList(new double[]{ 0.3090169943749475 }));
        batch.addRow(new DataList(new double[]{ 0.30303526963277405 }));
        batch.addRow(new DataList(new double[]{ 0.2970415815770349 }));
        batch.addRow(new DataList(new double[]{ 0.29103616682827177 }));
        batch.addRow(new DataList(new double[]{ 0.28501926246997605 }));
        batch.addRow(new DataList(new double[]{ 0.2789911060392291 }));
        batch.addRow(new DataList(new double[]{ 0.27295193551732505 }));
        batch.addRow(new DataList(new double[]{ 0.26690198932037573 }));
        batch.addRow(new DataList(new double[]{ 0.26084150628989705 }));
        batch.addRow(new DataList(new double[]{ 0.25477072568338227 }));
        batch.addRow(new DataList(new double[]{ 0.24868988716485482 }));
        batch.addRow(new DataList(new double[]{ 0.2425992307954074 }));
        batch.addRow(new DataList(new double[]{ 0.2364989970237246 }));
        batch.addRow(new DataList(new double[]{ 0.23038942667659046 }));
        batch.addRow(new DataList(new double[]{ 0.224270760949381 }));
        batch.addRow(new DataList(new double[]{ 0.21814324139654231 }));
        batch.addRow(new DataList(new double[]{ 0.2120071099220548 }));
        batch.addRow(new DataList(new double[]{ 0.2058626087698814 }));
        batch.addRow(new DataList(new double[]{ 0.19970998051440705 }));
        batch.addRow(new DataList(new double[]{ 0.19354946805086068 }));
        batch.addRow(new DataList(new double[]{ 0.18738131458572502 }));
        batch.addRow(new DataList(new double[]{ 0.18120576362713767 }));
        batch.addRow(new DataList(new double[]{ 0.1750230589752763 }));
        batch.addRow(new DataList(new double[]{ 0.1688334447127341 }));
        batch.addRow(new DataList(new double[]{ 0.16263716519488378 }));
        batch.addRow(new DataList(new double[]{ 0.15643446504023098 }));
        batch.addRow(new DataList(new double[]{ 0.15022558912075712 }));
        batch.addRow(new DataList(new double[]{ 0.1440107825522526 }));
        batch.addRow(new DataList(new double[]{ 0.13779029068463847 }));
        batch.addRow(new DataList(new double[]{ 0.13156435909228284 }));
        batch.addRow(new DataList(new double[]{ 0.12533323356430454 }));
        batch.addRow(new DataList(new double[]{ 0.11909716009486998 }));
        batch.addRow(new DataList(new double[]{ 0.11285638487348187 }));
        batch.addRow(new DataList(new double[]{ 0.10661115427526005 }));
        batch.addRow(new DataList(new double[]{ 0.10036171485121498 }));
        batch.addRow(new DataList(new double[]{ 0.09410831331851435 }));
        batch.addRow(new DataList(new double[]{ 0.08785119655074315 }));
        batch.addRow(new DataList(new double[]{ 0.08159061156815792 }));
        batch.addRow(new DataList(new double[]{ 0.07532680552793304 }));
        batch.addRow(new DataList(new double[]{ 0.06906002571440606 }));
        batch.addRow(new DataList(new double[]{ 0.06279051952931358 }));
        batch.addRow(new DataList(new double[]{ 0.05651853448202468 }));
        batch.addRow(new DataList(new double[]{ 0.05024431817976966 }));
        batch.addRow(new DataList(new double[]{ 0.04396811831786495 }));
        batch.addRow(new DataList(new double[]{ 0.037690182669934534 }));
        batch.addRow(new DataList(new double[]{ 0.031410759078128236 }));
        batch.addRow(new DataList(new double[]{ 0.025130095443337813 }));
        batch.addRow(new DataList(new double[]{ 0.01884843971540846 }));
        batch.addRow(new DataList(new double[]{ 0.012566039883352836 }));
        batch.addRow(new DataList(new double[]{ 0.006283143965559127 }));
        batch.addRow(new DataList(new double[]{ 1.2246467991473532e-16 }));
        batch.addRow(new DataList(new double[]{ -0.006283143965558882 }));
        batch.addRow(new DataList(new double[]{ -0.012566039883352592 }));
        batch.addRow(new DataList(new double[]{ -0.018848439715408213 }));
        batch.addRow(new DataList(new double[]{ -0.02513009544333757 }));
        batch.addRow(new DataList(new double[]{ -0.031410759078127994 }));
        batch.addRow(new DataList(new double[]{ -0.03769018266993429 }));
        batch.addRow(new DataList(new double[]{ -0.04396811831786471 }));
        batch.addRow(new DataList(new double[]{ -0.05024431817976942 }));
        batch.addRow(new DataList(new double[]{ -0.056518534482024436 }));
        batch.addRow(new DataList(new double[]{ -0.06279051952931335 }));
        batch.addRow(new DataList(new double[]{ -0.06906002571440581 }));
        batch.addRow(new DataList(new double[]{ -0.07532680552793279 }));
        batch.addRow(new DataList(new double[]{ -0.08159061156815768 }));
        batch.addRow(new DataList(new double[]{ -0.0878511965507429 }));
        batch.addRow(new DataList(new double[]{ -0.0941083133185141 }));
        batch.addRow(new DataList(new double[]{ -0.10036171485121473 }));
        batch.addRow(new DataList(new double[]{ -0.1066111542752598 }));
        batch.addRow(new DataList(new double[]{ -0.11285638487348164 }));
        batch.addRow(new DataList(new double[]{ -0.11909716009486973 }));
        batch.addRow(new DataList(new double[]{ -0.12533323356430429 }));
        batch.addRow(new DataList(new double[]{ -0.13156435909228262 }));
        batch.addRow(new DataList(new double[]{ -0.13779029068463822 }));
        batch.addRow(new DataList(new double[]{ -0.14401078255225236 }));
        batch.addRow(new DataList(new double[]{ -0.15022558912075687 }));
        batch.addRow(new DataList(new double[]{ -0.15643446504023073 }));
        batch.addRow(new DataList(new double[]{ -0.16263716519488353 }));
        batch.addRow(new DataList(new double[]{ -0.16883344471273384 }));
        batch.addRow(new DataList(new double[]{ -0.1750230589752761 }));
        batch.addRow(new DataList(new double[]{ -0.18120576362713745 }));
        batch.addRow(new DataList(new double[]{ -0.18738131458572477 }));
        batch.addRow(new DataList(new double[]{ -0.19354946805086046 }));
        batch.addRow(new DataList(new double[]{ -0.19970998051440725 }));
        batch.addRow(new DataList(new double[]{ -0.2058626087698812 }));
        batch.addRow(new DataList(new double[]{ -0.21200710992205454 }));
        batch.addRow(new DataList(new double[]{ -0.2181432413965425 }));
        batch.addRow(new DataList(new double[]{ -0.2242707609493812 }));
        batch.addRow(new DataList(new double[]{ -0.23038942667659065 }));
        batch.addRow(new DataList(new double[]{ -0.2364989970237248 }));
        batch.addRow(new DataList(new double[]{ -0.2425992307954076 }));
        batch.addRow(new DataList(new double[]{ -0.24868988716485502 }));
        batch.addRow(new DataList(new double[]{ -0.25477072568338244 }));
        batch.addRow(new DataList(new double[]{ -0.26084150628989683 }));
        batch.addRow(new DataList(new double[]{ -0.2669019893203755 }));
        batch.addRow(new DataList(new double[]{ -0.2729519355173252 }));
        batch.addRow(new DataList(new double[]{ -0.2789911060392293 }));
        batch.addRow(new DataList(new double[]{ -0.2850192624699762 }));
        batch.addRow(new DataList(new double[]{ -0.291036166828272 }));
        batch.addRow(new DataList(new double[]{ -0.2970415815770351 }));
        batch.addRow(new DataList(new double[]{ -0.3030352696327742 }));
        batch.addRow(new DataList(new double[]{ -0.30901699437494773 }));
        batch.addRow(new DataList(new double[]{ -0.31498651965530516 }));
        batch.addRow(new DataList(new double[]{ -0.3209436098072095 }));
        batch.addRow(new DataList(new double[]{ -0.3268880296549425 }));
        batch.addRow(new DataList(new double[]{ -0.33281954452298673 }));
        batch.addRow(new DataList(new double[]{ -0.3387379202452915 }));
        batch.addRow(new DataList(new double[]{ -0.3446429231745172 }));
        batch.addRow(new DataList(new double[]{ -0.35053432019125924 }));
        batch.addRow(new DataList(new double[]{ -0.356411878713251 }));
        batch.addRow(new DataList(new double[]{ -0.362275366704546 }));
        batch.addRow(new DataList(new double[]{ -0.3681245526846783 }));
        batch.addRow(new DataList(new double[]{ -0.37395920573780045 }));
        batch.addRow(new DataList(new double[]{ -0.37977909552180117 }));
        batch.addRow(new DataList(new double[]{ -0.38558399227739626 }));
        batch.addRow(new DataList(new double[]{ -0.39137366683720215 }));
        batch.addRow(new DataList(new double[]{ -0.39714789063478 }));
        batch.addRow(new DataList(new double[]{ -0.4029064357136621 }));
        batch.addRow(new DataList(new double[]{ -0.40864907473634854 }));
        batch.addRow(new DataList(new double[]{ -0.41437558099328364 }));
        batch.addRow(new DataList(new double[]{ -0.42008572841180586 }));
        batch.addRow(new DataList(new double[]{ -0.42577929156507227 }));
        batch.addRow(new DataList(new double[]{ -0.43145604568095863 }));
        batch.addRow(new DataList(new double[]{ -0.43711576665093266 }));
        batch.addRow(new DataList(new double[]{ -0.44275823103890133 }));
        batch.addRow(new DataList(new double[]{ -0.4483832160900317 }));
        batch.addRow(new DataList(new double[]{ -0.45399049973954625 }));
        batch.addRow(new DataList(new double[]{ -0.45957986062148737 }));
        batch.addRow(new DataList(new double[]{ -0.4651510780774579 }));
        batch.addRow(new DataList(new double[]{ -0.4707039321653322 }));
        batch.addRow(new DataList(new double[]{ -0.4762382036679388 }));
        batch.addRow(new DataList(new double[]{ -0.481753674101715 }));
        batch.addRow(new DataList(new double[]{ -0.4872501257253321 }));
        batch.addRow(new DataList(new double[]{ -0.4927273415482914 }));
        batch.addRow(new DataList(new double[]{ -0.4981851053394907 }));
        batch.addRow(new DataList(new double[]{ -0.5036232016357604 }));
        batch.addRow(new DataList(new double[]{ -0.5090414157503709 }));
        batch.addRow(new DataList(new double[]{ -0.5144395337815061 }));
        batch.addRow(new DataList(new double[]{ -0.5198173426207091 }));
        batch.addRow(new DataList(new double[]{ -0.5251746299612954 }));
        batch.addRow(new DataList(new double[]{ -0.5305111843067338 }));
        batch.addRow(new DataList(new double[]{ -0.5358267949789964 }));
        batch.addRow(new DataList(new double[]{ -0.5411212521268757 }));
        batch.addRow(new DataList(new double[]{ -0.546394346734269 }));
        batch.addRow(new DataList(new double[]{ -0.5516458706284298 }));
        batch.addRow(new DataList(new double[]{ -0.5568756164881876 }));
        batch.addRow(new DataList(new double[]{ -0.5620833778521303 }));
        batch.addRow(new DataList(new double[]{ -0.5672689491267562 }));
        batch.addRow(new DataList(new double[]{ -0.5724321255945907 }));
        batch.addRow(new DataList(new double[]{ -0.5775727034222674 }));
        batch.addRow(new DataList(new double[]{ -0.5826904796685759 }));
        batch.addRow(new DataList(new double[]{ -0.587785252292473 }));
        batch.addRow(new DataList(new double[]{ -0.5928568201610591 }));
        batch.addRow(new DataList(new double[]{ -0.5979049830575185 }));
        batch.addRow(new DataList(new double[]{ -0.6029295416890244 }));
        batch.addRow(new DataList(new double[]{ -0.607930297694605 }));
        batch.addRow(new DataList(new double[]{ -0.6129070536529763 }));
        batch.addRow(new DataList(new double[]{ -0.6178596130903341 }));
        batch.addRow(new DataList(new double[]{ -0.6227877804881123 }));
        batch.addRow(new DataList(new double[]{ -0.6276913612907004 }));
        batch.addRow(new DataList(new double[]{ -0.6325701619131244 }));
        batch.addRow(new DataList(new double[]{ -0.6374239897486896 }));
        batch.addRow(new DataList(new double[]{ -0.6422526531765844 }));
        batch.addRow(new DataList(new double[]{ -0.647055961569444 }));
        batch.addRow(new DataList(new double[]{ -0.6518337253008785 }));
        batch.addRow(new DataList(new double[]{ -0.6565857557529562 }));
        batch.addRow(new DataList(new double[]{ -0.6613118653236517 }));
        batch.addRow(new DataList(new double[]{ -0.6660118674342514 }));
        batch.addRow(new DataList(new double[]{ -0.6706855765367199 }));
        batch.addRow(new DataList(new double[]{ -0.6753328081210244 }));
        batch.addRow(new DataList(new double[]{ -0.6799533787224191 }));
        batch.addRow(new DataList(new double[]{ -0.6845471059286887 }));
        batch.addRow(new DataList(new double[]{ -0.6891138083873481 }));
        batch.addRow(new DataList(new double[]{ -0.6936533058128047 }));
        batch.addRow(new DataList(new double[]{ -0.6981654189934725 }));
        batch.addRow(new DataList(new double[]{ -0.7026499697988491 }));
        batch.addRow(new DataList(new double[]{ -0.7071067811865475 }));
        batch.addRow(new DataList(new double[]{ -0.7115356772092852 }));
        batch.addRow(new DataList(new double[]{ -0.7159364830218311 }));
        batch.addRow(new DataList(new double[]{ -0.7203090248879069 }));
        batch.addRow(new DataList(new double[]{ -0.7246531301870467 }));
        batch.addRow(new DataList(new double[]{ -0.7289686274214113 }));
        batch.addRow(new DataList(new double[]{ -0.7332553462225598 }));
        batch.addRow(new DataList(new double[]{ -0.7375131173581737 }));
        batch.addRow(new DataList(new double[]{ -0.7417417727387391 }));
        batch.addRow(new DataList(new double[]{ -0.7459411454241821 }));
        batch.addRow(new DataList(new double[]{ -0.7501110696304595 }));
        batch.addRow(new DataList(new double[]{ -0.7542513807361038 }));
        batch.addRow(new DataList(new double[]{ -0.7583619152887215 }));
        batch.addRow(new DataList(new double[]{ -0.7624425110114479 }));
        batch.addRow(new DataList(new double[]{ -0.7664930068093496 }));
        batch.addRow(new DataList(new double[]{ -0.7705132427757894 }));
        batch.addRow(new DataList(new double[]{ -0.7745030601987337 }));
        batch.addRow(new DataList(new double[]{ -0.7784623015670236 }));
        batch.addRow(new DataList(new double[]{ -0.7823908105765881 }));
        batch.addRow(new DataList(new double[]{ -0.7862884321366186 }));
        batch.addRow(new DataList(new double[]{ -0.7901550123756904 }));
        batch.addRow(new DataList(new double[]{ -0.793990398647835 }));
        batch.addRow(new DataList(new double[]{ -0.7977944395385711 }));
        batch.addRow(new DataList(new double[]{ -0.8015669848708764 }));
        batch.addRow(new DataList(new double[]{ -0.8053078857111221 }));
        batch.addRow(new DataList(new double[]{ -0.8090169943749473 }));
        batch.addRow(new DataList(new double[]{ -0.8126941644330942 }));
        batch.addRow(new DataList(new double[]{ -0.8163392507171839 }));
        batch.addRow(new DataList(new double[]{ -0.819952109325452 }));
        batch.addRow(new DataList(new double[]{ -0.8235325976284275 }));
        batch.addRow(new DataList(new double[]{ -0.8270805742745616 }));
        batch.addRow(new DataList(new double[]{ -0.8305958991958127 }));
        batch.addRow(new DataList(new double[]{ -0.834078433613171 }));
        batch.addRow(new DataList(new double[]{ -0.8375280400421419 }));
        batch.addRow(new DataList(new double[]{ -0.840944582298169 }));
        batch.addRow(new DataList(new double[]{ -0.8443279255020153 }));
        batch.addRow(new DataList(new double[]{ -0.8476779360850832 }));
        batch.addRow(new DataList(new double[]{ -0.8509944817946921 }));
        batch.addRow(new DataList(new double[]{ -0.8542774316992952 }));
        batch.addRow(new DataList(new double[]{ -0.8575266561936521 }));
        batch.addRow(new DataList(new double[]{ -0.8607420270039438 }));
        batch.addRow(new DataList(new double[]{ -0.8639234171928352 }));
        batch.addRow(new DataList(new double[]{ -0.8670707011644903 }));
        batch.addRow(new DataList(new double[]{ -0.8701837546695256 }));
        batch.addRow(new DataList(new double[]{ -0.8732624548099204 }));
        batch.addRow(new DataList(new double[]{ -0.8763066800438636 }));
        batch.addRow(new DataList(new double[]{ -0.8793163101905564 }));
        batch.addRow(new DataList(new double[]{ -0.8822912264349534 }));
        batch.addRow(new DataList(new double[]{ -0.8852313113324551 }));
        batch.addRow(new DataList(new double[]{ -0.8881364488135446 }));
        batch.addRow(new DataList(new double[]{ -0.8910065241883678 }));
        batch.addRow(new DataList(new double[]{ -0.8938414241512639 }));
        batch.addRow(new DataList(new double[]{ -0.8966410367852359 }));
        batch.addRow(new DataList(new double[]{ -0.8994052515663712 }));
        batch.addRow(new DataList(new double[]{ -0.9021339593682028 }));
        batch.addRow(new DataList(new double[]{ -0.9048270524660198 }));
        batch.addRow(new DataList(new double[]{ -0.907484424541117 }));
        batch.addRow(new DataList(new double[]{ -0.9101059706849955 }));
        batch.addRow(new DataList(new double[]{ -0.9126915874035029 }));
        batch.addRow(new DataList(new double[]{ -0.9152411726209175 }));
        batch.addRow(new DataList(new double[]{ -0.9177546256839813 }));
        batch.addRow(new DataList(new double[]{ -0.9202318473658704 }));
        batch.addRow(new DataList(new double[]{ -0.922672739870115 }));
        batch.addRow(new DataList(new double[]{ -0.9250772068344577 }));
        batch.addRow(new DataList(new double[]{ -0.9274451533346612 }));
        batch.addRow(new DataList(new double[]{ -0.9297764858882511 }));
        batch.addRow(new DataList(new double[]{ -0.9320711124582108 }));
        batch.addRow(new DataList(new double[]{ -0.9343289424566118 }));
        batch.addRow(new DataList(new double[]{ -0.9365498867481923 }));
        batch.addRow(new DataList(new double[]{ -0.938733857653874 }));
        batch.addRow(new DataList(new double[]{ -0.9408807689542251 }));
        batch.addRow(new DataList(new double[]{ -0.9429905358928643 }));
        batch.addRow(new DataList(new double[]{ -0.9450630751798046 }));
        batch.addRow(new DataList(new double[]{ -0.9470983049947442 }));
        batch.addRow(new DataList(new double[]{ -0.9490961449902944 }));
        batch.addRow(new DataList(new double[]{ -0.9510565162951535 }));
        batch.addRow(new DataList(new double[]{ -0.9529793415172186 }));
        batch.addRow(new DataList(new double[]{ -0.954864544746643 }));
        batch.addRow(new DataList(new double[]{ -0.9567120515588303 }));
        batch.addRow(new DataList(new double[]{ -0.9585217890173756 }));
        batch.addRow(new DataList(new double[]{ -0.960293685676943 }));
        batch.addRow(new DataList(new double[]{ -0.9620276715860857 }));
        batch.addRow(new DataList(new double[]{ -0.9637236782900096 }));
        batch.addRow(new DataList(new double[]{ -0.9653816388332738 }));
        batch.addRow(new DataList(new double[]{ -0.967001487762435 }));
        batch.addRow(new DataList(new double[]{ -0.968583161128631 }));
        batch.addRow(new DataList(new double[]{ -0.9701265964901058 }));
        batch.addRow(new DataList(new double[]{ -0.9716317329146739 }));
        batch.addRow(new DataList(new double[]{ -0.9730985109821264 }));
        batch.addRow(new DataList(new double[]{ -0.9745268727865771 }));
        batch.addRow(new DataList(new double[]{ -0.9759167619387472 }));
        batch.addRow(new DataList(new double[]{ -0.9772681235681934 }));
        batch.addRow(new DataList(new double[]{ -0.978580904325472 }));
        batch.addRow(new DataList(new double[]{ -0.9798550523842469 }));
        batch.addRow(new DataList(new double[]{ -0.981090517443334 }));
        batch.addRow(new DataList(new double[]{ -0.9822872507286887 }));
        batch.addRow(new DataList(new double[]{ -0.9834452049953296 }));
        batch.addRow(new DataList(new double[]{ -0.9845643345292054 }));
        batch.addRow(new DataList(new double[]{ -0.9856445951489979 }));
        batch.addRow(new DataList(new double[]{ -0.9866859442078679 }));
        batch.addRow(new DataList(new double[]{ -0.9876883405951377 }));
        batch.addRow(new DataList(new double[]{ -0.988651744737914 }));
        batch.addRow(new DataList(new double[]{ -0.9895761186026509 }));
        batch.addRow(new DataList(new double[]{ -0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ -0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ -0.9921147013144778 }));
        batch.addRow(new DataList(new double[]{ -0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ -0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ -0.9943007903969988 }));
        batch.addRow(new DataList(new double[]{ -0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ -0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ -0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ -0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ -0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ -0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ -0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ -0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ -0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ -0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ -0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ -0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ -0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ -0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ -0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ -0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ -1.0 }));
        batch.addRow(new DataList(new double[]{ -0.9999802608561371 }));
        batch.addRow(new DataList(new double[]{ -0.9999210442038161 }));
        batch.addRow(new DataList(new double[]{ -0.999822352380809 }));
        batch.addRow(new DataList(new double[]{ -0.9996841892832999 }));
        batch.addRow(new DataList(new double[]{ -0.9995065603657316 }));
        batch.addRow(new DataList(new double[]{ -0.9992894726405892 }));
        batch.addRow(new DataList(new double[]{ -0.9990329346781247 }));
        batch.addRow(new DataList(new double[]{ -0.9987369566060175 }));
        batch.addRow(new DataList(new double[]{ -0.998401550108975 }));
        batch.addRow(new DataList(new double[]{ -0.9980267284282716 }));
        batch.addRow(new DataList(new double[]{ -0.9976125063612252 }));
        batch.addRow(new DataList(new double[]{ -0.9971589002606139 }));
        batch.addRow(new DataList(new double[]{ -0.9966659280340299 }));
        batch.addRow(new DataList(new double[]{ -0.9961336091431725 }));
        batch.addRow(new DataList(new double[]{ -0.99556196460308 }));
        batch.addRow(new DataList(new double[]{ -0.9949510169813002 }));
        batch.addRow(new DataList(new double[]{ -0.9943007903969988 }));
        batch.addRow(new DataList(new double[]{ -0.9936113105200084 }));
        batch.addRow(new DataList(new double[]{ -0.9928826045698137 }));
        batch.addRow(new DataList(new double[]{ -0.9921147013144779 }));
        batch.addRow(new DataList(new double[]{ -0.9913076310695066 }));
        batch.addRow(new DataList(new double[]{ -0.9904614256966512 }));
        batch.addRow(new DataList(new double[]{ -0.989576118602651 }));
        batch.addRow(new DataList(new double[]{ -0.988651744737914 }));
        batch.addRow(new DataList(new double[]{ -0.9876883405951378 }));
        batch.addRow(new DataList(new double[]{ -0.986685944207868 }));
        batch.addRow(new DataList(new double[]{ -0.985644595148998 }));
        batch.addRow(new DataList(new double[]{ -0.9845643345292054 }));
        batch.addRow(new DataList(new double[]{ -0.9834452049953297 }));
        batch.addRow(new DataList(new double[]{ -0.9822872507286887 }));
        batch.addRow(new DataList(new double[]{ -0.9810905174433341 }));
        batch.addRow(new DataList(new double[]{ -0.979855052384247 }));
        batch.addRow(new DataList(new double[]{ -0.9785809043254721 }));
        batch.addRow(new DataList(new double[]{ -0.9772681235681935 }));
        batch.addRow(new DataList(new double[]{ -0.9759167619387473 }));
        batch.addRow(new DataList(new double[]{ -0.9745268727865771 }));
        batch.addRow(new DataList(new double[]{ -0.9730985109821264 }));
        batch.addRow(new DataList(new double[]{ -0.971631732914674 }));
        batch.addRow(new DataList(new double[]{ -0.9701265964901059 }));
        batch.addRow(new DataList(new double[]{ -0.9685831611286311 }));
        batch.addRow(new DataList(new double[]{ -0.9670014877624351 }));
        batch.addRow(new DataList(new double[]{ -0.9653816388332738 }));
        batch.addRow(new DataList(new double[]{ -0.9637236782900097 }));
        batch.addRow(new DataList(new double[]{ -0.9620276715860858 }));
        batch.addRow(new DataList(new double[]{ -0.9602936856769431 }));
        batch.addRow(new DataList(new double[]{ -0.9585217890173757 }));
        batch.addRow(new DataList(new double[]{ -0.9567120515588304 }));
        batch.addRow(new DataList(new double[]{ -0.9548645447466431 }));
        batch.addRow(new DataList(new double[]{ -0.9529793415172187 }));
        batch.addRow(new DataList(new double[]{ -0.9510565162951536 }));
        batch.addRow(new DataList(new double[]{ -0.9490961449902945 }));
        batch.addRow(new DataList(new double[]{ -0.9470983049947443 }));
        batch.addRow(new DataList(new double[]{ -0.9450630751798047 }));
        batch.addRow(new DataList(new double[]{ -0.9429905358928644 }));
        batch.addRow(new DataList(new double[]{ -0.9408807689542253 }));
        batch.addRow(new DataList(new double[]{ -0.9387338576538741 }));
        batch.addRow(new DataList(new double[]{ -0.9365498867481924 }));
        batch.addRow(new DataList(new double[]{ -0.9343289424566119 }));
        batch.addRow(new DataList(new double[]{ -0.9320711124582111 }));
        batch.addRow(new DataList(new double[]{ -0.9297764858882512 }));
        batch.addRow(new DataList(new double[]{ -0.9274451533346614 }));
        batch.addRow(new DataList(new double[]{ -0.9250772068344579 }));
        batch.addRow(new DataList(new double[]{ -0.9226727398701151 }));
        batch.addRow(new DataList(new double[]{ -0.9202318473658705 }));
        batch.addRow(new DataList(new double[]{ -0.9177546256839815 }));
        batch.addRow(new DataList(new double[]{ -0.9152411726209176 }));
        batch.addRow(new DataList(new double[]{ -0.9126915874035031 }));
        batch.addRow(new DataList(new double[]{ -0.9101059706849958 }));
        batch.addRow(new DataList(new double[]{ -0.9074844245411171 }));
        batch.addRow(new DataList(new double[]{ -0.9048270524660199 }));
        batch.addRow(new DataList(new double[]{ -0.9021339593682031 }));
        batch.addRow(new DataList(new double[]{ -0.8994052515663714 }));
        batch.addRow(new DataList(new double[]{ -0.896641036785236 }));
        batch.addRow(new DataList(new double[]{ -0.8938414241512641 }));
        batch.addRow(new DataList(new double[]{ -0.891006524188368 }));
        batch.addRow(new DataList(new double[]{ -0.8881364488135448 }));
        batch.addRow(new DataList(new double[]{ -0.8852313113324553 }));
        batch.addRow(new DataList(new double[]{ -0.8822912264349535 }));
        batch.addRow(new DataList(new double[]{ -0.8793163101905567 }));
        batch.addRow(new DataList(new double[]{ -0.8763066800438638 }));
        batch.addRow(new DataList(new double[]{ -0.8732624548099205 }));
        batch.addRow(new DataList(new double[]{ -0.8701837546695258 }));
        batch.addRow(new DataList(new double[]{ -0.8670707011644904 }));
        batch.addRow(new DataList(new double[]{ -0.8639234171928354 }));
        batch.addRow(new DataList(new double[]{ -0.8607420270039439 }));
        batch.addRow(new DataList(new double[]{ -0.8575266561936523 }));
        batch.addRow(new DataList(new double[]{ -0.8542774316992954 }));
        batch.addRow(new DataList(new double[]{ -0.8509944817946923 }));
        batch.addRow(new DataList(new double[]{ -0.8476779360850835 }));
        batch.addRow(new DataList(new double[]{ -0.8443279255020155 }));
        batch.addRow(new DataList(new double[]{ -0.8409445822981693 }));
        batch.addRow(new DataList(new double[]{ -0.8375280400421421 }));
        batch.addRow(new DataList(new double[]{ -0.8340784336131712 }));
        batch.addRow(new DataList(new double[]{ -0.8305958991958129 }));
        batch.addRow(new DataList(new double[]{ -0.8270805742745618 }));
        batch.addRow(new DataList(new double[]{ -0.8235325976284277 }));
        batch.addRow(new DataList(new double[]{ -0.8199521093254523 }));
        batch.addRow(new DataList(new double[]{ -0.8163392507171842 }));
        batch.addRow(new DataList(new double[]{ -0.8126941644330944 }));
        batch.addRow(new DataList(new double[]{ -0.8090169943749476 }));
        batch.addRow(new DataList(new double[]{ -0.8053078857111223 }));
        batch.addRow(new DataList(new double[]{ -0.8015669848708766 }));
        batch.addRow(new DataList(new double[]{ -0.7977944395385713 }));
        batch.addRow(new DataList(new double[]{ -0.7939903986478354 }));
        batch.addRow(new DataList(new double[]{ -0.7901550123756906 }));
        batch.addRow(new DataList(new double[]{ -0.7862884321366188 }));
        batch.addRow(new DataList(new double[]{ -0.7823908105765883 }));
        batch.addRow(new DataList(new double[]{ -0.7784623015670239 }));
        batch.addRow(new DataList(new double[]{ -0.7745030601987339 }));
        batch.addRow(new DataList(new double[]{ -0.7705132427757896 }));
        batch.addRow(new DataList(new double[]{ -0.7664930068093498 }));
        batch.addRow(new DataList(new double[]{ -0.7624425110114482 }));
        batch.addRow(new DataList(new double[]{ -0.7583619152887218 }));
        batch.addRow(new DataList(new double[]{ -0.754251380736104 }));
        batch.addRow(new DataList(new double[]{ -0.7501110696304595 }));
        batch.addRow(new DataList(new double[]{ -0.7459411454241823 }));
        batch.addRow(new DataList(new double[]{ -0.7417417727387396 }));
        batch.addRow(new DataList(new double[]{ -0.737513117358174 }));
        batch.addRow(new DataList(new double[]{ -0.7332553462225604 }));
        batch.addRow(new DataList(new double[]{ -0.7289686274214116 }));
        batch.addRow(new DataList(new double[]{ -0.7246531301870469 }));
        batch.addRow(new DataList(new double[]{ -0.7203090248879068 }));
        batch.addRow(new DataList(new double[]{ -0.7159364830218313 }));
        batch.addRow(new DataList(new double[]{ -0.7115356772092852 }));
        batch.addRow(new DataList(new double[]{ -0.7071067811865477 }));
        batch.addRow(new DataList(new double[]{ -0.7026499697988496 }));
        batch.addRow(new DataList(new double[]{ -0.6981654189934727 }));
        batch.addRow(new DataList(new double[]{ -0.6936533058128054 }));
        batch.addRow(new DataList(new double[]{ -0.6891138083873485 }));
        batch.addRow(new DataList(new double[]{ -0.684547105928689 }));
        batch.addRow(new DataList(new double[]{ -0.6799533787224191 }));
        batch.addRow(new DataList(new double[]{ -0.6753328081210246 }));
        batch.addRow(new DataList(new double[]{ -0.6706855765367199 }));
        batch.addRow(new DataList(new double[]{ -0.6660118674342518 }));
        batch.addRow(new DataList(new double[]{ -0.6613118653236523 }));
        batch.addRow(new DataList(new double[]{ -0.6565857557529565 }));
        batch.addRow(new DataList(new double[]{ -0.6518337253008791 }));
        batch.addRow(new DataList(new double[]{ -0.6470559615694443 }));
        batch.addRow(new DataList(new double[]{ -0.6422526531765846 }));
        batch.addRow(new DataList(new double[]{ -0.6374239897486896 }));
        batch.addRow(new DataList(new double[]{ -0.6325701619131247 }));
        batch.addRow(new DataList(new double[]{ -0.6276913612907002 }));
        batch.addRow(new DataList(new double[]{ -0.6227877804881126 }));
        batch.addRow(new DataList(new double[]{ -0.6178596130903348 }));
        batch.addRow(new DataList(new double[]{ -0.6129070536529765 }));
        batch.addRow(new DataList(new double[]{ -0.6079302976946057 }));
        batch.addRow(new DataList(new double[]{ -0.6029295416890247 }));
        batch.addRow(new DataList(new double[]{ -0.5979049830575192 }));
        batch.addRow(new DataList(new double[]{ -0.5928568201610591 }));
        batch.addRow(new DataList(new double[]{ -0.5877852522924734 }));
        batch.addRow(new DataList(new double[]{ -0.5826904796685758 }));
        batch.addRow(new DataList(new double[]{ -0.5775727034222677 }));
        batch.addRow(new DataList(new double[]{ -0.5724321255945913 }));
        batch.addRow(new DataList(new double[]{ -0.5672689491267565 }));
        batch.addRow(new DataList(new double[]{ -0.5620833778521309 }));
        batch.addRow(new DataList(new double[]{ -0.556875616488188 }));
        batch.addRow(new DataList(new double[]{ -0.5516458706284305 }));
        batch.addRow(new DataList(new double[]{ -0.5463943467342689 }));
        batch.addRow(new DataList(new double[]{ -0.541121252126876 }));
        batch.addRow(new DataList(new double[]{ -0.5358267949789963 }));
        batch.addRow(new DataList(new double[]{ -0.5305111843067342 }));
        batch.addRow(new DataList(new double[]{ -0.5251746299612954 }));
        batch.addRow(new DataList(new double[]{ -0.5198173426207094 }));
        batch.addRow(new DataList(new double[]{ -0.5144395337815068 }));
        batch.addRow(new DataList(new double[]{ -0.5090414157503712 }));
        batch.addRow(new DataList(new double[]{ -0.503623201635761 }));
        batch.addRow(new DataList(new double[]{ -0.4981851053394906 }));
        batch.addRow(new DataList(new double[]{ -0.4927273415482917 }));
        batch.addRow(new DataList(new double[]{ -0.487250125725332 }));
        batch.addRow(new DataList(new double[]{ -0.4817536741017153 }));
        batch.addRow(new DataList(new double[]{ -0.47623820366793873 }));
        batch.addRow(new DataList(new double[]{ -0.4707039321653325 }));
        batch.addRow(new DataList(new double[]{ -0.46515107807745865 }));
        batch.addRow(new DataList(new double[]{ -0.4595798606214877 }));
        batch.addRow(new DataList(new double[]{ -0.45399049973954697 }));
        batch.addRow(new DataList(new double[]{ -0.448383216090032 }));
        batch.addRow(new DataList(new double[]{ -0.44275823103890166 }));
        batch.addRow(new DataList(new double[]{ -0.43711576665093255 }));
        batch.addRow(new DataList(new double[]{ -0.43145604568095897 }));
        batch.addRow(new DataList(new double[]{ -0.4257792915650722 }));
        batch.addRow(new DataList(new double[]{ -0.4200857284118062 }));
        batch.addRow(new DataList(new double[]{ -0.4143755809932844 }));
        batch.addRow(new DataList(new double[]{ -0.40864907473634887 }));
        batch.addRow(new DataList(new double[]{ -0.40290643571366286 }));
        batch.addRow(new DataList(new double[]{ -0.39714789063478034 }));
        batch.addRow(new DataList(new double[]{ -0.3913736668372025 }));
        batch.addRow(new DataList(new double[]{ -0.38558399227739615 }));
        batch.addRow(new DataList(new double[]{ -0.3797790955218019 }));
        batch.addRow(new DataList(new double[]{ -0.3739592057378008 }));
        batch.addRow(new DataList(new double[]{ -0.3681245526846787 }));
        batch.addRow(new DataList(new double[]{ -0.3622753667045459 }));
        batch.addRow(new DataList(new double[]{ -0.3564118787132513 }));
        batch.addRow(new DataList(new double[]{ -0.3505343201912592 }));
        batch.addRow(new DataList(new double[]{ -0.34464292317451756 }));
        batch.addRow(new DataList(new double[]{ -0.33873792024529226 }));
        batch.addRow(new DataList(new double[]{ -0.33281954452298707 }));
        batch.addRow(new DataList(new double[]{ -0.3268880296549433 }));
        batch.addRow(new DataList(new double[]{ -0.3209436098072098 }));
        batch.addRow(new DataList(new double[]{ -0.3149865196553055 }));
        batch.addRow(new DataList(new double[]{ -0.3090169943749477 }));
        batch.addRow(new DataList(new double[]{ -0.30303526963277455 }));
        batch.addRow(new DataList(new double[]{ -0.29704158157703503 }));
        batch.addRow(new DataList(new double[]{ -0.2910361668282723 }));
        batch.addRow(new DataList(new double[]{ -0.285019262469977 }));
        batch.addRow(new DataList(new double[]{ -0.27899110603922966 }));
        batch.addRow(new DataList(new double[]{ -0.272951935517326 }));
        batch.addRow(new DataList(new double[]{ -0.26690198932037584 }));
        batch.addRow(new DataList(new double[]{ -0.2608415062898976 }));
        batch.addRow(new DataList(new double[]{ -0.2547707256833824 }));
        batch.addRow(new DataList(new double[]{ -0.24868988716485535 }));
        batch.addRow(new DataList(new double[]{ -0.24259923079540752 }));
        batch.addRow(new DataList(new double[]{ -0.23649899702372515 }));
        batch.addRow(new DataList(new double[]{ -0.23038942667659143 }));
        batch.addRow(new DataList(new double[]{ -0.22427076094938156 }));
        batch.addRow(new DataList(new double[]{ -0.2181432413965433 }));
        batch.addRow(new DataList(new double[]{ -0.2120071099220549 }));
        batch.addRow(new DataList(new double[]{ -0.20586260876988197 }));
        batch.addRow(new DataList(new double[]{ -0.1997099805144072 }));
        batch.addRow(new DataList(new double[]{ -0.19354946805086082 }));
        batch.addRow(new DataList(new double[]{ -0.18738131458572468 }));
        batch.addRow(new DataList(new double[]{ -0.1812057636271378 }));
        batch.addRow(new DataList(new double[]{ -0.175023058975276 }));
        batch.addRow(new DataList(new double[]{ -0.1688334447127342 }));
        batch.addRow(new DataList(new double[]{ -0.16263716519488433 }));
        batch.addRow(new DataList(new double[]{ -0.1564344650402311 }));
        batch.addRow(new DataList(new double[]{ -0.15022558912075767 }));
        batch.addRow(new DataList(new double[]{ -0.1440107825522523 }));
        batch.addRow(new DataList(new double[]{ -0.13779029068463858 }));
        batch.addRow(new DataList(new double[]{ -0.13156435909228253 }));
        batch.addRow(new DataList(new double[]{ -0.12533323356430465 }));
        batch.addRow(new DataList(new double[]{ -0.11909716009486966 }));
        batch.addRow(new DataList(new double[]{ -0.112856384873482 }));
        batch.addRow(new DataList(new double[]{ -0.1066111542752606 }));
        batch.addRow(new DataList(new double[]{ -0.10036171485121509 }));
        batch.addRow(new DataList(new double[]{ -0.09410831331851491 }));
        batch.addRow(new DataList(new double[]{ -0.08785119655074328 }));
        batch.addRow(new DataList(new double[]{ -0.08159061156815804 }));
        batch.addRow(new DataList(new double[]{ -0.07532680552793272 }));
        batch.addRow(new DataList(new double[]{ -0.06906002571440618 }));
        batch.addRow(new DataList(new double[]{ -0.06279051952931326 }));
        batch.addRow(new DataList(new double[]{ -0.056518534482024804 }));
        batch.addRow(new DataList(new double[]{ -0.05024431817977022 }));
        batch.addRow(new DataList(new double[]{ -0.043968118317865075 }));
        batch.addRow(new DataList(new double[]{ -0.0376901826699351 }));
        batch.addRow(new DataList(new double[]{ -0.03141075907812836 }));
        batch.addRow(new DataList(new double[]{ -0.025130095443337937 }));
        batch.addRow(new DataList(new double[]{ -0.018848439715408137 }));
        batch.addRow(new DataList(new double[]{ -0.01256603988335296 }));
        batch.addRow(new DataList(new double[]{ -0.006283143965558805 }));

        return batch;
    }

    public static HiddenLayer getHiddenLayer1() {
        final HiddenLayer hiddenLayer = new HiddenLayer();

        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.17640523910522463 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04001572132110596 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.0978738009929657 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.22408931255340578 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.1867558002471924 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.09772778749465943 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.09500884413719178 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.015135720372200012 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.010321885347366333 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04105985164642334 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.014404356479644775 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.14542734622955322 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.07610377073287965 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.012167501449584962 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04438632428646088 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.03336743414402008 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.1494079113006592 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.020515826344490052 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.031306770443916325 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.0854095757007599 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.2552989721298218 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.0653618574142456 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.08644362092018128 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.07421650290489197 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.22697546482086184 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.14543657302856447 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.004575851559638977 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.018718385696411134 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.15327792167663576 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.14693588018417358 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.015494742989540101 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.03781625330448151 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.08877857327461243 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.1980796456336975 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.034791216254234314 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.015634897351264953 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.12302906513214112 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.12023798227310181 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.03873268067836762 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.030230274796485903 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.10485529899597168 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.1420017957687378 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.1706270217895508 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.1950775384902954 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.05096521973609924 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.04380742907524109 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.12527953386306764 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.07774903774261475 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.16138978004455568 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.02127402871847153 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.08954665660858155 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.03869025111198426 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.051080513000488284 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.118063223361969 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.0028182229027152064 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04283318817615509 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.006651721894741058 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.030247190594673158 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.06343221068382264 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.03627411723136902 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.0672460436820984 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.03595531582832336 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.08131462931632996 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.17262825965881348 })));

        return hiddenLayer;
    }

    public static HiddenLayer getHiddenLayer2() {
        final HiddenLayer hiddenLayer = new HiddenLayer();

        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.017742614448070525, 0.06722947359085084, -0.003928281739354134, -0.0725597381591797, -0.07196043729782105, 0.003863055258989334, -0.0782629132270813, -0.13322116136550904, -0.08056265115737915, -0.009038200974464417, 0.023482152819633485, 0.18495912551879884, 0.003060182370245457, -0.08565493226051331, -0.03655510842800141, 0.17123051881790163, 0.06774621605873109, 0.02066905051469803, 0.07519465684890747, -0.008511560410261155, 0.05684589147567749, 0.24512298107147218, 0.02847906053066254, -0.16193599700927735, 0.0430771142244339, 0.021555306017398836, 0.04607943296432496, -0.15914478302001955, 0.1421975612640381, 0.13905339241027834, -0.05981504321098328, -0.16961312294006348, -0.006366148591041565, 0.10941669940948487, -0.16677799224853518, 0.046146887540817264, -0.04813926219940186, -0.13705719709396363, 0.058585083484649664, 0.043311873078346254, 0.1342353701591492, -0.040547245740890504, 0.03890021443367005, -0.07352957129478455, -0.06910198330879212, 0.013874524831771852, -0.1530616283416748, -0.18240795135498047, -0.03302378952503204, -0.13333423137664796, -0.00029647513292729855, -0.1632694721221924, 0.0002075021853670478, 0.06413381695747376, 0.031732895970344545, 0.014346392452716829, -0.0368436336517334, -0.10125858783721925, 0.11550264358520508, 0.13960622549057009, -0.003013330698013306, -0.06904314160346985, 0.1077314853668213, 0.1629475235939026 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.04017809331417084, 0.04074618220329285, -0.11680934429168702, -0.1383363962173462, -0.08129929900169373, -0.16567151546478273, -0.011038929969072343, -0.19686247110366822, -0.1118311882019043, 0.1367597222328186, 0.21321535110473633, -0.021416665613651277, -0.006964157521724701, -0.15415873527526858, 0.09380925297737122, -0.07921150326728821, 0.005182038992643356, 0.053104251623153687, 0.05629897117614746, -0.05643010139465332, -0.033281177282333374, -0.021120598912239077, -0.030937758088111878, -0.05110404491424561, -0.014989158511161805, 0.05680073499679566, -0.04009861648082733, 0.00032222163863480094, 0.04563633501529694, -0.16413486003875732, -0.15200393199920656, 0.07301835417747497, -0.15799305438995362, -0.10942409038543702, 0.05880377292633057, -0.004648115485906601, 0.1397065281867981, 0.031056469678878786, 0.11363880634307862, -0.021018882095813752, 0.019785331189632417, 0.04339389801025391, -0.033945432305336, -0.06339886784553528, -0.220550537109375, -0.12743194103240968, 0.0327623188495636, -0.05787085294723511, -0.08348071575164795, 0.036778402328491215, -0.17770435810089114, 0.07337234616279602, 0.10268006324768067, 0.08338512182235719, 0.061268079280853274, 0.08869625926017762, 0.04887857437133789, 0.02449852079153061, 0.06703916788101197, 0.11758522987365723, -0.006472838670015336, 0.14288923740386963, 0.08110896944999696, -0.009904470294713974 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.1630198359489441, -0.076991605758667, 0.052327668666839605, -0.15829384326934814, 0.027451634407043457, -0.09855107665061952, -0.10546284914016724, -0.06600562930107116, -0.013105401396751405, 0.10344098806381226, 0.0936445713043213, -0.04990166425704956, 0.0051574941724538805, 0.25944244861602783, 0.029673317074775697, -0.10455245971679689, -0.08791606426239014, 0.023914557695388795, -0.11949868202209474, 0.09667680263519288, 0.04804244935512543, -0.01204066351056099, -0.002852886915206909, 0.17406294345855713, -0.10060368776321411, 0.008261103183031082, -0.09711706638336182, -0.1057473659515381, -0.05286706686019898, -0.015503580868244172, 0.041785371303558354, -0.18574832677841188, -0.2832011938095093, -0.014763741195201874, 0.1557010054588318, -0.04335543215274811, 0.14977149963378908, -0.05070366263389588, 0.0671616554260254, 0.13207943439483644, 0.06021634936332703, -0.018359076976776124, -0.0056979056447744375, -0.039344912767410284, 0.044786965847015386, -0.140233051776886, 0.027919650077819824, -0.0924893081188202, 0.12353824377059937, -0.13882335424423217, 0.012949283421039582, -0.010404881089925766, -0.14751604795455933, 0.0028169874101877214, -0.05832113027572632, 0.013052402436733246, 0.029212161898612976, 0.24123477935791016, -0.10544458627700806, -0.11361649036407472, 0.07247491478919983, 0.10061017274856568, -0.22315375804901125, -0.020199196040630342 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04627822637557984, 0.05392491817474365, -0.017154632508754732, 0.061037939786911015, -0.08909150958061218, -0.14718350172042846, 0.08202478289604187, 0.017581894993782043, 0.11330798864364625, -0.09962126612663269, -0.0035095177590847015, 0.0021351223811507227, 0.08672766089439393, -0.04040322899818421, 0.08299861550331117, -0.10848560333251954, -0.023110160231590272, 0.13978962898254396, -0.05004096627235413, 0.050806790590286255, -0.09681860804557801, -0.1479315996170044, -0.03247302770614624, -0.029348504543304444, -0.08215498328208924, -0.08215345144271852, 0.14263168573379517, -0.05559850335121155, -0.010800383985042572, 0.0066060259938240055, -0.00400187261402607, 0.03825981318950653, -0.10834267139434815, 0.11318119764328004, 0.08840271830558777, 0.003799601271748543, 0.05652672052383423, -0.20107822418212892, -0.09741674065589906, -0.12920012474060058, 0.08732730746269227, 0.03251987099647522, -0.03961854577064514, 0.00027175399009138346, -0.07557507753372193, -0.030706849694252015, -0.037705120444297795, 0.032952243089675905, -0.024380379915237428, -0.2575202703475952, -0.20832345485687256, 0.08812249302864075, 0.10106936693191529, 0.19783726930618287, 0.06440017223358155, -0.16645731925964358, -0.05919080972671509, -0.0457216739654541, -0.08656336665153504, 0.05053006410598755, 0.14146097898483276, 0.0024792660027742387, -0.01010025143623352, -0.14488258361816406 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.09072983860969544, -0.06743326783180237, 0.07717905640602113, -0.1188859224319458, -0.11573553085327148, 0.16481349468231202, 0.04631303250789642, 0.0498690277338028, -0.19518041610717773, -0.12179385423660279, 0.12650778293609619, -0.09191134572029114, -0.08483205437660218, -0.14617327451705933, -0.04961023330688477, 0.11173052787780763, -0.163880729675293, 0.005517135560512543, 0.02528035044670105, -0.07554627060890198, 0.08313510417938233, -0.03321022689342499, -0.05288698673248291, 0.09172215461730958, -0.15482543706893923, 0.0018922103568911554, 0.24884417057037356, 0.002673838287591934, -0.07408667206764222, -0.0495795488357544, -0.12597873210906982, -0.08869042992591858, -0.013062039017677309, -0.16847289800643922, -0.20195400714874268, 0.17140514850616456, -0.17997711896896362, -0.03925672471523285, -0.16196845769882204, -0.05186786651611328, 0.19740999937057496, -0.2593388557434082, 0.07510253190994264, 0.0022212663665413857, 0.13257079124450685, -0.17139153480529787, 0.0004174998961389065, -0.04258158802986145, -0.01895456612110138, -0.08361055850982667, -0.06817455291748047, -0.008837312459945679, -0.07432275414466859, -0.008732818812131882, -0.18158888816833496, -0.08236132860183716, 0.21815986633300782, 0.031739985942840575, 0.07324852943420411, -0.06620242595672608, 0.056984430551528936, 0.0501249372959137, -0.05873750448226929, -0.17141647338867189 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.0051945395767688755, 0.00318305566906929, 0.0823504149913788, -0.050681632757186894, -0.03122922480106354, 0.016422775387763978, 0.027909576892852783, 0.10479722023010254, -0.06598917245864869, -0.03049636483192444, 0.02114970088005066, 0.019275385141372683, -0.03256694674491883, -0.06834397912025451, -0.007480498403310776, -0.0518900215625763, -0.07333127856254577, 0.029897746443748475, -0.040801471471786505, -0.12012015581130982, 0.04879726767539978, -0.0721431314945221, 0.01737118512392044, -0.0057042866945266725, 0.053197461366653445, -0.00820341557264328, 0.1695969581604004, 0.018345025181770325, -0.060829114913940434, 0.12165777683258057, 0.002862050384283066, 0.08783037662506105, 0.14006890058517457, -0.04994167685508728, -0.09842090010643006, -0.07679485678672791, -0.11046901941299439, -0.10922179222106934, 0.057262700796127323, -0.028339776396751407, 0.04778085649013519, 0.009725087881088258, -0.08991129398345948, 0.05434534549713135, -0.03419822752475739, 0.0405080258846283, -0.14834915399551393, 0.20081493854522706, 0.04280281066894531, 0.033109241724014284, -0.061106592416763306, 0.02676708996295929, -0.03952220678329468, -0.05539647340774537, 0.07510995864868164, -0.07947061061859131, 0.04395501911640168, 0.1505566954612732, 0.19070558547973634, -0.07469163537025451, 0.07415510416030884, 0.21120195388793947, 0.13248683214187623, -0.004964157193899155 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.07290905714035034, -0.06358460783958435, 0.2163235902786255, -0.0596314013004303, -0.015766701102256777, 0.056729030609130864, 0.033890411257743835, 0.028427967429161073, -0.11398024559020997, 0.10289355516433717, -0.07049213647842408, -0.03650552034378052, 0.04704331457614899, 0.036754488945007324, 0.00122319832444191, -0.07537044882774353, 0.21495745182037354, 0.16485040187835695, 0.17746585607528687, 0.05232617259025574, -0.0919650673866272, -0.04487670063972474, 0.0566545307636261, 0.08767267465591431, 0.12605688571929932, -0.0957158088684082, 0.014180663228034974, -0.04707424938678742, -0.06407257318496705, -0.03386821746826172, 0.13426220417022705, 0.008645252138376237, -0.06516562104225158, -0.14269376993179322, -0.018779492378234865, 0.07669904232025147, 0.04071303308010102, 0.06986502408981324, 0.1902618169784546, 0.08165348768234254, -0.0060137886554002765, 0.041391366720199586, 0.08375478982925416, 0.013998846709728242, -0.05413596034049988, -0.14108233451843263, -0.14797955751419067, 0.09378913640975953, 0.05569683313369751, -0.026988112926483156, -0.07088498473167419, 0.21235263347625732, -0.08257793784141541, -0.30064988136291504, 0.030028432607650757, 0.03889919519424439, -0.03311833441257477, 0.076170414686203, -0.13228117227554323, -0.0004841661546379328, 0.005227895081043244, 0.05027969479560852, 0.08406484723091126, -0.12993954420089723 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.012898291647434236, 0.0676433265209198, 0.13365279436111452, -0.005256729573011399, 0.2256723403930664, -0.022267509996891022, 0.20210435390472414, 0.17426687479019165, 0.0784957528114319, -0.0072287008166313175, 0.06799748539924622, -0.17913275957107544, 0.031144708395004272, 0.01903115510940552, 0.15692596435546877, 0.013768982887268067, -0.009024384617805482, -0.15500141382217408, -0.0393153190612793, -0.053758335113525395, 0.26429357528686526, -0.17441877126693728, 0.014630444347858429, -0.18269113302230836, -0.010039350390434265, 0.10139721632003784, 0.18334354162216188, 0.02727963924407959, -0.11343115568161011, 0.20347626209259034, -0.07399358749389649, 0.02477063834667206, 0.050481545925140384, -0.09325702190399171, 0.04869373142719269, -0.10260072946548462, -0.0628557562828064, 0.052162522077560426, -0.07756640911102296, 0.00023851979058235885, -0.08661687970161439, -0.01992800533771515, 0.19608807563781738, -0.034404563903808597, 0.009152194857597351, 0.016491273045539857, 0.013468725979328156, -0.08532384634017945, -0.17362418174743655, 0.1267130970954895, 0.14515280723571777, 0.1396849036216736, 0.008961986005306245, -0.004716586694121361, 0.21106085777282715, -0.07620389461517335, -0.05717190504074097, 0.043188548088073736, 0.0023211603984236717, 0.1747668266296387, -0.03597445785999298, -0.12208088636398316, 0.02611061930656433, 0.06253554224967957 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.11394007205963136, 0.05765908360481262, -0.03691818416118622, -0.19362797737121584, -0.07047002911567689, -0.0353431761264801, -0.04688642024993897, -0.02226056754589081, -0.055430960655212407, -0.060065758228302006, -0.06963266730308533, -0.005858655273914337, 0.023958276212215426, -0.08517292141914368, 0.06904290318489074, -0.020694470405578615, 0.0731658935546875, -0.04558253586292267, -0.016221845149993898, 0.009920486062765122, 0.05401230454444886, 0.16606075763702394, 0.04987269639968872, -0.04031883180141449, -0.04003488123416901, -0.1730276107788086, 0.03557035028934479, 0.08179776072502137, 0.07772769927978516, 0.10541778802871704, 0.13151376247406008, -0.10182793140411378, 0.13031809329986574, -0.10124571323394777, -0.010665267705917358, -0.045962643623352055, -0.04870914220809937, 0.04968931376934052, -0.018808974325656893, -0.12614917755126953, 0.030532076954841614, 0.0669392466545105, 0.047278964519500734, -0.05225785374641419, 0.1053439736366272, -0.028813144564628603, -0.06677231788635254, -0.03873134255409241, -0.037678411602973944, 0.018375349044799805, 0.0535510540008545, -0.04328272640705109, -0.19058178663253786, 0.08318777680397034, 0.14130855798721315, -0.0680807113647461, 0.10294089317321778, -0.10136892795562745, 0.02816745638847351, 0.10579575300216676, -0.19959769248962403, 0.13649389743804932, 0.07944416403770448, -0.07917193174362183 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.1234825849533081, -0.020829875767230988, -0.02393791824579239, 0.018877859413623813, 0.09432607293128968, -0.16164741516113282, -0.22014412879943848, -0.09130792021751405, -0.04706376492977143, 0.15522432327270508, -0.029039710760116577, -0.031754308938980104, -0.03698011636734009, 0.18227236270904543, 0.07966721057891846, -0.06780954599380494, -0.006548837572336198, 0.14261587858200073, 0.0769430160522461, 0.15762989521026613, 0.22904670238494873, -0.1416603446006775, -0.0737931787967682, 0.09494055509567262, -0.1472322940826416, 0.05887424349784851, -0.04772862792015076, -0.027891427278518677, -0.029104146361351016, 0.09508336782455445, -0.03234574794769287, -0.06545701622962952, 0.012853631377220155, 0.12505698204040527, -0.049321439862251286, 0.0003583205863833428, 0.08989673852920532, -0.06650416254997253, -0.1035747766494751, 0.05140041708946228, 0.10241649150848389, 0.07386070489883423, -0.05270916223526001, -0.030713170766830444, -0.05634076595306397, 0.07117852568626404, -0.001155551988631487, -0.034758451581001285, -0.09090323448181153, -0.0766309678554535, -0.03995688557624817, 0.03749687373638153, -0.05680857300758362, 0.0006861198693513871, 0.15069802999496462, 0.10847475528717042, 0.010205978900194168, -0.12775883674621583, -0.15257774591445925, 0.06052213311195374, -0.08862208127975464, -0.08709388971328735, -0.06496164798736573, -0.058294337987899784 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04023416340351105, 0.039600670337677, 0.1099659562110901, 0.0523891031742096, 0.07471883296966553, -0.029183736443519594, 0.019930019974708557, -0.16812182664871217, -0.021694956719875338, 0.02869044840335846, 0.13277827501297, -0.1632423281669617, 0.0972535789012909, -0.052157968282699585, -0.0657926082611084, 0.07539914846420288, 0.03481692373752594, 0.09361291527748108, 0.03305327296257019, 0.050232821702957155, 0.1600267767906189, -0.28022027015686035, -0.12037352323532105, -0.016325494647026064, 0.0913201928138733, 0.03843234181404114, 0.046637958288192755, 0.14315677881240846, 0.055412757396698, 0.05592989921569824, 0.019782817363739016, 0.020721739530563357, -0.014244787395000458, -0.02345380336046219, 0.059530031681060795, 0.03263750970363617, 0.05108748078346253, 0.07315515875816346, 0.11778295040130615, 0.10875463485717773, 0.024461035430431367, 0.1304213881492615, -0.05362701416015625, -0.04490371346473694, 0.10147377252578736, -0.09379475712776185, 0.08394906520843506, 0.330657434463501, -0.014517024159431458, -0.04395835399627686, -0.09330778121948242, 0.04944454431533814, -0.05157565474510193, 0.1124221682548523, 0.08173971176147461, 0.1335316300392151, 0.25481126308441165, 0.005343244224786759, 0.04781250059604645, -0.11506056785583496, 0.021726667881011963, 0.09939022064208985, 0.06342844963073731, -0.1552680492401123 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.06848101019859314, -0.10930615663528442, 0.06552637219429017, 0.008842208981513977, -0.11889449357986451, -0.07614921927452088, -0.005060354247689247, -0.08889713287353516, 0.04453932642936707, -0.23205943107604982, -0.010128148645162583, -0.006713415682315827, 0.2133868217468262, -0.11846865415573121, 0.09688826203346253, 0.10653154850006104, 0.06632580757141114, 0.06783800721168519, -0.014527446031570435, -0.0862267017364502, -0.01888347864151001, -0.11884244680404664, 0.04170435070991516, -0.008645528554916381, 0.22113044261932374, 0.10097118616104127, -0.009439250826835633, 0.14622141122817994, -0.06701259016990661, -0.10636955499649048, 0.009775080531835557, 0.05835699439048767, -0.13087635040283205, -0.0863355576992035, 0.11641517877578736, 0.14831286668777466, 0.13141543865203859, 0.03196497857570648, -0.23051669597625735, 0.07393045425415039, -0.07799232602119446, 0.010481160879135133, 0.12098371982574463, 0.049097105860710144, 0.1440303683280945, 0.02737294435501099, -0.017392992973327637, -0.15101996660232545, -0.05363325476646424, -0.14365413188934326, -0.023877631127834323, 0.07613911628723145, 0.12639302015304565, 0.22948811054229737, 0.06466156244277954, -0.041327479481697085, -0.04359241127967835, -0.04632358551025391, -0.009312279522418976, 0.25544493198394774, -0.16455937623977662, 0.0656270682811737, 0.009500266611576082, 0.21101534366607666 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.08707971572875978, -0.14912575483322144, 0.06401315331459045, -0.031088617444038392, 0.07732529640197755, 0.08579239249229431, -0.05175190567970276, 0.024211795628070833, -0.03923889994621277, 0.03171606361865997, -0.08031414151191713, 0.14893559217453003, 0.04064154922962189, 0.09606934189796448, 0.02255816608667374, 0.09853175282478333, -0.11046166419982911, 0.08326507210731507, -0.07564935088157654, 0.016066119074821472, -0.041227176785469055, -0.06038395762443543, 0.06878814101219177, -0.043046191334724426, -0.17974557876586916, -0.10053118467330933, -0.09831181764602662, -0.04287020564079285, -0.006036249548196793, -0.04310963451862335, 0.14015234708786012, 0.2929096221923828, -0.12024753093719483, -0.10356057882308961, -0.023229400813579562, -0.005008264258503915, -0.04292092919349671, -0.0409854531288147, -0.2263660192489624, 0.061915493011474615, 0.00890762060880661, -0.19138007164001467, -0.11265894174575806, 0.08655251860618592, 0.09903228282928467, -0.13948402404785157, -0.2810667991638184, 0.02035396993160248, 0.015706945955753327, 0.10857971906661988, -0.10291129350662231, 0.007100880891084672, 0.015069814026355745, -0.017335021495819093, -0.11816313266754151, 0.042490267753601076, -0.12426069974899293, -0.0019058214500546457, -0.2096557378768921, 0.0873731017112732, 0.024288982152938843, 0.08895135521888733, -0.16832067966461184, 0.07588295340538026 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.057884967327117925, 0.0439391702413559, -0.16169559955596924, 0.009740016609430314, -0.11838806867599488, 0.11411018371582032, -0.09788298606872559, -0.08887202739715577, -0.3046143054962158, 0.05200406312942505, -0.04643376767635346, 0.05213037729263306, -0.019317670166492464, 0.1329062819480896, 0.13891453742980958, 0.07669196724891664, -0.003093625791370869, 0.03270662128925324, 0.030151405930519105, -0.0952644944190979, -0.04034591913223267, -0.11495540142059327, 0.004985726624727249, 0.11493793725967408, -0.10634329319000245, 0.010140714794397356, -0.08983219861984254, -0.06378405690193177, -0.07110406160354614, 0.05727513432502747, 0.015843383967876434, 0.02228583246469498, 0.0416099637746811, 0.014166717231273652, 0.0728929877281189, -0.08436155915260315, 0.13752254247665405, -0.04533374309539795, 0.0375019907951355, -0.18743134737014772, -0.012915347516536713, -0.22854993343353272, -0.09538044333457947, 0.12740445137023926, 0.1626431465148926, 0.07955495715141297, -0.01506536453962326, -0.2084432125091553, -0.09804592728614808, -0.1381100058555603, 0.09730799794197083, -0.04935318529605866, 0.06955183148384095, 0.12312535047531128, -0.03350912928581238, -0.1881483793258667, -0.0027698459103703502, 0.020565667748451234, 0.16217279434204102, -0.23488373756408693, -0.04008347094058991, 0.15409330129623414, 0.034404614567756654, -0.07099302411079407 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.03115525245666504, 0.01666734963655472, -0.002432612515985966, 0.039904633164405824, -0.2659172296524048, 0.14665787220001222, -0.043918952345848083, 0.09367424845695496, 0.0543311893939972, 0.022560866177082063, 0.1021790623664856, 0.061192721128463745, 0.07557402849197388, -0.08174930810928345, 0.20140602588653567, 0.04026255309581757, 0.1578865170478821, 0.1631597399711609, 0.1039096474647522, 0.1608522176742554, -0.1830028533935547, 0.10983035564422608, 0.13480358123779299, 0.029751434922218323, -0.06795930266380311, 0.21711649894714358, 0.08020517230033875, -0.16641730070114136, 0.07196681499481201, 0.06775570511817933, -0.11419013738632203, 0.09760375022888185, -0.020090752840042116, -0.0011135627515614034, -0.25790507793426515, 0.06500419974327087, -0.055413126945495605, 0.08927081823348999, -0.008234364539384842, -0.08998864889144897, 0.02647387683391571, -0.16018409729003907, -0.11644484996795655, -0.07977027893066407, 0.12926460504531861, -0.011496176570653917, -0.04810440242290497, -0.0006937441416084767, -0.05677672624588013, -0.09204076528549195, 0.1996765971183777, -0.00036228173412382607, 0.0005938814487308265, -0.158585262298584, 0.18267284631729128, 0.019832706451416018, 0.01750674545764923, -0.06764278411865235, -0.08632082343101502, 0.039947432279586796, -0.10215598344802856, -0.14659143686294557, 0.07071580290794373, 0.01511470377445221 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.005616534128785134, 0.06350314617156982, -0.07380309104919434, -0.2772592782974243, 0.060631954669952394, 0.08525519371032715, 0.01813384294509888, 0.14123276472091675, 0.04390429556369782, 0.044971209764480595, -0.055254065990448, -0.1341496706008911, -0.053913265466690063, -0.1401347279548645, -0.030676576495170596, -0.1775887966156006, -0.07955005764961243, 0.037775915861129765, 0.04790952205657959, -0.05615787506103516, -0.06958351135253907, -0.013783918321132661, 0.09076988101005555, 0.004402227699756622, -0.05643178820610047, 0.06620742678642273, -0.18465319871902466, -0.012656933069229126, -0.024841929972171786, 0.1307183861732483, -0.1310970425605774, -0.1556933879852295, 0.012253131717443466, 0.13440743684768677, -0.09375093579292298, -0.036416980624198916, 0.14994914531707765, -0.04736040532588959, -0.0479623019695282, 0.04820806086063385, -0.16618484258651733, -0.0037907060235738755, -0.1278513789176941, 0.04693722128868103, 0.15148823261260988, 0.0495850682258606, -0.023469436168670657, 0.19098905324935914, -0.05911596417427063, -0.016028621792793275, 0.10531998872756959, -0.0480287104845047, -0.10489003658294678, 0.10313191413879395, -0.14561644792556763, 0.11899780035018921, -0.21184506416320803, 0.049410301446914676, -0.1282503366470337, -0.04886947274208069, -0.04700243175029755, -0.00695885568857193, 0.11934145689010621, 0.1323091268539429 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.11651498079299927, 0.23831448554992676, 0.027992460131645205, 0.19559123516082766, -0.17558906078338624, -0.059865391254425054, -0.05028166770935059, -0.23695869445800782, -0.021954102814197542, -0.0067275606095790865, -0.038687086105346685, 0.04768983721733094, -0.07496903538703918, 0.10304383039474488, -0.04063031375408173, 0.16692508459091188, -0.05664398670196533, 0.023986710608005526, -0.07781835198402405, 0.020727074146270754, 0.024676603078842164, 0.0025385605171322823, 0.26805708408355716, 0.06430545449256897, 0.022734594345092774, 0.010058120638132096, 0.06041367650032044, -0.03634377717971802, -0.07308735847473145, -0.046744102239608766, -0.1532921075820923, -0.13298919200897216, -0.004727771505713463, 0.050001668930053714, -0.03212589323520661, 0.023868156969547274, 0.010583464056253433, 0.03036564588546753, -0.030109480023384094, -0.005488818511366844, 0.055078864097595215, -0.015730528533458712, -0.10448163747787476, -0.13946796655654908, 0.1604326367378235, -0.13205252885818483, 0.08997308015823365, -0.04084554314613342, 0.10825914144515991, 0.00023532644845545292, 0.03316903412342072, 0.16833672523498536, 0.09072048664093019, 0.006349048018455506, -0.04502818286418915, 0.05267816781997681, -0.03091685175895691, 0.18585561513900759, 0.04201416075229645, 0.04099823534488678, 0.0728781521320343, 0.1946049451828003, 0.05273885130882264, -0.09278250932693483 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.09008265137672425, 0.09444794654846192, -0.00981503874063492, 0.03900933265686035, 0.04509344696998596, -0.11158969402313233, 0.24124536514282227, 0.08640522956848146, -0.10840365886688233, -0.13183958530426027, -0.05102927684783936, 0.014844958484172822, 0.0032808747142553333, -0.20473237037658693, -0.08640449643135072, 0.03019891977310181, -0.030769127607345584, 0.015895867347717287, 0.17367749214172365, 0.030773258209228518, 0.15259575843811035, 0.06103917360305786, -0.020080851018428804, 0.05882249474525452, 0.16142495870590212, 0.05391612648963928, -0.16295835971832276, 0.07790512442588807, -0.16417032480239868, -0.08601533770561219, -0.17119702100753786, -0.035549476742744446, 0.06641440391540528, -0.1431797742843628, -0.04885662198066712, -0.011622244119644166, -0.08605097532272339, 0.10339570045471191, 0.05369879007339478, 0.05225576162338257, 0.059542316198349, 0.02762398421764374, 0.07899049520492554, 0.037317472696304324, 0.02080695331096649, 0.04990842640399933, -0.15785301923751832, 0.11045544147491455, 0.03680036664009095, -0.15026503801345825, -0.016562877595424654, 0.12407262325286866, -0.08454413414001466, -0.0221390500664711, -0.1419234037399292, 0.010106084495782854, -0.036841544508934024, -0.10093410015106202, 0.05574867725372315, 0.04006403684616089, 0.08855010867118836, 0.09763817191123964, 0.10067039728164673, 0.19065986871719362 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04656624495983124, -0.09128222465515137, 0.09101788997650147, -0.06524085998535156, -0.0684010922908783, 0.07666631937026978, -0.09605043530464173, -0.22396039962768555, 0.035178011655807494, -0.03707039952278137, 0.018392549455165864, 0.052904522418975836, -0.25827965736389163, -0.12266216278076172, -0.014357951283454896, 0.060815644264221196, 0.02690240740776062, 0.019286395609378816, -0.14465779066085815, 0.01592504680156708, -0.07727718949317933, 0.028601253032684328, -0.09988487958908082, 0.021258704364299774, 0.10085972547531129, 0.008617684245109558, -0.21211764812469483, -0.15096615552902223, 0.02756665349006653, 0.08591042160987855, 0.004613506048917771, -0.11974277496337891, -0.07846873998641968, -0.06289806962013245, 0.033279821276664734, -0.19434568881988526, -0.1631219506263733, 0.19093426465988161, -0.041380399465560914, -0.12663426399230956, 0.044485342502594, -0.06252459287643433, 0.11022825241088868, 0.10826722383499146, -0.042922389507293705, 0.030620339512825015, 0.02439566254615784, -0.006611522287130356, 0.036888870596885684, -0.09055358171463013, -0.040510627627372744, -0.02036150246858597, -0.05262433290481568, -0.01633989214897156, 0.14509518146514894, -0.0388642966747284, -0.03687635362148285, -0.04695463478565216, 0.07364113926887512, -0.09185190796852112, -0.19370213747024537, 0.017715834081172943, -0.17323273420333862, -0.10321749448776246 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.15362436771392823, 0.11170163154602052, 0.031721821427345274, -0.039095336198806764, 0.16595507860183717, 0.03562928140163422, -0.07931173443794251, 0.04014990627765656, 0.037923553586006166, -0.09456157684326172, -0.03854897618293762, 0.042262861132621767, -0.1153950333595276, 0.09674461483955384, -0.03820254504680634, 0.11149623394012452, 0.05249178409576416, -0.11570172309875489, -0.15826855897903444, -0.19585489034652712, 0.08820565938949586, 0.09785673022270203, -0.07401368021965027, 0.15470315217971803, 0.05275973677635193, 0.21908979415893556, -0.18388465642929078, -0.027739140391349795, -0.07083850502967835, -0.0809626579284668, -0.09583745002746583, 0.1486399292945862, -0.033558064699172975, 0.10700725317001343, 0.10137505531311036, 0.050829917192459106, -0.03014723062515259, 0.1663873076438904, -0.10969250202178955, -0.006149476394057274, -0.0003762817243114114, -0.07364911437034607, -0.06970731019973755, -0.014958950877189637, -0.22622437477111818, 0.036369788646698, 0.15703039169311525, -0.04224987030029297, -0.028631827235221865, 0.02650406062602997, 0.17452845573425294, 0.04282922744750977, 0.018209977447986605, -0.015630346536636353, -0.056578135490417486, -0.06467919945716859, -0.06302257180213929, -0.004961065948009491, -0.03860033750534058, 0.1825885772705078, -0.014948400855064393, -0.10231730937957764, -0.0373412162065506, -0.017736148834228516 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.14882521629333498, -0.131590735912323, 0.07863279581069947, 0.04937417805194855, 0.1068509340286255, -0.17685384750366212, -0.22886199951171876, 0.12248705625534058, -0.047003287076950076, -0.09327409267425538, -0.1601836085319519, -0.13597806692123413, -0.03479618430137634, -0.005535254627466202, 0.03595044016838074, 0.14333524703979492, 0.1267411708831787, 0.07706730365753174, 0.0960557222366333, -0.1446421027183533, -0.12525933980941772, -0.11094775199890138, -0.05654978156089783, -0.006028753519058228, -0.0723928689956665, 0.09836362004280091, 0.19667639732360842, 0.09687443971633912, -0.0015779217705130578, 0.08733118176460267, -0.008081161230802537, -0.04102186858654022, 0.1896182179450989, -0.06210827231407166, 0.050666904449462896, 0.058336800336837774, -0.025623270869255067, 0.09008227586746216, -0.09273629188537598, -0.13897809982299805, -0.18059362173080445, 0.05550479292869568, 0.0207334041595459, 0.10726360082626343, -0.13227331638336182, 0.03126339614391327, -0.0625943124294281, -0.025165635347366336, -0.03847178518772126, 0.11297233104705812, -0.05759356021881104, -0.01654592603445053, 0.09455388188362122, -0.030880290269851687, 0.15445343255996705, -0.017908240854740142, -0.13431925773620607, 0.11404596567153931, -0.00109143378213048, 0.01997846215963364, 0.09138846397399902, 0.01067204922437668, -0.014251039922237398, -0.16503783464431765 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.1895889163017273, -0.04615845978260041, -0.04664191007614136, -0.011610393971204759, -0.045338580012321474, 0.03554818034172058, 0.025148442387580874, 0.006485610455274582, -0.02167314738035202, -0.12630683183670044, -0.08871809244155884, -0.004140081256628037, -0.13533889055252077, -0.02639373540878296, -0.014456681907176971, 0.04183980226516724, 0.049949824810028076, -0.013043972849845887, 0.02258404791355133, -0.04523502886295319, -0.05863200426101685, -0.05475180745124817, 0.04760313928127289, 0.02780810594558716, -0.11196281909942628, -0.008561495691537857, -0.019623395800590516, -0.07303571105003358, -0.04917300939559937, 0.11997361183166505, -0.0703859031200409, 0.13821818828582763, -0.07997861504554749, 0.1734572172164917, -0.06222254633903504, 0.09266047477722168, 0.08576619029045106, -0.15059113502502441, 0.08883388638496399, -0.1953678607940674, -0.0019322792068123817, 0.06559244394302369, 0.07591567039489747, -0.11385679244995117, -0.04482828080654144, -0.019346387684345247, 0.04723278880119324, -0.05869026184082032, 0.056100291013717656, 0.034900355339050296, 0.15610985755920412, 0.11932411193847657, -0.02013845443725586, 0.019867296516895297, -0.04137624800205231, -0.15514411926269533, 0.07580380439758301, -0.11863820552825928, -0.07308067679405213, 0.0941347897052765, -0.025789487361907962, -0.09118813276290894, -0.032974237203598024, -0.2538511037826538 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.11787796020507812, -0.006824160367250443, -0.09444462656974793, -0.20306844711303712, -0.06878376007080078, 0.08145198225975037, -0.2016406536102295, -0.12796891927719117, -0.09301565289497377, 0.04524890780448914, -0.09327890276908875, -0.07578708529472351, -0.10326430797576905, 0.03528166115283966, -0.03615992665290833, 0.043554615974426274, -0.006205312535166741, 0.1821915149688721, -0.054949855804443365, 0.031943184137344365, -0.04576405882835388, 0.06659671664237976, -0.2158068656921387, -0.06429525613784791, -0.07967752814292908, 0.025233143568038942, 0.008658318221569062, -0.07623615264892579, 0.09541895985603333, 0.04561530351638794, -0.0770784318447113, 0.1486782431602478, -0.028157544136047364, -0.10982894897460938, -0.15227681398391724, 0.18004627227783204, -0.011059050261974335, -0.06890484094619752, -0.052474194765090944, 0.02957790791988373, 0.10607149600982667, -0.02566501498222351, 0.010056420415639878, -0.08886452913284303, -0.03817350864410401, 0.12412992715835572, 0.09663057923316956, -0.0626058280467987, 0.07774339318275453, -0.002580976113677025, -0.11315392255783081, 0.10488804578781129, 0.15105247497558594, -0.01742921322584152, -0.0504132091999054, 0.16104589700698854, -0.05838408470153809, -0.1065148115158081, -0.1310197353363037, 0.13514236211776734, 0.01088152676820755, -0.14683669805526733, -0.008904211968183518, 0.10100908279418946 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.017992483079433443, 0.17133426666259766, -0.0410049706697464, 0.20644929409027102, -0.1214077353477478, 0.00589255876839161, -0.053945463895797734, -0.05854312181472779, -0.017858909070491792, 0.009789614379405976, 0.12433193922042847, -0.005008409544825555, -0.04367483258247376, -0.01527744233608246, 0.10645850896835328, -0.05992242693901062, 0.12591670751571657, -0.007565046846866608, -0.10985707044601441, -0.013777922093868257, 0.03718110918998718, -0.25345544815063475, 0.13185510635375977, 0.015011522173881532, 0.15480668544769288, -0.03907980024814606, 0.1419255018234253, -0.1446940302848816, 0.05441447496414185, -0.035757902264595035, -0.0480845332145691, 0.004277972131967545, -0.05893867015838623, 0.057261335849761966, 0.05569640994071961, -0.11951037645339967, -0.04324319660663605, -0.054808717966079716, -0.13852776288986207, 0.08425887823104859, -0.08601288795471192, -0.003847665712237358, -0.09549427628517151, -0.013580983877182007, -0.015279446542263032, -0.015589798986911775, 0.021023143827915192, -0.13301943540573122, 0.001514678541570902, -0.15624086856842043, -0.029623165726661682, 0.05686108469963074, -0.057147842645645146, -0.11557924747467041, 0.1278529167175293, 0.05642106533050537, -0.10237014293670654, -0.2163661003112793, 0.10791306495666504, -0.07381575703620911, -0.14954109191894532, 0.057647871971130374, -0.05773962736129761, 0.00857020914554596 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.10707526206970215, -0.07447548508644104, -0.0017020413652062416, -0.011054065823554993, -0.04409226179122925, -0.018505367636680602, -0.027567052841186525, -0.026164543628692628, -0.15504293441772463, -0.044816535711288456, 0.08126740455627442, -0.08974009156227113, -0.16429653167724612, -0.1298686742782593, -0.09378802180290223, 0.0033089749515056613, 0.07041110396385193, 0.042091828584671025, 0.23207998275756836, -0.0957147479057312, 0.045730963349342346, -0.13751845359802248, -0.023929658532142642, 0.15877615213394167, -0.006174330040812493, 0.12098500728607178, 0.09341797232627869, 0.26205737590789796, 0.04472121000289917, 0.0041082225739955906, 0.07035855650901794, 0.050179976224899295, 0.04447813630104065, -0.08612155318260194, -0.1838176727294922, 0.05165074467658997, 0.10770374536514282, 0.16531498432159425, 0.010217832773923874, 0.02456164211034775, -0.19892694950103762, 0.04043143391609192, -0.14704017639160158, 0.10222103595733643, -0.10007604360580445, -0.0739169180393219, -0.06850969791412354, 0.15068007707595826, 0.11416479349136353, -0.06173423528671265, -0.17140566110610964, 0.08712642788887025, 0.06655892729759216, 0.041705387830734256, 0.09388317465782166, -0.010243703424930573, -0.07599342465400696, -0.04403622150421143, -0.010276268422603608, -0.09117684960365297, -0.04800336658954621, 0.006530560553073883, 0.0736165463924408, -0.1733860969543457 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.10544517040252686, -0.08264385461807251, 0.03791517317295075, 0.10201727151870728, -0.028035548329353333, -0.08076484799385071, -0.07097279429435731, -0.018224477767944336, 0.04173188209533692, -0.06493379473686219, 0.05872593522071839, 0.1312470316886902, -0.04060717821121216, 0.12760753631591798, 0.04331079423427582, -0.0854161262512207, -0.14956794977188112, 0.02466021925210953, 0.01170908734202385, -0.13484243154525757, 0.09623417258262634, 0.05009922385215759, -0.024679355323314667, -0.06432576179504394, -0.04468362629413605, -0.1406104803085327, -0.1391505241394043, -0.0747473180294037, -0.06161211133003235, 0.059346592426300054, 0.09291451573371888, -0.005609947443008423, 0.10223922729492188, -0.05095951557159424, 0.06530373096466065, 0.0409294992685318, -0.022482655942440033, -0.06993179321289063, 0.050499475002288824, -0.003299647942185402, -0.15405579805374148, 0.05043435692787171, 0.10104275941848756, -0.04174294471740723, -0.15957776308059693, -0.0058726191520690925, -0.07095209956169128, -0.03930763900279999, 0.1274155020713806, 0.052149426937103276, 0.01592341959476471, 0.06605708003044129, 0.0003616300877183676, -0.060786795616149907, -0.2716280221939087, -0.06198047995567322, -0.04723232388496399, 0.06801457405090332, -0.018231426179409028, 0.11219073534011842, 0.1828775405883789, -0.07735127806663514, -0.09912055730819702, -0.16406011581420898 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.04031769335269928, -0.009845252335071565, 0.22593090534210206, -0.06920498609542847, -0.03646935522556305, -0.14465347528457642, 0.17388726472854615, -0.020289683341979982, -0.09443684816360474, -0.0023423105478286746, -0.05053583383560181, -0.08589723706245422, -0.05352701544761658, 0.13250139951705933, -0.04059417247772217, -0.07199405431747437, 0.25263681411743166, -0.0625557005405426, 0.05342011451721192, -0.04015575349330902, 0.07708369493484497, -0.048024904727935795, -0.10793431997299195, -0.11335928440093995, -0.018375572562217713, -0.1604738473892212, 0.08690063357353212, -0.1300346851348877, 0.04662900567054749, 0.001018551830202341, 0.03711725473403931, 0.053843700885772706, -0.04982116222381592, 0.10985816717147828, -0.018844908475875857, -0.041908198595047, -0.057624179124832156, 0.03861663639545441, 0.13289607763290406, -0.15620143413543702, 0.03140257000923157, -0.11439807415008546, 0.049617940187454225, -0.04535531103610993, -0.013022316992282868, -0.09505179524421692, 0.0743800163269043, 0.02937743067741394, -0.16646980047225954, 0.1080946683883667, -0.126372766494751, 0.11740618944168091, 0.15466718673706056, 0.1047986626625061, 0.045114079117774965, -0.0070339620113372804, 0.010864712297916412, 0.10652247667312623, -0.19992675781250002, 0.1392837405204773, -0.07880680561065674, 0.03949481844902039, 0.012517461180686952, 0.11453614234924317 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.12224450111389161, -0.06634783148765565, -0.00422571524977684, 0.15363770723342896, 0.015670385956764222, 0.08002979755401612, 0.09943943619728089, -0.010988277941942216, 0.023810315132141116, 0.10791947841644288, -0.08157915472984315, -0.08989421725273133, 0.0025405207648873333, 0.020533256232738495, 0.07243685126304626, -0.08935744166374207, 0.17699214220047, 0.0992136836051941, 0.031788510084152226, -0.04684760570526123, 0.02431682199239731, 0.09361075758934022, -0.011422555148601533, 0.09967596530914308, 0.08246182203292847, 0.14587147235870362, 0.018418125808238983, -0.08038504123687745, 0.17148315906524658, 0.21982963085174562, -0.0989822566509247, 0.04833418428897858, -0.043141433596611024, -0.012706716358661652, -0.11758350133895874, 0.03971062302589417, 0.057460892200469973, 0.010086706280708313, 0.021790339052677157, 0.10061070919036866, 0.037287601828575136, -0.07195738554000855, 0.05769559144973755, -0.09916283488273621, -0.018941792845726016, -0.04639964103698731, 0.05921490788459778, -0.08765318393707276, 0.04303788840770722, 0.0889375925064087, 0.16650494337081911, 0.0531131386756897, 0.021440601348876955, -0.0033826965838670733, 0.060016685724258424, 0.07977949380874634, 0.06683390140533448, 0.035715365409851076, -0.01783711016178131, -0.13770185708999635, -0.14406323432922363, -0.05038898587226868, 0.007315271347761155, -0.015059511363506318 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.020827497541904452, 0.11266359090805055, -0.09559450149536133, 0.028634369373321533, 0.05785214900970459, -0.03091144561767578, 0.13191368579864501, 0.021348005533218386, -0.14059629440307617, -0.20042157173156738, -0.05075175762176514, 0.007458640635013581, 0.11541839838027955, 0.004513401538133621, 0.13852615356445314, -0.015602388978004457, -0.016821421682834625, 0.19050636291503908, 0.04348079562187195, 0.051283645629882815, 0.0390364944934845, 0.08091803193092346, 0.001323976740241051, -0.014876614511013032, -0.13128496408462526, 0.21531198024749756, -0.03416780829429627, -0.07742950916290284, -0.08321860432624817, -0.0990670919418335, 0.06436312794685364, -0.012364962697029115, -0.027898159623146058, 0.08134522438049317, 0.028725731372833255, 0.049964696168899536, -0.04898282289505005, -0.09351271986961365, -0.0659711241722107, -0.004404489696025848, 0.08862931728363038, -0.1230545997619629, -0.1107646942138672, 0.020288103818893434, -0.0807554066181183, -0.01772466152906418, -0.07864683866500854, 0.11169905662536622, -0.004260192811489105, 0.013807164132595064, 0.04122722744941712, 0.01519005298614502, -0.18773127794265748, 0.012702395021915436, 0.02098069339990616, 0.10114479064941406, -0.09531794786453247, -0.06009569764137268, -0.08424944877624513, 0.20112431049346924, 0.014947175979614258, 0.1779559135437012, 0.014393723011016846, 0.1431443214416504 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.09766390323638917, -0.10799314975738526, -0.034598177671432494, 0.06088438630104065, 0.03496544659137726, -0.023346665501594546, -0.08824188113212586, -0.12085736989974977, -0.05900576710700989, 0.037687653303146364, -0.10518801212310791, -0.1077099084854126, 0.017250441014766693, 0.2339624881744385, -0.030309826135635376, 0.1049093246459961, 0.03779101073741913, -0.0014777219854295255, 0.05400944352149964, -0.03263184726238251, 0.15885306596755983, -0.11980929374694825, -0.012194492667913438, 0.00960042029619217, 0.1414874076843262, 0.04683049023151398, 0.0024290913715958595, -0.026938977837562564, 0.0172339141368866, -0.10026686191558838, 0.0688896656036377, 0.05049699544906616, 0.05298337936401368, 0.047329059243202215, -0.000287610269151628, -0.12186838388442994, 0.06588021516799927, 0.038182401657104494, 0.047400787472724915, 0.19595620632171631, -0.005525899678468705, -0.050690662860870365, 0.02349771857261658, 0.12466951608657838, -0.07421521544456482, -0.03795541226863861, -0.11764731407165528, -0.027355578541755677, 0.0388288825750351, 0.12046004533767701, 0.05373967289924622, -0.057722562551498414, 0.1088335156440735, -0.20492320060729982, -0.06576579809188843, -0.09036909341812134, -0.04792973995208741, 0.07064716219902038, -0.01746136546134949, -0.023550331592559814, 0.07886293530464172, -0.003057244420051575, -0.09477243423461915, 0.06365867853164674 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.03563663959503174, -0.11474686861038208, -0.0463595986366272, -0.10452533960342408, -0.07641439437866211, 0.17327212095260622, 0.11285940408706666, -0.024201983213424684, -0.01104894056916237, -0.05457119941711426, 0.24972004890441896, -0.04246633052825928, 0.002106202207505703, -0.02764328420162201, 0.04410329163074494, 0.3170974731445313, 0.13243587017059327, -0.030047878623008728, 0.0732424020767212, 0.06027076840400696, -0.051092618703842164, 0.04066570997238159, 0.03390592634677887, -0.004511330276727676, 0.01564762592315674, 0.011273793876171112, 0.1279811978340149, 0.08253722190856934, -0.16492170095443726, -0.09768953919410706, 0.027464720606803897, 0.17236962318420412, -0.07393953204154968, 0.07538656592369081, -0.003659729287028313, 0.024622276425361633, -0.05969170928001404, 0.03982960879802704, 0.07271748781204224, 0.09423143267631531, -0.15003284215927126, 0.08123335838317872, 0.06289995908737182, 0.0700680136680603, -0.09401565790176392, 0.01993970721960068, -0.12808066606521606, -0.009103266894817353, 0.11159765720367432, 0.2881460666656494, 0.028267845511436462, -0.15717507600784303, -0.008154851198196412, -0.1256680130958557, 0.0028408445417881013, -0.09735287427902223, -0.13455077409744262, 0.02043185979127884, -0.02192441523075104, 0.06917845010757447, 0.11938104629516602, 0.15770882368087769, 0.13992298841476442, -0.006656284630298615 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.07065731883049012, -0.04378200471401215, 0.04814814627170563, 0.1211145281791687, -0.14377914667129518, 0.06845011115074158, 0.04960009455680847, 0.1518261194229126, -0.16606998443603516, -0.18845858573913576, -0.22453217506408693, -0.08299645781517029, 0.009945445507764817, -0.02595769762992859, 0.01787928640842438, 0.0189499631524086, -0.01722007989883423, -0.035502871870994566, -0.03752224147319794, -0.05946497917175293, 0.0774728298187256, 0.12016978263854981, -0.05896320343017578, 0.007912172377109528, -0.02163439840078354, 0.0657267689704895, -0.08859664797782899, -0.02983231544494629, 0.13985620737075807, -0.05895799398422241, -0.060362040996551514, 0.07130162119865417, -0.03759599626064301, -0.08881881833076477, -0.008422330021858215, -0.09179843068122864, -0.022295917570590976, -0.12557748556137086, -0.00389053076505661, -0.20051255226135256, -0.08185041546821595, 0.05462718605995179, 0.03140338361263275, 0.06966506838798524, -0.03965237438678742, 0.19457614421844482, 0.16616518497467042, -0.18289766311645508, -0.09205381870269776, -0.05938619375228882, -0.10925408601760865, -0.00278483796864748, -0.05530619025230408, 0.09396144151687623, -0.03980614840984345, 0.20782299041748048, -0.3392299890518189, -0.1920705556869507, -0.04464647769927979, 0.05643882155418396, -0.05177226662635803, -0.08128020763397217, -0.022612372040748598, 0.0032329980283975603 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.001050002034753561, -0.04980324506759644, -0.1540796995162964, 0.06898181438446045, 0.13645318746566773, 0.037082499265670775, 0.07714059352874757, -0.03846454322338105, 0.011514787375926972, -0.19457030296325684, 0.05640085339546204, 0.14111720323562624, 0.022739277780056, 0.03644812405109406, -0.07994223833084108, -0.1348413109779358, 0.07303518056869507, -0.1892361879348755, -0.029164198040962222, -0.025595766305923463, -0.1808143973350525, 0.014743439853191376, -0.08958157896995544, 0.08505306839942933, 0.04428461194038391, -0.06470535397529602, 0.0400885671377182, -0.09228233098983765, -0.0397912085056305, -0.21789314746856692, 0.07088595628738403, 0.03257996141910553, -0.23721938133239748, -0.02215743958950043, 0.041952410340309144, -0.06518564820289612, 0.015217697620391846, 0.12228775024414062, -0.004459939152002335, 0.07550497055053712, 0.08188393712043762, -0.10980979204177857, -0.07450231909751892, -0.020697447657585147, -0.08563027977943422, 0.05709498524665833, -0.0067945122718811035, 0.039597621560096746, -0.1620274066925049, -0.07631158232688905, 0.012411829084157944, -0.07410555481910706, 0.12229647636413575, -0.07338167428970337, 0.021132302284240723, 0.11365928649902345, 0.01557939350605011, -0.12280948162078859, 0.09388386607170106, -0.09713423252105713, 0.02224755734205246, 0.06133491396903992, -0.1438854217529297, -0.0555073618888855 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.17858705520629883, 0.19295320510864258, 0.00632619932293892, 0.13018462657928467, -0.06894491910934449, 0.01420617997646332, 0.1029438853263855, -0.04438360929489136, -0.03791475594043732, -0.09127835035324097, -0.12845523357391359, 0.07858038544654847, -0.10167386531829835, 0.14713219404220582, 0.024078750610351564, 0.12649832963943483, 0.11045784950256349, -0.01778131425380707, -0.1741022825241089, -0.034804639220237736, 0.04113342463970185, -0.09774648547172547, 0.054832810163497926, -0.08391242027282715, 0.021839706599712374, 0.01712435483932495, -0.0009657236747443676, -0.1451338529586792, 0.07825788855552673, -0.06296504139900208, 0.04228185713291169, 0.012476952373981477, -0.13817449808120727, 0.042425262928009036, 0.09244340062141419, -0.17747448682785036, -0.037412631511688235, -0.2086509943008423, 0.026013290882110598, -0.1396535277366638, 0.014049591124057771, 0.051226675510406494, 0.10122605562210084, -0.056330937147140506, 0.12598752975463867, 0.10723006725311279, 0.23602285385131838, 0.1811505675315857, 0.11061915159225465, 0.15184829235076905, 0.1837080717086792, 0.006000906601548195, -0.03313086330890656, -0.05324376821517945, -0.020239426195621493, 0.07085199356079101, 0.15200035572052004, 0.1511865258216858, 0.04470541477203369, -0.08640481233596803, 0.05443548560142517, 0.18436999320983888, 0.08013010025024414, 0.00977861061692238 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.012691208720207216, 0.09494208097457886, 0.01565065383911133, -0.062808758020401, -0.0652293622493744, 0.1519994854927063, -0.09087632298469545, 0.10781973600387573, -0.17423561811447144, 0.021950955688953402, -0.01043434888124466, -0.005746951699256897, -0.011477532237768174, 0.15927706956863405, 0.028912049531936646, -0.030078387260437014, -0.10148259401321412, 0.02509981095790863, -0.07803044319152833, -0.07823669910430908, -0.04832495450973511, 0.08793899416923523, 0.00986674502491951, -0.10117740631103517, -0.034419646859169005, 0.00389087051153183, -0.1797164559364319, 0.0021857358515262604, -0.17232282161712648, -0.06532847285270692, -0.31168565750122074, -0.10126731395721436, -0.011244375258684158, -0.08490728735923768, 0.04966152012348175, -0.04733609259128571, -0.0013451469130814075, -0.05907571315765381, -0.006985649466514587, -0.07594954967498779, 0.0649829626083374, 0.008584310859441757, -0.1527631998062134, 0.06772459149360657, 0.024099673330783847, -0.05037094354629517, 0.05555456280708313, -0.08690775632858277, -0.09984846711158753, 0.02354645282030106, 0.000855492614209652, 0.11404883861541748, 0.059998673200607304, -0.027793997526168825, -0.06219281554222107, -0.01386462450027466, 0.052208328247070314, 0.03222050964832306, 0.11271544694900514, -0.2083592414855957, 0.0649210512638092, 0.027109098434448243, -0.0003331445856019855, -0.006098498031497002 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.04019893705844879, 0.008755124360322953, 0.023218104243278505, -0.04810271263122559, -0.05211893320083619, 0.17195893526077272, -0.042431762814521795, -0.2559184551239014, -0.1303242802619934, 0.039306291937828065, -0.09880019426345826, -0.0391217052936554, 0.0308751255273819, -0.025857263803482057, 0.041287082433700564, -0.06606085896492005, -0.06023318767547608, 0.10547579526901246, 0.027111279964447024, 0.06251186728477479, 0.0002571182325482369, 0.0635424554347992, 0.019718106091022494, 0.008496813476085663, -0.025271067023277284, 0.06265642642974854, -0.08022531867027283, 0.004253907501697541, 0.17975393533706666, 0.007851402461528779, 0.06444520354270936, -0.10272969007492067, 0.08978641629219056, 0.16295000314712527, 0.10121332406997681, -0.02035706788301468, 0.08154719471931458, 0.09719703197479249, 0.025011390447616577, -0.02507566809654236, 0.04347887933254242, -0.04939267039299011, 0.09287419319152833, -0.003191107511520386, -0.09723179340362549, -0.05870162844657898, 0.04395223259925843, -0.045822915434837345, -0.06862195134162903, 0.011230769008398056, -0.10170161724090576, 0.01728246808052063, -0.07683833241462708, 0.13637425899505615, 0.01637704521417618, 0.09240203499794007, -0.05070599317550659, -0.1374794363975525, -0.13248273134231567, -0.11511501073837281, -0.05472027659416199, 0.11364476680755616, -0.009694156050682069, 0.08375166654586792 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.18831506967544556, -0.1225435495376587, -0.05973160862922669, 0.23039166927337648, -0.18430695533752442, 0.09295051097869873, 0.08625960350036621, 0.11813786029815675, 0.060512006282806396, -0.0938981592655182, -0.11776289939880372, 0.09409176111221314, -0.1370759963989258, 0.030833125114440918, -0.01983989030122757, 0.020984947681427002, 0.09214084148406983, 0.0960047721862793, 0.10450233221054078, -0.081359601020813, 0.10400862693786622, 0.0542610764503479, 0.10590271949768067, -0.16064397096633912, -0.08688625693321228, -0.1557998538017273, 0.019321355223655703, 0.15309323072433473, -0.035687151551246646, 0.041780057549476626, -0.19137426614761355, 0.03233565390110016, 0.029507577419281006, -0.0777228057384491, -0.004413972049951554, 0.05498568415641785, 0.041060179471969604, -0.11932578086853028, -0.10219132900238037, -0.00940624475479126, -0.020496055483818054, -0.140645968914032, 0.1081055998802185, -0.01736082285642624, -0.028044778108596805, -0.037817806005477905, 0.03062724769115448, -0.11383239030838013, 0.0204620897769928, 0.039237433671951295, -0.18523426055908204, -0.041500166058540344, -0.08361301422119141, 0.03741379976272583, 0.08024389147758484, -0.127323317527771, 0.00964791402220726, 0.08199530839920044, -0.06489559412002564, -0.1482475996017456, 0.17127249240875245, -0.1738331913948059, -0.00958714485168457, -0.016341844201087953 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.13477590084075927, 0.08443629741668701, -0.023792172968387607, -0.10600157976150514, -0.047797399759292605, 0.05822246074676514, -0.26556191444396976, -0.06319037675857545, 0.08955559730529786, 0.10170209407806396, -0.11401963233947754, 0.040520408749580385, 0.08656529188156128, -0.13780834674835205, 0.00941923037171364, -0.12406245470046998, 0.04608144760131836, -0.04164990782737732, 0.05990395545959473, -0.0521641492843628, 0.01646438091993332, 0.07159388661384583, -0.10225644111633302, -0.1373053550720215, 0.06563907265663148, -0.050703477859497074, 0.129734206199646, 0.009244773536920547, 0.05456573367118836, -0.12402163743972779, 0.06635615825653077, -0.13693910837173462, -0.10987684726715088, -0.030000358819961548, 0.16184593439102174, 8.999266428872944e-05, 0.04809698462486267, 0.0350265920162201, -0.11504377126693727, 0.039756521582603455, -0.017400683462619783, -0.01748233735561371, 0.1572330355644226, 0.0898240625858307, -0.11802855730056763, 0.08528891205787659, 0.09991498589515686, 0.012916217744350434, -0.06861017942428589, -0.06544864773750306, -0.07133269906044007, -0.08531286120414734, 0.18105818033218385, 0.13102645874023439, 0.028900590538978577, 0.15317684412002563, -0.1174820065498352, 0.10614349842071534, -0.0040280818939208984, 0.004019051417708397, -0.06872970461845399, 0.070713472366333, 0.039543697237968446, 0.08235554695129395 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.1270485043525696, -0.10002152919769287, -0.14240609407424928, -0.013594970107078552, -0.047965580224990846, -0.20946030616760256, 0.15133280754089357, 0.01639285683631897, -0.013190864026546479, 0.14229835271835328, 0.17549861669540406, 0.049805241823196414, 0.10813760757446289, -0.031197610497474673, -0.1147610902786255, 0.022246316075325012, 0.09237965345382691, -0.027682298421859743, -0.034069234132766725, -0.00731196478009224, 0.0885187566280365, -0.29946129322052, -0.08552404642105103, 0.18666831254959107, -0.05319938063621521, 0.08449956178665162, 0.10013309717178345, -0.009900831431150437, 0.015081819891929627, 0.09000542163848878, -0.015407240390777588, -0.07663276195526124, -0.14002561569213867, -0.10065590143203736, 0.05711098313331604, -0.15422881841659547, -0.06354304552078248, -0.12963603734970094, -0.08361113667488099, -0.10228550434112549, 0.18571022748947144, 0.06799439787864685, -0.034249219298362735, -0.019778744876384736, 0.1012168288230896, -0.21481184959411623, -0.09660632014274598, 0.00640241950750351, -0.1592210650444031, -0.10347952842712403, -0.1762228846549988, -0.1430135250091553, -0.07870327234268189, -0.026774778962135315, -0.05536423921585083, -0.003577222302556038, -0.012229235470294954, -0.043503403663635254, -0.04066389799118042, 0.13694021701812745, 0.07078721523284913, 0.003038613125681877, -0.005324304103851318, 0.0920632302761078 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.0969396710395813, -0.15447710752487184, -0.04933198690414429, 0.11368913650512696, 0.062035828828811646, 0.01237219125032425, 0.055313205718994146, 0.009632135927677156, 0.040476182103157045, 0.039608657360076904, -0.013298842310905458, -0.0026192236691713333, -0.06313759684562684, -0.0840290367603302, -0.035811406373977665, -0.0088375523686409, -0.013256801664829254, 0.11239053010940553, -0.12631728649139404, -0.12973796129226686, 0.14737647771835327, 0.08809375762939453, 0.1257219672203064, 0.07574683427810669, -0.09562584161758424, -0.06755938529968263, 0.059721249341964724, -0.10506538152694703, -0.025547078251838686, 0.18022422790527345, 0.11936116218566895, 0.12815113067626954, 0.017468009889125825, -0.21433081626892092, -0.0543694019317627, 0.08621480464935304, 0.08528297543525697, -0.00930241420865059, 0.06422109603881836, -0.11506919860839844, 0.041467425227165226, -0.2163097620010376, -0.0999430000782013, -0.0837776243686676, 0.13841867446899414, -0.10331647396087647, 0.21600131988525392, 0.07050811052322388, 0.003418976813554764, -0.07771475315093995, 0.083051735162735, 0.13328052759170533, -0.05847709178924561, 0.02131762653589249, 0.03362540304660797, 0.07908614873886109, -0.04277092516422272, 0.06576821208000183, -0.007925772666931152, -0.002714493125677109, -0.002191123552620411, 0.07650019526481629, -0.0773499608039856, 0.018076260387897492 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.11731233596801759, 0.11880297660827638, -0.05428614616394043, 0.009772496670484543, 0.06984571218490601, -0.013010695576667786, -0.00457039624452591, 0.09424681067466736, 0.02238435596227646, -0.05914026498794556, -0.07657021880149842, -0.1688230037689209, -0.024133779108524323, -0.10068317651748658, 0.055596268177032476, 0.009837790578603746, -0.028900521993637088, -0.017346389591693878, -0.2777359247207642, -0.03249349594116211, 0.0389093965291977, 0.1808131814002991, -0.1482883334159851, -0.0010056471452116968, 0.01658635288476944, -0.09933613538742066, -0.08152756690979004, -0.030595257878303528, 0.16857923269271852, -0.020828510820865634, -0.009816121309995651, 0.19142297506332398, -0.1652803659439087, 0.1796918511390686, -0.10938950777053834, -0.011858662217855455, 0.06695623397827148, -0.23137731552124025, 0.02587975561618805, 0.06006051898002625, -0.012858754396438599, -0.039612320065498356, 0.0793880343437195, 0.09091885089874269, 0.1252002000808716, 0.01023358479142189, -0.010030170530080797, 0.05514735579490662, -0.07814846634864808, 0.12459462881088257, 0.07811672687530519, -0.177669095993042, -0.17083207368850709, -0.12032434940338135, 0.106979238986969, 0.06462177634239197, -0.08527142405509949, -0.37401006221771244, -0.11821033954620362, 0.03388541638851166, -0.05872185826301575, 0.08676652312278749, -0.1419185519218445, -0.1312968373298645 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.19436211585998536, 0.03169426023960114, 0.04160500466823578, 0.058295369148254395, 0.0003770889015868306, 0.00939532294869423, 0.02205076515674591, -0.026759475469589233, 0.03296229839324951, 0.11244192123413087, 0.05557869672775269, -0.011246598511934281, -0.08781903386116029, 0.16815767288208008, 0.0892473876476288, 0.03814162611961365, -0.1998639464378357, -0.05100295543670655, 0.11517339944839478, -0.07113063335418701, 0.11710410118103028, 0.04366384744644165, -0.1309412121772766, 0.12380069494247437, 0.13291412591934204, 0.20420720577239992, 0.18012139797210694, -0.04384744465351105, -0.16480462551116945, 0.15743712186813355, -0.08866142630577088, -0.16659560203552248, 0.10659267902374268, -0.0204338937997818, 0.020579680800437927, 0.04883705973625183, 0.1004419207572937, -0.08425716757774354, 0.10402389764785767, -0.0013250268064439298, 0.04554199874401093, 0.2254283666610718, -0.06992152929306031, 0.008071988821029663, -0.11446926593780518, -0.022409236431121828, -0.07034000754356384, -0.08125160336494447, 0.059785985946655275, -0.14366406202316284, -0.08756818175315857, -0.09347830414772035, 0.16299822330474856, 0.11780312061309815, 0.15954041481018066, -0.013157090544700623, 0.04056522250175476, 0.09735767841339112, -0.0716178059577942, 0.07780035138130188, -0.06428512930870056, -0.22562501430511475, 0.030345192551612856, -0.01604766994714737 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.04136189818382263, 0.09208588004112245, -0.11561824083328248, -0.03994490206241608, 0.09318483471870423, 0.09430460929870606, -0.10299352407455445, -0.06780257821083069, 0.12859840393066407, 0.07553957104682923, 0.0010349314659833908, -0.05324898958206177, 0.06993804574012756, -0.07922866344451905, -0.042231482267379765, 0.006749225407838822, -0.11460003852844239, 0.13925184011459352, -0.058922898769378666, -0.038815417885780336, -0.032656097412109376, 0.01927289962768555, 0.08178618550300598, -0.10405992269515991, -0.004834462329745293, 0.0038118001073598863, 0.02152404636144638, -0.0370164155960083, 0.02987136542797089, 0.019898949563503267, -0.01473536640405655, 0.16266496181488038, 0.006389619410037995, -0.04479148387908936, -0.13065215349197387, 0.09659361243247987, -0.07263658046722413, -0.15429214239120484, -0.018669092655181886, 0.01743730455636978, 0.022290581464767457, 0.06726367473602295, 0.004399551078677177, -0.10370293855667115, -0.009126701951026916, 0.1967729687690735, 0.03025610148906708, 0.022494804859161378, -0.05060765743255616, 0.04986546337604523, 0.0613981306552887, -0.23132019042968752, 0.039799833297729494, 0.010864820331335068, 0.12075525522232056, -0.01753663569688797, 0.2599867105484009, 0.11751554012298585, -0.16415539979934693, 0.06797094345092773, -0.05863469243049622, -0.04436027407646179, -0.15182067155838014, -0.19060746431350709 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.07474548220634461, 0.031872764229774475, 0.07811980843544007, 0.03700558841228485, 0.03399649858474731, -0.273967719078064, -0.03499433696269989, 0.12978458404541016, -0.1506998419761658, 0.08674074411392213, 0.07200337648391723, 0.06450552940368652, -0.10612223148345948, -0.05316058993339539, 0.010471402853727342, 0.0016338083893060686, 0.004706609621644021, 0.10375856161117554, -0.044846501946449284, -0.005992800369858742, -0.000820988230407238, 0.06964386701583862, 0.02382001876831055, -0.03156031370162964, -0.060810124874114996, -0.05789181590080261, -0.10063655376434327, -0.09592553973197937, 0.09106456637382508, 0.19887318611145022, 0.10598063468933105, -0.021143829822540285, -0.16073201894760134, -0.01987150609493256, -0.09733759760856629, 0.142260479927063, -0.017245860397815706, -0.04017637372016907, -0.11436413526535034, -0.2193683385848999, -0.21573562622070314, 0.0259832501411438, -0.031746220588684086, -0.11129058599472047, -0.04015706777572632, 0.04476832151412964, 0.10923389196395875, -0.03283011019229889, -0.06884461641311646, -0.05576874613761902, -0.05764546394348145, -0.03161415755748749, 0.023777963221073152, 0.004412909969687462, 0.05373802185058594, 0.1221583127975464, 0.16654495000839234, -0.11247026920318604, -0.0890025556087494, -0.0385831505060196, -0.04468710720539093, -0.0670023262500763, 0.11197077035903931, -0.12066216468811036 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.19229420423507693, 0.08568305969238282, 0.1494484543800354, -0.13065268993377685, -0.001568211242556572, -0.05693120360374451, 0.11002843379974366, -0.23641738891601563, 0.06764607429504395, -0.06564636826515198, -0.18242566585540773, 0.10118424892425537, -0.022247700393199923, 0.036584877967834474, 0.022805333137512207, 0.028431451320648195, 0.08245572447776794, 0.0018791791051626207, 0.013157397508621216, -0.07999136447906495, -0.05226194262504578, 0.03382254838943482, 0.01052321344614029, 0.06234536170959473, 0.040389603376388555, -0.1692370414733887, -0.018290497362613678, 0.053832960128784184, -0.002985612116754055, 0.11172834634780884, 0.002624661847949028, -0.0015005087479948997, -0.09659538865089418, 0.14198639392852783, 0.023908707499504092, 0.19612269401550295, 0.06335338950157166, -0.04152314066886902, 0.11445535421371461, -0.01771373897790909, 0.06500844955444336, -0.07371851801872253, -0.09020719528198243, 0.009541187435388565, 0.05620130896568298, -0.06621914505958558, -0.10075548887252808, -0.10910329818725586, -0.021000054478645325, -0.0353366881608963, -0.004561428353190422, -0.03422845602035523, 0.09751384258270264, 0.03383155465126038, -0.10091240406036378, 0.10264973640441895, -0.007207302004098893, 0.02820853888988495, 0.0694176733493805, -0.14633450508117676, -0.1018885612487793, 0.015216419100761415, -0.09538609385490418, 0.07304183244705201 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.14805147647857667, -0.06510255932807922, -0.20699849128723147, 0.16581306457519532, 0.01609281748533249, 0.026990434527397158, 0.12980220317840577, 0.002033418230712414, -0.0382008969783783, -0.2834554433822632, 0.03036039173603058, -0.06579510569572448, -0.08589199185371399, 0.12978252172470092, 0.02014799416065216, 0.04154006242752076, 0.053117835521698, -0.05937774181365967, -0.140556001663208, -0.022007578611373903, 0.10429775714874268, 0.06517812609672546, -0.009165941178798676, 0.08906716704368592, 0.19367125034332278, 0.07293463349342347, 0.08962484002113343, -0.01424454152584076, -0.011817078292369844, -0.1563904643058777, -0.011433515697717667, -0.011341162770986558, -0.07243112921714782, -0.09651066064834596, -0.06078874468803406, -0.00722387582063675, -0.06088151335716248, -0.0673664152622223, -0.001876705512404442, -0.08907291889190674, 0.1820939302444458, -0.06783298254013062, 0.032099947333335876, 0.23374097347259523, -0.10079097747802734, -0.1577607035636902, 0.05668693780899048, -0.012685588002204895, 0.10521534681320191, 0.0742950975894928, 0.0371955543756485, -0.04042944312095642, -0.13293365240097046, 0.14467921257019042, -0.136555278301239, -0.17722311019897463, 0.0884114682674408, -0.03381205499172211, -0.021420688927173616, -0.04298055171966553, 0.06974096894264221, -0.19405333995819093, -0.08496140241622925, 0.04948927760124207 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.18675589561462402, -0.1034242868423462, 0.042625874280929565, -0.01181640475988388, -0.019065348803997042, -0.046684554219245916, 0.26962239742279054, -0.13479254245758057, -0.022425892949104312, 0.2116791009902954, 0.07726948261260987, 0.04683852195739746, 0.005095427855849266, 0.04811151325702667, 0.054077357053756714, -0.10314824581146241, -0.012824197113513947, -0.2011880397796631, -0.034978216886520384, 0.13086687326431276, 0.04140913486480713, 0.00014710002578794957, 0.0031267546117305757, 0.05129168629646302, -0.14519054889678956, 0.06991361379623413, 0.0007617498282343149, -0.020035347342491152, -0.014268770813941956, 0.0018627369776368142, 0.07435535192489624, 0.10805441141128541, -0.07731925249099732, 0.06795678734779358, -0.09333162307739258, 0.031112444400787354, -0.02261224687099457, 0.07979131937026979, 0.1283455014228821, -0.09206264019012451, -0.07802798748016358, -0.008328839391469956, -0.13920159339904786, -0.039282059669494634, -0.06758916974067689, -0.03405600488185883, -0.07164441347122193, 0.3801660299301148, 0.09079040884971619, 0.08439888954162598, -0.044396001100540164, -0.006312990188598633, -0.054104679822921754, -0.021449510753154755, -0.02023812085390091, -0.16924057006835938, 0.08627074360847474, -0.010252948105335237, 0.15057532787323, 0.006295935809612275, -0.07035152912139893, -0.10905086994171143, -0.09818996787071228, -0.00032088784500956536 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.09060446619987489, 0.06815944910049439, 0.0676908016204834, -0.06801782250404358, -0.03948495090007782, -0.14169061183929443, -0.007392466813325883, -0.07615733742713929, -0.03022497296333313, -0.1610878348350525, -0.1661598324775696, 0.17358789443969727, -0.179422926902771, 0.27593550682067874, -0.18180776834487916, -0.14299912452697755, -0.027177157998085025, 0.058970361948013306, 0.20234718322753908, -0.0025798557326197624, -0.05072344541549683, -0.07667048573493958, -0.009211211651563645, -0.2541238784790039, 0.03822027742862702, -0.02987596094608307, 0.08868646621704102, -0.17140461206436158, -0.12276364564895631, 0.10543249845504761, 0.02103593647480011, -0.16076766252517702, -0.14899330139160158, -0.04237882494926453, -0.0034475047141313553, -0.10783610343933106, 0.1925805687904358, -0.08868796229362488, 0.05979464650154114, 0.09219347834587098, 0.1454035758972168, 0.16028636693954468, 0.05922057032585144, -0.033627384901046754, -0.04132170379161835, -0.13032200336456298, -0.05062735080718994, 0.23151705265045167, -0.1093226194381714, 0.034297654032707216, 0.041820335388183597, -0.08212651014328004, -0.009143773466348648, 0.16630389690399172, -0.14091848134994509, -0.09462206363677979, -0.06475380063056946, -0.04248804450035096, -0.05955338478088379, -0.08716452121734619, -0.06150208711624146, 0.10019207000732422, -0.13630776405334474, -0.030243316292762758 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.08612256646156312, -0.08034096360206605, -0.06374370455741883, 0.06663830876350403, -0.026773354411125185, 0.08689634799957276, -0.06585529446601868, 0.20112566947937013, -0.03751471042633057, -0.0035768073052167893, 0.04481952786445618, -0.06677127480506898, 0.1326461672782898, -0.007466797530651093, -0.004932406917214394, -0.006163805350661278, 0.021717962622642518, -0.08963696956634522, 0.05053869485855103, 0.11452621221542358, 0.015466883778572083, -0.10043227672576904, 0.13554426431655883, -0.09680821299552918, 0.02050866186618805, -0.1102230191230774, 0.11036939620971681, 0.049364408850669866, 0.003812738507986069, 0.0030546581372618677, -0.0005927405785769225, 0.045616361498832705, -0.08746625185012818, -0.05966708660125733, 0.007267789542675019, 0.10616002082824708, 0.195176100730896, 0.0634386658668518, 0.21886186599731447, -0.10956711769104005, -0.025686970353126528, 0.046558919548988345, -0.09669311046600343, 0.15237711668014528, 0.015328846871852875, 0.04667506515979767, -0.048948243260383606, 0.013982659578323365, 0.27997076511383057, -0.18731197118759157, -0.16857280731201174, -0.09136556386947632, -0.15484710931777956, -0.08515225648880005, -0.0784784734249115, -0.08935453891754151, 0.06439040899276734, -0.13322954177856447, 0.011907108128070831, 0.036196070909500125, 0.0488690584897995, 0.017689244449138643, -0.07725985646247864, -0.07394009232521058 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.19100649356842042, -0.06895498037338257, -0.03972718119621277, -0.04607197940349579, -0.11280113458633423, 0.0276871919631958, -0.051423394680023195, -0.004459542781114579, -0.12261961698532105, 0.23807454109191895, 0.16961815357208254, 0.1681921720504761, -0.09646064043045044, 0.02587164342403412, 0.023903359472751618, -0.14327354431152345, 0.007821118086576461, -0.1962731957435608, 0.03592491447925568, 0.03464944362640381, 0.1041568398475647, -0.09981917142868042, -0.03981481194496155, 0.04770680963993073, 0.11615338325500489, -0.0024549422785639765, 0.04005306959152222, 0.04870153367519379, 0.051271754503250125, -0.003688352927565575, 0.13660600185394287, -0.09448701739311219, -0.06844015717506409, 0.056705820560455325, -0.02058340311050415, -0.11848874092102052, 0.12399405241012573, 0.16292757987976075, -0.021977297961711884, -0.1092896580696106, 0.02934713959693909, -0.0872158408164978, -0.17317312955856323, -0.005728119984269142, 0.0694128692150116, 0.016110631823539733, 0.07635414600372314, 0.173885715007782, -0.03257763385772705, 0.15709646940231325, 0.011747498810291291, 0.18178263902664185, 0.1311427116394043, 0.04221846163272858, -0.017012231051921844, -0.11185258626937866, -0.14409921169281006, 0.18904037475585939, -0.12132523059844971, -0.029271209239959718, -0.010796194523572923, -0.10880144834518433, -0.028362545371055606, -0.0512812077999115 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.026800337433815005, -0.045553249120712284, -0.013288058340549469, -0.13342584371566774, 0.028044170141220095, -0.09711045622825623, -0.10180418491363526, 0.019506970047950746, 0.01833391934633255, 0.03305767476558685, -0.001485770381987095, -0.08525858521461488, 0.005989468470215798, 0.02756006717681885, -0.10003303289413452, 0.008753146976232529, 0.1404545545578003, 0.15848205089569092, -0.15824944972991944, 0.0774160623550415, -0.003926799073815346, -0.13730425834655763, -0.01613735407590866, -0.03559514880180359, 0.09909091591835023, -0.08358560800552368, -0.08577026128768922, -0.0839129388332367, 0.006859922409057618, 0.12697647809982301, 0.1555114030838013, 0.05707885026931763, -0.07112857699394226, 0.09882405996322632, -0.03775469064712525, -0.1805251717567444, 0.09385851621627808, 0.013906414806842805, 0.0900723934173584, -0.03310106098651886, 0.10703600645065309, 0.117678701877594, -0.00501074604690075, -0.14484668970108033, -0.03287276923656464, 0.032003194093704224, -0.11090726852416993, -0.004538336396217347, -0.11524157524108887, 0.13101965188980103, -0.0034952022135257724, -0.033406293392181395, -0.0018429050222039224, 0.2009218454360962, -0.04842104315757752, 0.027211064100265504, -0.0805298388004303, -0.031031084060668946, 0.26006717681884767, 0.06218215227127075, -0.1421903610229492, -0.025321736931800842, -0.23276040554046631, 0.09652515053749085 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.08024563789367677, 0.0017479158937931062, -0.029779088497161866, -0.13467174768447876, -0.09931235909461976, 0.03148171901702881, -0.007785475254058838, -0.17815628051757815, 0.1670943021774292, 0.09492464661598206, 0.08214059472084045, 0.00229597557336092, -0.021252304315567017, 0.14350494146347045, 0.1673985719680786, 0.09387468695640565, 0.01464407742023468, 0.064796781539917, 0.22436017990112306, -0.07744589447975159, -0.09489328265190125, -0.10677419900894165, 0.17944488525390626, 0.25402317047119144, -0.018670910596847536, -0.09420936107635498, 0.013545466959476471, 0.09901213645935059, -0.02722761034965515, -0.07098541855812072, 0.061332625150680546, 0.15427963733673097, 0.11279566287994386, -0.051390296220779424, 0.08546427488327027, 0.08303859829902649, -0.10192511081695557, -0.08576701879501343, 0.08913640975952149, 0.04502888321876526, -0.07200014591217041, -0.029259419441223147, 0.043163385987281803, -0.15727964639663697, 0.06639650464057922, 0.2079176664352417, 0.01926161050796509, -0.005313833802938462, 0.08882319927215576, 0.009143683314323426, -0.20463931560516357, 0.09076586365699768, -0.03232886493206024, -0.048981472849845886, -0.03279180526733399, -0.046370443701744084, 0.02387528717517853, 0.010475504398345948, -0.01786205917596817, -0.08032394647598268, -0.09360095262527467, 0.10982730388641358, -0.2445227384567261, 0.047667926549911505 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.09472519755363465, -0.03539939224720001, -0.03090129792690277, 0.06937731504440307, 0.0841631293296814, 0.08215857148170472, 0.03827324211597443, -0.07290446758270264, -0.005613302066922188, -0.1502396583557129, 0.0670570433139801, -0.0011145612224936485, -0.07621145248413086, 0.050723892450332646, 0.016155926883220675, 0.06071116924285889, -0.1481245994567871, -0.11390081644058228, -0.14227949380874635, 0.010490716248750687, 0.01319117546081543, 0.17612661123275758, 0.0027509702369570735, 0.09265583157539369, -0.168451726436615, -0.010321275144815446, 0.0045165855437517164, -0.1364758253097534, -0.04897250235080719, 0.001751561276614666, -0.028595915436744692, -4.173264023847878e-05, 0.010482780635356903, -0.07688491344451905, 0.03424273431301117, -0.05216965079307556, 0.05125622153282166, -0.12493385076522828, -0.05551263689994812, -0.08840147256851197, 0.12424938678741455, 0.16973464488983156, 0.057693457603454595, 0.12266639471054078, 0.08220763802528382, -0.09074659943580628, -0.034341785311698916, -0.194957172870636, -0.03616724610328675, 0.001025781687349081, -0.18096902370452883, -0.08367710709571839, 0.02362254858016968, 0.024525585770606997, -0.13280045986175537, 0.12061246633529664, -0.041478765010833744, -0.10094006061553956, 0.08296298384666444, -0.09219676852226258, -0.01965572386980057, -0.18395668268203735, -0.07158649563789368, -0.13712165355682374 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.015501008927822114, -0.13749512434005737, -0.16760038137435915, -0.015957343578338622, -0.024945858120918277, 0.0005292646121233702, -0.003424227982759476, 0.019655740261077883, -0.00013850427931174635, -0.17776669263839723, -0.07075057029724122, 0.001149890013039112, -0.08877801299095155, -0.011622969806194306, 0.15634047985076904, -0.10481704473495485, -0.1272558093070984, -0.12144013643264771, 0.19223247766494753, 0.013391292095184327, -0.19805655479431153, 0.07540956735610962, 0.22320163249969482, 0.055808186531066895, 0.08065637946128845, -0.10513904094696046, 0.1859346389770508, -0.0021869909018278123, -0.02792966663837433, 0.03236257731914521, 0.14969110488891602, 0.03741550743579865, -0.0993257224559784, -0.11690957546234132, -0.022342611849308015, 0.0777607262134552, -0.03591165840625763, -0.07097851037979126, -0.017248231172561645, 0.12341440916061402, -0.12142173051834107, -0.05666030049324036, 0.08183537125587464, 0.0666354537010193, -0.02132152318954468, -0.019240421056747437, -0.0847210168838501, -0.09601055383682251, 0.2153719425201416, 0.1801449179649353, -0.18595236539840698, 0.16127285957336426, -0.07525823116302491, 0.08775050640106202, 0.023146675527095796, 0.14528777599334716, 0.17564786672592164, -0.10368671417236329, 0.04133850336074829, 0.17740563154220582, -0.057498782873153687, -0.021142861247062685, 0.08833968639373779, 0.01988528370857239 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.06140793561935425, -0.06436184048652649, 0.11523315906524659, -0.013370156288146973, 0.004949498176574707, 0.08005648255348206, 0.10963468551635742, 0.0354757696390152, -0.06872990131378175, -0.05327028036117554, 0.0039766736328601835, -0.08376780152320862, 0.09363985657691956, -0.09474886059761048, -0.07905229926109314, -0.08602624535560609, 0.1518759369850159, 0.08709617853164674, -0.21150560379028321, -0.06126257181167603, 0.07687706351280213, -0.06250274181365967, -0.010497970134019853, -0.11169495582580567, -0.08351926803588867, 0.02466489523649216, -0.16263219118118288, -0.0271207332611084, 0.12577441930770875, -0.03337909579277039, 0.11831195354461671, 0.04095517694950104, -0.03346216082572937, 0.11035038232803346, 0.24643218517303467, 0.040807464718818666, -0.10585719347000122, 0.07046427130699158, -0.14617383480072021, 0.14498475790023804, -0.08751547336578369, -0.10032657384872437, -0.23536403179168702, 0.08261256814002992, -0.12456581592559815, -0.12125157117843628, -0.12135236263275147, -0.07834992408752442, 0.08474083542823792, 0.0947224259376526, 0.04143068194389343, 0.15141820907592773, 0.004511300474405289, -0.013789969682693482, 0.09965080618858338, -0.002868323773145676, 0.06480404138565064, 0.04125984013080597, -0.058387881517410284, 0.0028756238520145417, 0.07504825592041016, -0.02296632379293442, -0.13004398345947266, 0.0139962837100029 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.09222066998481751, -0.22234032154083253, 0.10796185731887818, 0.10777437686920166, 0.049383679032325746, 0.007826017588377, -0.023421579599380495, 0.06168865561485291, -0.01174745485186577, 0.1090749740600586, -0.15669946670532228, -0.059118312597274784, -0.052564060688018804, 0.024444346129894257, -0.09073001146316528, 0.03283012807369232, -0.11711604595184327, -0.08779706358909607, 0.14053654670715332, -0.08228283524513245, -0.04213275909423828, -0.03903926908969879, 0.1367414951324463, -0.00352967381477356, -0.09467403888702393, 0.06079925298690796, -0.013482245802879335, -0.1317174792289734, -0.20866348743438723, -0.002012910321354866, 0.07188971638679505, -0.07995935082435608, -0.08795570731163026, -0.057525599002838136, 0.019383174180984498, -0.16300026178359986, -0.050900584459304815, 0.01555907279253006, -0.15487961769104006, -0.08814470767974854, -0.05935203433036804, 0.01746295839548111, -0.1005144476890564, -0.005775655806064606, -0.117119038105011, -0.008059851825237274, -0.12028883695602417, 0.010751903057098389, -0.01987198442220688, -0.002929440326988697, 0.012395962327718736, 0.023101867735385896, 0.3427538633346558, -0.1500353217124939, -0.05481374859809876, 0.16834579706192018, -0.03820381164550782, 0.05263921022415161, -0.13309012651443483, 0.05529638528823853, -0.07644020318984986, 0.018697941303253175, -0.007633908092975617, 0.1648673415184021 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.03764255344867706, 0.06252314448356629, -0.08133642673492432, -0.11268258094787598, 0.06433144807815552, -0.039522898197174076, -0.03474506437778473, 0.0008627898991107942, 0.04661664366722107, -0.03462494611740113, -0.04513030350208283, -0.06677202582359314, 0.027117019891738894, 0.14013447761535644, 0.02242522239685059, -0.040129780769348145, 0.0764497458934784, 0.12961498498916627, 0.16180542707443238, -0.14902653694152831, -0.04693107306957245, 0.011255753040313721, -0.16553440093994143, 0.02412039637565613, 0.11483505964279175, -0.08396324515342712, -0.05840935707092285, 0.018970261514186862, 0.0040071457624435425, 0.07750232815742493, -0.12160766124725342, 0.15116393566131592, -0.030000665783882143, -0.18491307497024537, 0.11320050954818726, -0.2719679355621338, 0.011566507071256638, 0.09367952346801758, 0.012656879425048829, -0.024508175253868104, 0.06620053648948669, 0.09823269844055177, 0.010665229707956315, -0.07267120480537415, 0.05917269587516785, 0.1593273639678955, -0.1633795976638794, 0.001398453488945961, 0.15753068923950198, -0.029233866930007936, 0.02739575803279877, -0.10995316505432129, 0.06046820282936097, -0.10559593439102173, 0.07257553339004517, 0.0024214310571551326, -0.047057971358299255, 0.08779241442680359, 0.015614312887191773, -0.10984222888946533, -0.09671270847320557, 0.05037794709205628, 0.14305567741394043, -0.17575517892837525 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.10994007587432862, -0.1602057695388794, -0.1466424345970154, -0.07306777238845825, -0.15706233978271486, -0.11594204902648926, -0.05812684893608094, 0.05270041823387146, -0.03702424466609955, -0.07946363091468811, 0.02656879723072052, 0.03269625902175904, -0.08014968633651734, -0.04103817939758301, -0.1678688406944275, -0.0316655308008194, -0.026837274432182312, 0.06164593100547791, -0.08244091272354126, 0.14961396455764772, 0.08756957054138184, -0.06555450558662415, 0.015364445745944977, 0.11277836561203003, -0.09108504056930543, -0.13682451248168945, 0.03351056277751923, 0.17025701999664308, -0.03277549147605896, 0.04328376352787018, 0.014067190885543824, 0.17064682245254517, 0.08755091428756714, 0.14099521636962892, -0.05609809756278992, -0.10966017246246339, -0.0547355592250824, 0.07703309059143067, 0.07930070757865906, -0.07786754965782167, -0.034087440371513365, 0.1037444829940796, 0.15190032720565796, -0.02171631157398224, -0.0476224422454834, 0.05687224268913269, 0.08961672186851502, -0.0578942358493805, 0.08491151928901673, -0.019353711605072023, -0.13263784646987917, 0.008700138330459595, 0.166831111907959, 0.058093261718750004, 0.2662726640701294, -0.043479064106941225, 0.018697060644626617, 0.11037739515304566, -0.05567897558212281, -0.037726446986198425, -0.10105462074279786, 0.19103424549102785, -0.1323408603668213, -0.07831295132637024 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.02982381880283356, -0.11043833494186402, 0.05210648775100708, -0.03848797976970673, -0.02069036811590195, -0.008593076467514038, -0.16326345205307008, 0.04537819027900696, -0.04538040459156037, 0.01979672908782959, 0.0723100483417511, 0.03300351202487946, -0.06471814513206482, 0.05289435982704163, 0.021496559679508212, 0.05969064831733704, -0.016975829005241395, 0.05365965366363526, 0.0422580361366272, -0.09724028706550598, -0.13651628494262696, 0.006751685589551926, -0.15844736099243165, 0.08811311125755311, 0.1402844786643982, 0.15612796545028687, -0.24375643730163576, 0.00676342323422432, 0.14558079242706298, -0.08087175488471986, -0.07436721920967103, 0.07017833590507508, 0.025227078795433046, -0.13698594570159914, -0.13629409074783325, 0.0016491487622261047, -0.055079942941665655, 0.014081065356731415, 0.06380240321159363, -0.16853821277618408, -0.15199744701385498, 0.015919177234172823, 0.07837445139884949, 0.013603121042251587, -0.17126293182373048, -0.011448704451322556, -0.024165315926074984, -0.058881318569183355, -0.12288951873779297, 0.1177232027053833, 0.11389738321304321, 0.004730449989438057, -0.03550831079483032, 0.089151531457901, -0.009181103110313416, 0.006478574126958847, -0.10555312633514405, -0.0210207536816597, -0.01555043011903763, 0.0682169497013092, 0.04066572487354279, 0.05537812113761902, -0.04383561611175538, 0.09736258387565613 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.13263858556747438, 0.005216507986187936, -0.05757879614830017, 0.009435158967971802, 0.08801789283752443, 0.019429293274879456, -0.15677677392959596, -0.18297404050827026, 0.040326455235481264, 0.10819351673126221, 0.0024612125009298327, 0.22259442806243898, 0.04722471535205841, 0.02461477816104889, 0.009721922874450685, -0.0987286686897278, -0.013413278758525849, 0.040469545125961306, 0.0547480583190918, 0.13462210893630983, 0.19470986127853396, 0.07776041626930237, 0.08444542884826661, 0.10329891443252565, 0.033584472537040715, -0.0940270245075226, 0.11149245500564575, -0.04630217552185059, 0.005549222603440285, -0.11041239500045777, -0.015901225805282592, 0.007328543066978455, 0.22856011390686037, 0.07794605493545533, -0.07917565107345581, -0.12217763662338257, 0.07920414805412293, 0.04734882712364197, 0.03400245904922485, 0.030301105976104737, -0.02165328711271286, -0.09880967140197755, 0.19013400077819825, -0.08383111357688905, 0.06129523515701294, 0.02516302466392517, 0.01586519330739975, -0.016615313291549683, 0.08883941173553467, 0.10399917364120484, 0.0982841193675995, 0.023962391912937166, -0.07515689730644226, 0.07845553159713746, 0.06512100100517274, 0.09448599815368652, 0.059561192989349365, -0.04442030787467957, 0.06513020396232605, 0.15656158924102784, 0.04834717214107514, -0.0587481439113617, -0.07431524991989136, -0.11109322309494019 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.0694567859172821, -0.073956298828125, 0.014195317029953004, -0.004217145219445229, -0.1698105812072754, 0.0875832736492157, -0.11791579723358155, 0.0037005722522735597, -0.09180047512054444, -0.14449402093887329, 0.07199837565422058, 0.1370988965034485, 0.09304084777832032, 0.08635196685791016, 0.10156652927398682, -0.04012347161769867, 0.12213850021362305, 0.01914508789777756, -0.0813794493675232, -0.04674931764602661, -0.048024204373359684, -0.0035742733627557757, -0.12128678560256959, -0.0923911988735199, 0.03191184103488922, -0.06599426865577698, 0.001374848745763302, 0.044702416658401495, 0.14849256277084352, -0.07891021966934204, 0.024005693197250367, -0.046189382672309875, 0.03759274184703827, 0.018342864513397217, -0.02680097818374634, -0.0652761459350586, 0.014410649240016938, 0.18552461862564087, 0.08630171418190002, 0.07335948944091797, -0.07842214107513429, -0.050534069538116455, -0.05249394178390503, 0.05614498853683472, 0.012955452501773835, -0.12108556032180787, 0.11781893968582154, -0.1381411671638489, -0.05164874196052552, -0.1613422989845276, -0.07669630646705627, -0.09782206416130067, 0.03097035884857178, 0.11464320421218872, 0.019677008688449862, -0.16144609451293945, -0.13753019571304323, 0.07468138337135315, 0.007824115455150604, -0.07244850993156433, -0.16724445819854739, 0.12579499483108522, 0.08919675946235657, 0.23856215476989748 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.014963454008102417, 0.1543014645576477, -0.031932842731475834, -0.028688719868659975, 0.03872804641723633, -0.01151074692606926, 0.13014280796051025, 0.07679024338722229, 0.025249662995338443, -0.12105430364608766, -0.11029062271118165, -0.050984323024749756, -0.017531640827655792, -0.08047537207603456, 0.07010413408279419, -0.08000825047492982, -0.01928418278694153, 0.0880511224269867, -0.1449117660522461, -0.08624932765960694, -0.052325093746185304, 0.03360157310962677, 0.028376954793930056, 0.14121516942977905, 0.03072647750377655, 0.021301716566085815, -0.18447011709213257, 0.010571999847888947, -0.2123889923095703, 0.00012484558392316105, 0.01001594066619873, -0.06264902353286743, -0.09135944843292237, 0.028791543841362, -0.04966081976890564, -0.14589407444000244, 0.0233458086848259, 0.14156562089920044, -0.05896977782249451, 0.2011864185333252, 0.07312936186790467, -0.2018281936645508, 0.027441698312759402, -0.12595961093902588, -0.1405967116355896, -0.03937337100505829, -0.12201172113418579, -0.0612638533115387, -0.008332628756761551, 0.04646424055099488, 0.11760603189468384, -0.15230001211166383, -0.13417049646377563, 0.007198519259691239, 0.09696237444877626, -0.0208599328994751, 0.06230102181434632, -0.06374391913414001, 0.037711629271507265, -0.08029174208641053, 0.06220752000808716, -0.08586683869361877, 0.046387276053428655, -0.1178944230079651 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ -0.04351535439491272, -0.12928569316864014, 0.06915387511253357, -0.006162640079855919, -0.22555642127990724, 0.04574156105518341, 0.08952602744102478, 0.05898798108100892, 0.0820321798324585, -0.0788669228553772, -0.010169727355241777, 0.03248696029186249, -0.14219198226928711, 0.23466470241546633, -0.04174773395061493, -0.10431294441223145, -0.0033319283276796344, -0.04540803730487824, -0.13177173137664797, 0.06225191354751587, 0.10212247371673584, 0.08864915370941162, -0.02821958661079407, -0.13804306983947753, -0.16384236812591554, 0.05993693470954895, -0.03611131310462952, 0.002776213176548481, 0.045958489179611206, -0.015993978083133697, -0.047517511248588565, 0.17108365297317507, 0.08097407221794128, -0.0584375262260437, 0.13363862037658691, 0.016987796127796172, 0.01118723973631859, -0.03027460277080536, -0.027253276109695437, -0.08974094986915589, -0.0343235045671463, -0.0913121521472931, -0.1099970817565918, -0.033275875449180606, 0.11794199943542481, 0.008525257557630539, -0.09415456652641296, -0.038128986954689026, 0.013105444610118866, 0.08641213178634644, -0.025092241168022156, 0.01623630374670029, -0.23069577217102052, 0.020823317766189578, -0.17186498641967773, 0.02974056601524353, -0.016459472477436066, 0.087175852060318, 0.015004657208919525, -0.002266894094645977, 0.08609732985496521, 0.04361870884895325, 0.06176608204841614, 0.0029122145846486092 })));
        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.18492637872695925, 0.02670508623123169, 0.0694749116897583, -0.010730527341365814, -0.10225068330764771, -0.09646120071411134, 0.13749641180038452, -0.036385881900787356, 0.13599485158920288, 0.10946383476257325, 0.001927938498556614, 0.09971179962158204, 0.19979560375213623, -0.12791610956192018, -0.10974966287612915, -0.08570781946182252, -0.15308034420013428, 0.008595197647809983, 0.05410082340240479, -0.06311919689178468, 0.07086952924728394, -0.027213177084922793, -0.11582032442092896, -0.05359145402908325, -0.17763886451721192, -0.02563169002532959, 0.060896235704422, -0.042554220557212835, 0.028005784749984743, -0.08319575190544129, 0.1272953748703003, 0.14144150018692017, 0.10799312591552734, 0.03655914664268494, -0.012004112452268602, 0.009082593023777008, -0.06757031679153443, 0.09896794557571412, 0.07375215291976929, 0.13362350463867187, 0.007077407836914063, -0.017845681309700014, -0.0404352217912674, -0.02040078788995743, 0.08366360068321228, 0.009942198544740677, 0.025471553206443787, -0.12489489316940308, -0.08790960311889649, -0.1506463170051575, -0.1776205062866211, -0.0010291316546499729, 0.07315924763679504, -0.1518868684768677, -0.10569567680358888, 0.036308467388153076, 0.04146135151386261, 0.03745002746582032, -0.14672492742538454, -0.15243951082229615, -0.16909977197647097, 0.15714631080627442, 0.2496417045593262, 0.05595475435256958 })));

        return hiddenLayer;
    }

    public static HiddenLayer getHiddenLayer3() {
        final HiddenLayer hiddenLayer = new HiddenLayer();

        hiddenLayer.addNeuron(new Neuron(0.0, new DataList(new double[]{ 0.08810371160507202, 0.07152084708213806, -0.046207752823829655, 0.09132069945335389, -0.07546525001525879, -0.053497713804245, 0.045664244890213014, 0.15095769166946413, -0.0228171244263649, -0.08903415203094484, 0.12097718715667725, -0.12648000717163085, 0.1838181495666504, -0.09840826988220215, 0.06409484744071961, 0.0926691234111786, 0.07850340604782105, 0.02270026355981827, 0.00495295524597168, -0.1653180480003357, -0.07808196544647217, 0.0724644660949707, 0.06633691787719727, -0.10378812551498413, 0.034697902202606205, 0.025203099846839907, 0.17509188652038576, -0.04184011518955231, -0.05198572874069214, -0.09234429597854615, -0.0999278485774994, 0.03749483525753022, -0.07043411135673523, 0.10747038125991822, -0.06272990703582763, 0.15339956283569336, 0.041772544384002686, 0.025838363170623782, -0.11504285335540772, 0.03291141986846924, 0.004552197828888893, 0.06320825815200806, -0.0510847270488739, -0.14536298513412477, 0.0275221586227417, 0.01397872418165207, 0.024389235675334933, 0.10056501626968384, -0.09396406412124635, -0.23817501068115235, 0.04750269949436188, 0.04059125185012818, -0.047705629467964174, 0.017059820890426635, -0.10477807521820069, -0.21061971187591555, -0.16929115056991578, 0.004236114025115967, 0.13827104568481446, -0.03895183801651001, 0.08139379024505616, -0.0594331979751587, -0.005543902143836022, 0.07965607047080994 })));

        return hiddenLayer;
    }

    public static NeuralNetwork getNeuralNetwork() {
        final HiddenLayer hiddenLayer1 = Factory.getHiddenLayer1();
        final ActivationLayer activationLayer1 = new ActivationLayer(new RectifiedLinearUnit());

        final HiddenLayer hiddenLayer2 = Factory.getHiddenLayer2();
        final ActivationLayer activationLayer2 = new ActivationLayer(new RectifiedLinearUnit());

        final HiddenLayer hiddenLayer3 = Factory.getHiddenLayer3();
        final ActivationLayer activationLayer3 = new ActivationLayer(new Linear());

        final LossLayer lossLayer1 = new LossLayer(new MeanSquaredError());


        final NeuralNetwork neuralNetwork = new NeuralNetwork(1);

        neuralNetwork.addHiddenLayer(hiddenLayer1);
        neuralNetwork.addActivationLayer(activationLayer1);

        neuralNetwork.addHiddenLayer(hiddenLayer2);
        neuralNetwork.addActivationLayer(activationLayer2);

        neuralNetwork.addHiddenLayer(hiddenLayer3);
        neuralNetwork.addActivationLayer(activationLayer3);

        neuralNetwork.addLossLayer(lossLayer1);

        return neuralNetwork;
    }
}
